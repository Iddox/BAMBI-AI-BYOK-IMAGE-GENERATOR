/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/(auth)/login/page";
exports.ids = ["app/(auth)/login/page"];
exports.modules = {

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "./request-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/request-async-storage.external");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "./static-generation-async-storage.external":
/*!***************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external" ***!
  \***************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/static-generation-async-storage.external");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2F(auth)%2Flogin%2Fpage&page=%2F(auth)%2Flogin%2Fpage&appPaths=%2F(auth)%2Flogin%2Fpage&pagePath=private-next-app-dir%2F(auth)%2Flogin%2Fpage.tsx&appDir=%2Fworkspace%2Fhiiiiiiiii%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fworkspace%2Fhiiiiiiiii&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2F(auth)%2Flogin%2Fpage&page=%2F(auth)%2Flogin%2Fpage&appPaths=%2F(auth)%2Flogin%2Fpage&pagePath=private-next-app-dir%2F(auth)%2Flogin%2Fpage.tsx&appDir=%2Fworkspace%2Fhiiiiiiiii%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fworkspace%2Fhiiiiiiiii&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalError: () => (/* reexport default from dynamic */ next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2___default.a),\n/* harmony export */   __next_app__: () => (/* binding */ __next_app__),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   pages: () => (/* binding */ pages),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   tree: () => (/* binding */ tree)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-page/module.compiled */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/module.compiled.js?5bc9\");\n/* harmony import */ var next_dist_server_future_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/client/components/error-boundary */ \"(rsc)/./node_modules/next/dist/client/components/error-boundary.js\");\n/* harmony import */ var next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/app-render/entry-base */ \"(rsc)/./node_modules/next/dist/server/app-render/entry-base.js\");\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__) if([\"default\",\"tree\",\"pages\",\"GlobalError\",\"originalPathname\",\"__next_app__\",\"routeModule\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\nconst tree = {\n        children: [\n        '',\n        {\n        children: [\n        '(auth)',\n        {\n        children: [\n        'login',\n        {\n        children: ['__PAGE__', {}, {\n          page: [() => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/(auth)/login/page.tsx */ \"(rsc)/./app/(auth)/login/page.tsx\")), \"/workspace/hiiiiiiiii/app/(auth)/login/page.tsx\"],\n          \n        }]\n      },\n        {\n        \n        \n      }\n      ]\n      },\n        {\n        'layout': [() => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/(auth)/layout.tsx */ \"(rsc)/./app/(auth)/layout.tsx\")), \"/workspace/hiiiiiiiii/app/(auth)/layout.tsx\"],\n'not-found': [() => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/not-found-error */ \"(rsc)/./node_modules/next/dist/client/components/not-found-error.js\", 23)), \"next/dist/client/components/not-found-error\"],\n        metadata: {\n    icon: [(async (props) => (await Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! next-metadata-image-loader?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./app/favicon.ico?__next_metadata__ */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-metadata-image-loader.js?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./app/favicon.ico?__next_metadata__\"))).default(props))],\n    apple: [],\n    openGraph: [],\n    twitter: [],\n    manifest: undefined\n  }\n      }\n      ]\n      },\n        {\n        'layout': [() => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/layout.tsx */ \"(rsc)/./app/layout.tsx\")), \"/workspace/hiiiiiiiii/app/layout.tsx\"],\n'not-found': [() => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/not-found-error */ \"(rsc)/./node_modules/next/dist/client/components/not-found-error.js\", 23)), \"next/dist/client/components/not-found-error\"],\n        metadata: {\n    icon: [(async (props) => (await Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! next-metadata-image-loader?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./app/favicon.ico?__next_metadata__ */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-metadata-image-loader.js?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./app/favicon.ico?__next_metadata__\"))).default(props))],\n    apple: [],\n    openGraph: [],\n    twitter: [],\n    manifest: undefined\n  }\n      }\n      ]\n      }.children;\nconst pages = [\"/workspace/hiiiiiiiii/app/(auth)/login/page.tsx\"];\n\n\nconst __next_app_require__ = __webpack_require__\nconst __next_app_load_chunk__ = () => Promise.resolve()\nconst originalPathname = \"/(auth)/login/page\";\nconst __next_app__ = {\n    require: __next_app_require__,\n    loadChunk: __next_app_load_chunk__\n};\n\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppPageRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n        page: \"/(auth)/login/page\",\n        pathname: \"/login\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\",\n        appPaths: []\n    },\n    userland: {\n        loaderTree: tree\n    }\n});\n\n//# sourceMappingURL=app-page.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkYoYXV0aCklMkZsb2dpbiUyRnBhZ2UmcGFnZT0lMkYoYXV0aCklMkZsb2dpbiUyRnBhZ2UmYXBwUGF0aHM9JTJGKGF1dGgpJTJGbG9naW4lMkZwYWdlJnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGKGF1dGgpJTJGbG9naW4lMkZwYWdlLnRzeCZhcHBEaXI9JTJGd29ya3NwYWNlJTJGaGlpaWlpaWlpaSUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGd29ya3NwYWNlJTJGaGlpaWlpaWlpaSZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFvRztBQUNyQztBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakMsdUJBQXVCLGtLQUFvRjtBQUMzRztBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLHlCQUF5QiwwSkFBZ0Y7QUFDekcsb0JBQW9CLDBOQUFnRjtBQUNwRztBQUNBLG9DQUFvQyw4ZUFBaU87QUFDclE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSx5QkFBeUIsNElBQXlFO0FBQ2xHLG9CQUFvQiwwTkFBZ0Y7QUFDcEc7QUFDQSxvQ0FBb0MsOGVBQWlPO0FBQ3JRO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ3VCO0FBQzZEO0FBQ3BGLDZCQUE2QixtQkFBbUI7QUFDaEQ7QUFDTztBQUNBO0FBQ1A7QUFDQTtBQUNBO0FBQ3VEO0FBQ3ZEO0FBQ08sd0JBQXdCLDhHQUFrQjtBQUNqRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYW1iaS1haS8/OGQzMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBQYWdlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcGFnZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG4vLyBXZSBpbmplY3QgdGhlIHRyZWUgYW5kIHBhZ2VzIGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCB0cmVlID0ge1xuICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAnJyxcbiAgICAgICAge1xuICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAnKGF1dGgpJyxcbiAgICAgICAge1xuICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAnbG9naW4nLFxuICAgICAgICB7XG4gICAgICAgIGNoaWxkcmVuOiBbJ19fUEFHRV9fJywge30sIHtcbiAgICAgICAgICBwYWdlOiBbKCkgPT4gaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvd29ya3NwYWNlL2hpaWlpaWlpaWkvYXBwLyhhdXRoKS9sb2dpbi9wYWdlLnRzeFwiKSwgXCIvd29ya3NwYWNlL2hpaWlpaWlpaWkvYXBwLyhhdXRoKS9sb2dpbi9wYWdlLnRzeFwiXSxcbiAgICAgICAgICBcbiAgICAgICAgfV1cbiAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgfVxuICAgICAgXVxuICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAnbGF5b3V0JzogWygpID0+IGltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL3dvcmtzcGFjZS9oaWlpaWlpaWlpL2FwcC8oYXV0aCkvbGF5b3V0LnRzeFwiKSwgXCIvd29ya3NwYWNlL2hpaWlpaWlpaWkvYXBwLyhhdXRoKS9sYXlvdXQudHN4XCJdLFxuJ25vdC1mb3VuZCc6IFsoKSA9PiBpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIm5leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9ub3QtZm91bmQtZXJyb3JcIiksIFwibmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL25vdC1mb3VuZC1lcnJvclwiXSxcbiAgICAgICAgbWV0YWRhdGE6IHtcbiAgICBpY29uOiBbKGFzeW5jIChwcm9wcykgPT4gKGF3YWl0IGltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwibmV4dC1tZXRhZGF0YS1pbWFnZS1sb2FkZXI/dHlwZT1mYXZpY29uJnNlZ21lbnQ9JmJhc2VQYXRoPSZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzIS93b3Jrc3BhY2UvaGlpaWlpaWlpaS9hcHAvZmF2aWNvbi5pY28/X19uZXh0X21ldGFkYXRhX19cIikpLmRlZmF1bHQocHJvcHMpKV0sXG4gICAgYXBwbGU6IFtdLFxuICAgIG9wZW5HcmFwaDogW10sXG4gICAgdHdpdHRlcjogW10sXG4gICAgbWFuaWZlc3Q6IHVuZGVmaW5lZFxuICB9XG4gICAgICB9XG4gICAgICBdXG4gICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICdsYXlvdXQnOiBbKCkgPT4gaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvd29ya3NwYWNlL2hpaWlpaWlpaWkvYXBwL2xheW91dC50c3hcIiksIFwiL3dvcmtzcGFjZS9oaWlpaWlpaWlpL2FwcC9sYXlvdXQudHN4XCJdLFxuJ25vdC1mb3VuZCc6IFsoKSA9PiBpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIm5leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9ub3QtZm91bmQtZXJyb3JcIiksIFwibmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL25vdC1mb3VuZC1lcnJvclwiXSxcbiAgICAgICAgbWV0YWRhdGE6IHtcbiAgICBpY29uOiBbKGFzeW5jIChwcm9wcykgPT4gKGF3YWl0IGltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwibmV4dC1tZXRhZGF0YS1pbWFnZS1sb2FkZXI/dHlwZT1mYXZpY29uJnNlZ21lbnQ9JmJhc2VQYXRoPSZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzIS93b3Jrc3BhY2UvaGlpaWlpaWlpaS9hcHAvZmF2aWNvbi5pY28/X19uZXh0X21ldGFkYXRhX19cIikpLmRlZmF1bHQocHJvcHMpKV0sXG4gICAgYXBwbGU6IFtdLFxuICAgIG9wZW5HcmFwaDogW10sXG4gICAgdHdpdHRlcjogW10sXG4gICAgbWFuaWZlc3Q6IHVuZGVmaW5lZFxuICB9XG4gICAgICB9XG4gICAgICBdXG4gICAgICB9LmNoaWxkcmVuO1xuY29uc3QgcGFnZXMgPSBbXCIvd29ya3NwYWNlL2hpaWlpaWlpaWkvYXBwLyhhdXRoKS9sb2dpbi9wYWdlLnRzeFwiXTtcbmV4cG9ydCB7IHRyZWUsIHBhZ2VzIH07XG5leHBvcnQgeyBkZWZhdWx0IGFzIEdsb2JhbEVycm9yIH0gZnJvbSBcIm5leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9lcnJvci1ib3VuZGFyeVwiO1xuY29uc3QgX19uZXh0X2FwcF9yZXF1aXJlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fXG5jb25zdCBfX25leHRfYXBwX2xvYWRfY2h1bmtfXyA9ICgpID0+IFByb21pc2UucmVzb2x2ZSgpXG5leHBvcnQgY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiLyhhdXRoKS9sb2dpbi9wYWdlXCI7XG5leHBvcnQgY29uc3QgX19uZXh0X2FwcF9fID0ge1xuICAgIHJlcXVpcmU6IF9fbmV4dF9hcHBfcmVxdWlyZV9fLFxuICAgIGxvYWRDaHVuazogX19uZXh0X2FwcF9sb2FkX2NodW5rX19cbn07XG5leHBvcnQgKiBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9hcHAtcmVuZGVyL2VudHJ5LWJhc2VcIjtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFBhZ2VSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1BBR0UsXG4gICAgICAgIHBhZ2U6IFwiLyhhdXRoKS9sb2dpbi9wYWdlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9sb2dpblwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiLFxuICAgICAgICBhcHBQYXRoczogW11cbiAgICB9LFxuICAgIHVzZXJsYW5kOiB7XG4gICAgICAgIGxvYWRlclRyZWU6IHRyZWVcbiAgICB9XG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXBhZ2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2F(auth)%2Flogin%2Fpage&page=%2F(auth)%2Flogin%2Fpage&appPaths=%2F(auth)%2Flogin%2Fpage&pagePath=private-next-app-dir%2F(auth)%2Flogin%2Fpage.tsx&appDir=%2Fworkspace%2Fhiiiiiiiii%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fworkspace%2Fhiiiiiiiii&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2Fworkspace%2Fhiiiiiiiii%2Fapp%2Fglobals.css&modules=%2Fworkspace%2Fhiiiiiiiii%2Fcomponents%2Fdebug%2FDebugPanel.tsx&modules=%2Fworkspace%2Fhiiiiiiiii%2Fcomponents%2Fproviders.tsx&modules=%2Fworkspace%2Fhiiiiiiiii%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%22path%22%3A%22app%2Flayout.tsx%22%2C%22import%22%3A%22Inter%22%2C%22arguments%22%3A%5B%7B%22subsets%22%3A%5B%22latin%22%5D%7D%5D%2C%22variableName%22%3A%22inter%22%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2Fworkspace%2Fhiiiiiiiii%2Fapp%2Fglobals.css&modules=%2Fworkspace%2Fhiiiiiiiii%2Fcomponents%2Fdebug%2FDebugPanel.tsx&modules=%2Fworkspace%2Fhiiiiiiiii%2Fcomponents%2Fproviders.tsx&modules=%2Fworkspace%2Fhiiiiiiiii%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%22path%22%3A%22app%2Flayout.tsx%22%2C%22import%22%3A%22Inter%22%2C%22arguments%22%3A%5B%7B%22subsets%22%3A%5B%22latin%22%5D%7D%5D%2C%22variableName%22%3A%22inter%22%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./components/debug/DebugPanel.tsx */ \"(ssr)/./components/debug/DebugPanel.tsx\"));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./components/providers.tsx */ \"(ssr)/./components/providers.tsx\"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTJGd29ya3NwYWNlJTJGaGlpaWlpaWlpaSUyRmFwcCUyRmdsb2JhbHMuY3NzJm1vZHVsZXM9JTJGd29ya3NwYWNlJTJGaGlpaWlpaWlpaSUyRmNvbXBvbmVudHMlMkZkZWJ1ZyUyRkRlYnVnUGFuZWwudHN4Jm1vZHVsZXM9JTJGd29ya3NwYWNlJTJGaGlpaWlpaWlpaSUyRmNvbXBvbmVudHMlMkZwcm92aWRlcnMudHN4Jm1vZHVsZXM9JTJGd29ya3NwYWNlJTJGaGlpaWlpaWlpaSUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZmb250JTJGZ29vZ2xlJTJGdGFyZ2V0LmNzcyUzRiU3QiUyMnBhdGglMjIlM0ElMjJhcHAlMkZsYXlvdXQudHN4JTIyJTJDJTIyaW1wb3J0JTIyJTNBJTIySW50ZXIlMjIlMkMlMjJhcmd1bWVudHMlMjIlM0ElNUIlN0IlMjJzdWJzZXRzJTIyJTNBJTVCJTIybGF0aW4lMjIlNUQlN0QlNUQlMkMlMjJ2YXJpYWJsZU5hbWUlMjIlM0ElMjJpbnRlciUyMiU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsOEtBQTBGO0FBQzFGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFtYmktYWkvPzExZmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvd29ya3NwYWNlL2hpaWlpaWlpaWkvY29tcG9uZW50cy9kZWJ1Zy9EZWJ1Z1BhbmVsLnRzeFwiKTtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL3dvcmtzcGFjZS9oaWlpaWlpaWlpL2NvbXBvbmVudHMvcHJvdmlkZXJzLnRzeFwiKSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2Fworkspace%2Fhiiiiiiiii%2Fapp%2Fglobals.css&modules=%2Fworkspace%2Fhiiiiiiiii%2Fcomponents%2Fdebug%2FDebugPanel.tsx&modules=%2Fworkspace%2Fhiiiiiiiii%2Fcomponents%2Fproviders.tsx&modules=%2Fworkspace%2Fhiiiiiiiii%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%22path%22%3A%22app%2Flayout.tsx%22%2C%22import%22%3A%22Inter%22%2C%22arguments%22%3A%5B%7B%22subsets%22%3A%5B%22latin%22%5D%7D%5D%2C%22variableName%22%3A%22inter%22%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2Fworkspace%2Fhiiiiiiiii%2Fcomponents%2Fauth%2FLoginForm.tsx&server=true!":
/*!****************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2Fworkspace%2Fhiiiiiiiii%2Fcomponents%2Fauth%2FLoginForm.tsx&server=true! ***!
  \****************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./components/auth/LoginForm.tsx */ \"(ssr)/./components/auth/LoginForm.tsx\"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTJGd29ya3NwYWNlJTJGaGlpaWlpaWlpaSUyRmNvbXBvbmVudHMlMkZhdXRoJTJGTG9naW5Gb3JtLnRzeCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYW1iaS1haS8/MTBhOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi93b3Jrc3BhY2UvaGlpaWlpaWlpaS9jb21wb25lbnRzL2F1dGgvTG9naW5Gb3JtLnRzeFwiKSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2Fworkspace%2Fhiiiiiiiii%2Fcomponents%2Fauth%2FLoginForm.tsx&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2Fworkspace%2Fhiiiiiiiii%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fapp-router.js&modules=%2Fworkspace%2Fhiiiiiiiii%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Ferror-boundary.js&modules=%2Fworkspace%2Fhiiiiiiiii%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js&modules=%2Fworkspace%2Fhiiiiiiiii%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fnot-found-boundary.js&modules=%2Fworkspace%2Fhiiiiiiiii%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js&modules=%2Fworkspace%2Fhiiiiiiiii%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fstatic-generation-searchparams-bailout-provider.js&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2Fworkspace%2Fhiiiiiiiii%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fapp-router.js&modules=%2Fworkspace%2Fhiiiiiiiii%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Ferror-boundary.js&modules=%2Fworkspace%2Fhiiiiiiiii%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js&modules=%2Fworkspace%2Fhiiiiiiiii%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fnot-found-boundary.js&modules=%2Fworkspace%2Fhiiiiiiiii%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js&modules=%2Fworkspace%2Fhiiiiiiiii%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fstatic-generation-searchparams-bailout-provider.js&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/app-router.js */ \"(ssr)/./node_modules/next/dist/client/components/app-router.js\", 23));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/error-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/error-boundary.js\", 23));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/layout-router.js */ \"(ssr)/./node_modules/next/dist/client/components/layout-router.js\", 23));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/not-found-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/not-found-boundary.js\", 23));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/render-from-template-context.js */ \"(ssr)/./node_modules/next/dist/client/components/render-from-template-context.js\", 23));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/static-generation-searchparams-bailout-provider.js */ \"(ssr)/./node_modules/next/dist/client/components/static-generation-searchparams-bailout-provider.js\", 23))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTJGd29ya3NwYWNlJTJGaGlpaWlpaWlpaSUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmFwcC1yb3V0ZXIuanMmbW9kdWxlcz0lMkZ3b3Jrc3BhY2UlMkZoaWlpaWlpaWlpJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGZXJyb3ItYm91bmRhcnkuanMmbW9kdWxlcz0lMkZ3b3Jrc3BhY2UlMkZoaWlpaWlpaWlpJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGbGF5b3V0LXJvdXRlci5qcyZtb2R1bGVzPSUyRndvcmtzcGFjZSUyRmhpaWlpaWlpaWklMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZub3QtZm91bmQtYm91bmRhcnkuanMmbW9kdWxlcz0lMkZ3b3Jrc3BhY2UlMkZoaWlpaWlpaWlpJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGcmVuZGVyLWZyb20tdGVtcGxhdGUtY29udGV4dC5qcyZtb2R1bGVzPSUyRndvcmtzcGFjZSUyRmhpaWlpaWlpaWklMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZzdGF0aWMtZ2VuZXJhdGlvbi1zZWFyY2hwYXJhbXMtYmFpbG91dC1wcm92aWRlci5qcyZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsa09BQWlIO0FBQ2pILDBPQUFxSDtBQUNySCx3T0FBb0g7QUFDcEgsa1BBQXlIO0FBQ3pILHNRQUFtSTtBQUNuSSIsInNvdXJjZXMiOlsid2VicGFjazovL2JhbWJpLWFpLz9kNTY4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL3dvcmtzcGFjZS9oaWlpaWlpaWlpL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvYXBwLXJvdXRlci5qc1wiKTtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL3dvcmtzcGFjZS9oaWlpaWlpaWlpL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvZXJyb3ItYm91bmRhcnkuanNcIik7XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi93b3Jrc3BhY2UvaGlpaWlpaWlpaS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2xheW91dC1yb3V0ZXIuanNcIik7XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi93b3Jrc3BhY2UvaGlpaWlpaWlpaS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL25vdC1mb3VuZC1ib3VuZGFyeS5qc1wiKTtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL3dvcmtzcGFjZS9oaWlpaWlpaWlpL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvcmVuZGVyLWZyb20tdGVtcGxhdGUtY29udGV4dC5qc1wiKTtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL3dvcmtzcGFjZS9oaWlpaWlpaWlpL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvc3RhdGljLWdlbmVyYXRpb24tc2VhcmNocGFyYW1zLWJhaWxvdXQtcHJvdmlkZXIuanNcIikiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2Fworkspace%2Fhiiiiiiiii%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fapp-router.js&modules=%2Fworkspace%2Fhiiiiiiiii%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Ferror-boundary.js&modules=%2Fworkspace%2Fhiiiiiiiii%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js&modules=%2Fworkspace%2Fhiiiiiiiii%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fnot-found-boundary.js&modules=%2Fworkspace%2Fhiiiiiiiii%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js&modules=%2Fworkspace%2Fhiiiiiiiii%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fstatic-generation-searchparams-bailout-provider.js&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./components/auth/LoginForm.tsx":
/*!***************************************!*\
  !*** ./components/auth/LoginForm.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LoginForm: () => (/* binding */ LoginForm)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/link */ \"(ssr)/./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/navigation */ \"(ssr)/./node_modules/next/navigation.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_navigation__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _components_ui_button__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/ui/button */ \"(ssr)/./components/ui/button.tsx\");\n/* harmony import */ var _components_ui_input__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/components/ui/input */ \"(ssr)/./components/ui/input.tsx\");\n/* harmony import */ var _contexts_AuthContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/contexts/AuthContext */ \"(ssr)/./contexts/AuthContext.tsx\");\n/* __next_internal_client_entry_do_not_use__ LoginForm auto */ \n\n\n\n\n\n\nfunction LoginForm() {\n    const [email, setEmail] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [password, setPassword] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_3__.useRouter)();\n    const { signIn, isLoading } = (0,_contexts_AuthContext__WEBPACK_IMPORTED_MODULE_6__.useAuth)();\n    const handleSubmit = async (e)=>{\n        e.preventDefault();\n        setError(\"\");\n        try {\n            // Utilisation du contexte Auth pour la connexion\n            await signIn(email, password);\n        // La redirection est gérée dans le contexte Auth\n        } catch (err) {\n            // Gestion spécifique de l'erreur \"Email not confirmed\"\n            if (err.message && err.message.includes(\"Email not confirmed\")) {\n                // Rediriger vers la page de confirmation d'email\n                router.push(`/email-confirmation?email=${encodeURIComponent(email)}`);\n                return;\n            }\n            setError(err.message || \"Email ou mot de passe incorrect.\");\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"bg-bambi-card p-8 rounded-xl border border-bambi-border shadow-lg\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                className: \"text-2xl font-bold mb-6 text-center\",\n                children: \"Se connecter \\xe0 Bambi AI\"\n            }, void 0, false, {\n                fileName: \"/workspace/hiiiiiiiii/components/auth/LoginForm.tsx\",\n                lineNumber: 40,\n                columnNumber: 7\n            }, this),\n            error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mb-4 p-3 bg-red-500/10 border border-red-500/30 rounded-lg text-red-500 text-sm\",\n                children: error\n            }, void 0, false, {\n                fileName: \"/workspace/hiiiiiiiii/components/auth/LoginForm.tsx\",\n                lineNumber: 43,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                onSubmit: handleSubmit,\n                className: \"space-y-4\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                htmlFor: \"email\",\n                                className: \"block text-sm font-medium mb-1\",\n                                children: \"Email\"\n                            }, void 0, false, {\n                                fileName: \"/workspace/hiiiiiiiii/components/auth/LoginForm.tsx\",\n                                lineNumber: 50,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_input__WEBPACK_IMPORTED_MODULE_5__.Input, {\n                                id: \"email\",\n                                type: \"email\",\n                                value: email,\n                                onChange: (e)=>setEmail(e.target.value),\n                                required: true,\n                                className: \"w-full bg-bambi-background border-bambi-border\",\n                                placeholder: \"votre@email.com\"\n                            }, void 0, false, {\n                                fileName: \"/workspace/hiiiiiiiii/components/auth/LoginForm.tsx\",\n                                lineNumber: 53,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/workspace/hiiiiiiiii/components/auth/LoginForm.tsx\",\n                        lineNumber: 49,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                htmlFor: \"password\",\n                                className: \"block text-sm font-medium mb-1\",\n                                children: \"Mot de passe\"\n                            }, void 0, false, {\n                                fileName: \"/workspace/hiiiiiiiii/components/auth/LoginForm.tsx\",\n                                lineNumber: 65,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_input__WEBPACK_IMPORTED_MODULE_5__.Input, {\n                                id: \"password\",\n                                type: \"password\",\n                                value: password,\n                                onChange: (e)=>setPassword(e.target.value),\n                                required: true,\n                                className: \"w-full bg-bambi-background border-bambi-border\"\n                            }, void 0, false, {\n                                fileName: \"/workspace/hiiiiiiiii/components/auth/LoginForm.tsx\",\n                                lineNumber: 68,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/workspace/hiiiiiiiii/components/auth/LoginForm.tsx\",\n                        lineNumber: 64,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex justify-end\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                            href: \"/forgot-password\",\n                            className: \"text-sm text-bambi-accent hover:underline\",\n                            children: \"Mot de passe oubli\\xe9 ?\"\n                        }, void 0, false, {\n                            fileName: \"/workspace/hiiiiiiiii/components/auth/LoginForm.tsx\",\n                            lineNumber: 79,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/workspace/hiiiiiiiii/components/auth/LoginForm.tsx\",\n                        lineNumber: 78,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_4__.Button, {\n                        type: \"submit\",\n                        className: \"w-full btn-primary\",\n                        disabled: isLoading,\n                        children: isLoading ? \"Connexion en cours...\" : \"Connexion\"\n                    }, void 0, false, {\n                        fileName: \"/workspace/hiiiiiiiii/components/auth/LoginForm.tsx\",\n                        lineNumber: 84,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"text-center mt-4\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"text-bambi-subtext text-sm\",\n                            children: [\n                                \"Pas encore de compte ?\",\n                                \" \",\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                    href: \"/signup\",\n                                    className: \"text-bambi-accent hover:underline\",\n                                    children: \"S'inscrire\"\n                                }, void 0, false, {\n                                    fileName: \"/workspace/hiiiiiiiii/components/auth/LoginForm.tsx\",\n                                    lineNumber: 95,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/workspace/hiiiiiiiii/components/auth/LoginForm.tsx\",\n                            lineNumber: 93,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/workspace/hiiiiiiiii/components/auth/LoginForm.tsx\",\n                        lineNumber: 92,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/workspace/hiiiiiiiii/components/auth/LoginForm.tsx\",\n                lineNumber: 48,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/workspace/hiiiiiiiii/components/auth/LoginForm.tsx\",\n        lineNumber: 39,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9jb21wb25lbnRzL2F1dGgvTG9naW5Gb3JtLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBRWlDO0FBQ0o7QUFDZTtBQUNJO0FBQ0Y7QUFDRztBQUUxQyxTQUFTTTtJQUNkLE1BQU0sQ0FBQ0MsT0FBT0MsU0FBUyxHQUFHUiwrQ0FBUUEsQ0FBQztJQUNuQyxNQUFNLENBQUNTLFVBQVVDLFlBQVksR0FBR1YsK0NBQVFBLENBQUM7SUFDekMsTUFBTSxDQUFDVyxPQUFPQyxTQUFTLEdBQUdaLCtDQUFRQSxDQUFDO0lBQ25DLE1BQU1hLFNBQVNYLDBEQUFTQTtJQUN4QixNQUFNLEVBQUVZLE1BQU0sRUFBRUMsU0FBUyxFQUFFLEdBQUdWLDhEQUFPQTtJQUVyQyxNQUFNVyxlQUFlLE9BQU9DO1FBQzFCQSxFQUFFQyxjQUFjO1FBQ2hCTixTQUFTO1FBRVQsSUFBSTtZQUNGLGlEQUFpRDtZQUNqRCxNQUFNRSxPQUFPUCxPQUFPRTtRQUVwQixpREFBaUQ7UUFDbkQsRUFBRSxPQUFPVSxLQUFVO1lBQ2pCLHVEQUF1RDtZQUN2RCxJQUFJQSxJQUFJQyxPQUFPLElBQUlELElBQUlDLE9BQU8sQ0FBQ0MsUUFBUSxDQUFDLHdCQUF3QjtnQkFDOUQsaURBQWlEO2dCQUNqRFIsT0FBT1MsSUFBSSxDQUFDLENBQUMsMEJBQTBCLEVBQUVDLG1CQUFtQmhCLE9BQU8sQ0FBQztnQkFDcEU7WUFDRjtZQUVBSyxTQUFTTyxJQUFJQyxPQUFPLElBQUk7UUFDMUI7SUFDRjtJQUVBLHFCQUNFLDhEQUFDSTtRQUFJQyxXQUFVOzswQkFDYiw4REFBQ0M7Z0JBQUdELFdBQVU7MEJBQXNDOzs7Ozs7WUFFbkRkLHVCQUNDLDhEQUFDYTtnQkFBSUMsV0FBVTswQkFDWmQ7Ozs7OzswQkFJTCw4REFBQ2dCO2dCQUFLQyxVQUFVWjtnQkFBY1MsV0FBVTs7a0NBQ3RDLDhEQUFDRDs7MENBQ0MsOERBQUNLO2dDQUFNQyxTQUFRO2dDQUFRTCxXQUFVOzBDQUFpQzs7Ozs7OzBDQUdsRSw4REFBQ3JCLHVEQUFLQTtnQ0FDSjJCLElBQUc7Z0NBQ0hDLE1BQUs7Z0NBQ0xDLE9BQU8xQjtnQ0FDUDJCLFVBQVUsQ0FBQ2pCLElBQU1ULFNBQVNTLEVBQUVrQixNQUFNLENBQUNGLEtBQUs7Z0NBQ3hDRyxRQUFRO2dDQUNSWCxXQUFVO2dDQUNWWSxhQUFZOzs7Ozs7Ozs7Ozs7a0NBSWhCLDhEQUFDYjs7MENBQ0MsOERBQUNLO2dDQUFNQyxTQUFRO2dDQUFXTCxXQUFVOzBDQUFpQzs7Ozs7OzBDQUdyRSw4REFBQ3JCLHVEQUFLQTtnQ0FDSjJCLElBQUc7Z0NBQ0hDLE1BQUs7Z0NBQ0xDLE9BQU94QjtnQ0FDUHlCLFVBQVUsQ0FBQ2pCLElBQU1QLFlBQVlPLEVBQUVrQixNQUFNLENBQUNGLEtBQUs7Z0NBQzNDRyxRQUFRO2dDQUNSWCxXQUFVOzs7Ozs7Ozs7Ozs7a0NBSWQsOERBQUNEO3dCQUFJQyxXQUFVO2tDQUNiLDRFQUFDeEIsa0RBQUlBOzRCQUFDcUMsTUFBSzs0QkFBbUJiLFdBQVU7c0NBQTRDOzs7Ozs7Ozs7OztrQ0FLdEYsOERBQUN0Qix5REFBTUE7d0JBQ0w2QixNQUFLO3dCQUNMUCxXQUFVO3dCQUNWYyxVQUFVeEI7a0NBRVRBLFlBQVksMEJBQTBCOzs7Ozs7a0NBR3pDLDhEQUFDUzt3QkFBSUMsV0FBVTtrQ0FDYiw0RUFBQ2U7NEJBQUtmLFdBQVU7O2dDQUE2QjtnQ0FDcEI7OENBQ3ZCLDhEQUFDeEIsa0RBQUlBO29DQUFDcUMsTUFBSztvQ0FBVWIsV0FBVTs4Q0FBb0M7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBUS9FIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFtYmktYWkvLi9jb21wb25lbnRzL2F1dGgvTG9naW5Gb3JtLnRzeD8yZTI4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IExpbmsgZnJvbSBcIm5leHQvbGlua1wiO1xuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSBcIm5leHQvbmF2aWdhdGlvblwiO1xuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSBcIkAvY29tcG9uZW50cy91aS9idXR0b25cIjtcbmltcG9ydCB7IElucHV0IH0gZnJvbSBcIkAvY29tcG9uZW50cy91aS9pbnB1dFwiO1xuaW1wb3J0IHsgdXNlQXV0aCB9IGZyb20gXCJAL2NvbnRleHRzL0F1dGhDb250ZXh0XCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBMb2dpbkZvcm0oKSB7XG4gIGNvbnN0IFtlbWFpbCwgc2V0RW1haWxdID0gdXNlU3RhdGUoXCJcIik7XG4gIGNvbnN0IFtwYXNzd29yZCwgc2V0UGFzc3dvcmRdID0gdXNlU3RhdGUoXCJcIik7XG4gIGNvbnN0IFtlcnJvciwgc2V0RXJyb3JdID0gdXNlU3RhdGUoXCJcIik7XG4gIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpO1xuICBjb25zdCB7IHNpZ25JbiwgaXNMb2FkaW5nIH0gPSB1c2VBdXRoKCk7XG5cbiAgY29uc3QgaGFuZGxlU3VibWl0ID0gYXN5bmMgKGU6IFJlYWN0LkZvcm1FdmVudCkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBzZXRFcnJvcihcIlwiKTtcblxuICAgIHRyeSB7XG4gICAgICAvLyBVdGlsaXNhdGlvbiBkdSBjb250ZXh0ZSBBdXRoIHBvdXIgbGEgY29ubmV4aW9uXG4gICAgICBhd2FpdCBzaWduSW4oZW1haWwsIHBhc3N3b3JkKTtcblxuICAgICAgLy8gTGEgcmVkaXJlY3Rpb24gZXN0IGfDqXLDqWUgZGFucyBsZSBjb250ZXh0ZSBBdXRoXG4gICAgfSBjYXRjaCAoZXJyOiBhbnkpIHtcbiAgICAgIC8vIEdlc3Rpb24gc3DDqWNpZmlxdWUgZGUgbCdlcnJldXIgXCJFbWFpbCBub3QgY29uZmlybWVkXCJcbiAgICAgIGlmIChlcnIubWVzc2FnZSAmJiBlcnIubWVzc2FnZS5pbmNsdWRlcyhcIkVtYWlsIG5vdCBjb25maXJtZWRcIikpIHtcbiAgICAgICAgLy8gUmVkaXJpZ2VyIHZlcnMgbGEgcGFnZSBkZSBjb25maXJtYXRpb24gZCdlbWFpbFxuICAgICAgICByb3V0ZXIucHVzaChgL2VtYWlsLWNvbmZpcm1hdGlvbj9lbWFpbD0ke2VuY29kZVVSSUNvbXBvbmVudChlbWFpbCl9YCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgc2V0RXJyb3IoZXJyLm1lc3NhZ2UgfHwgXCJFbWFpbCBvdSBtb3QgZGUgcGFzc2UgaW5jb3JyZWN0LlwiKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImJnLWJhbWJpLWNhcmQgcC04IHJvdW5kZWQteGwgYm9yZGVyIGJvcmRlci1iYW1iaS1ib3JkZXIgc2hhZG93LWxnXCI+XG4gICAgICA8aDEgY2xhc3NOYW1lPVwidGV4dC0yeGwgZm9udC1ib2xkIG1iLTYgdGV4dC1jZW50ZXJcIj5TZSBjb25uZWN0ZXIgw6AgQmFtYmkgQUk8L2gxPlxuXG4gICAgICB7ZXJyb3IgJiYgKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1iLTQgcC0zIGJnLXJlZC01MDAvMTAgYm9yZGVyIGJvcmRlci1yZWQtNTAwLzMwIHJvdW5kZWQtbGcgdGV4dC1yZWQtNTAwIHRleHQtc21cIj5cbiAgICAgICAgICB7ZXJyb3J9XG4gICAgICAgIDwvZGl2PlxuICAgICAgKX1cblxuICAgICAgPGZvcm0gb25TdWJtaXQ9e2hhbmRsZVN1Ym1pdH0gY2xhc3NOYW1lPVwic3BhY2UteS00XCI+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGxhYmVsIGh0bWxGb3I9XCJlbWFpbFwiIGNsYXNzTmFtZT1cImJsb2NrIHRleHQtc20gZm9udC1tZWRpdW0gbWItMVwiPlxuICAgICAgICAgICAgRW1haWxcbiAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgIDxJbnB1dFxuICAgICAgICAgICAgaWQ9XCJlbWFpbFwiXG4gICAgICAgICAgICB0eXBlPVwiZW1haWxcIlxuICAgICAgICAgICAgdmFsdWU9e2VtYWlsfVxuICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRFbWFpbChlLnRhcmdldC52YWx1ZSl9XG4gICAgICAgICAgICByZXF1aXJlZFxuICAgICAgICAgICAgY2xhc3NOYW1lPVwidy1mdWxsIGJnLWJhbWJpLWJhY2tncm91bmQgYm9yZGVyLWJhbWJpLWJvcmRlclwiXG4gICAgICAgICAgICBwbGFjZWhvbGRlcj1cInZvdHJlQGVtYWlsLmNvbVwiXG4gICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICA8bGFiZWwgaHRtbEZvcj1cInBhc3N3b3JkXCIgY2xhc3NOYW1lPVwiYmxvY2sgdGV4dC1zbSBmb250LW1lZGl1bSBtYi0xXCI+XG4gICAgICAgICAgICBNb3QgZGUgcGFzc2VcbiAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgIDxJbnB1dFxuICAgICAgICAgICAgaWQ9XCJwYXNzd29yZFwiXG4gICAgICAgICAgICB0eXBlPVwicGFzc3dvcmRcIlxuICAgICAgICAgICAgdmFsdWU9e3Bhc3N3b3JkfVxuICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRQYXNzd29yZChlLnRhcmdldC52YWx1ZSl9XG4gICAgICAgICAgICByZXF1aXJlZFxuICAgICAgICAgICAgY2xhc3NOYW1lPVwidy1mdWxsIGJnLWJhbWJpLWJhY2tncm91bmQgYm9yZGVyLWJhbWJpLWJvcmRlclwiXG4gICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGp1c3RpZnktZW5kXCI+XG4gICAgICAgICAgPExpbmsgaHJlZj1cIi9mb3Jnb3QtcGFzc3dvcmRcIiBjbGFzc05hbWU9XCJ0ZXh0LXNtIHRleHQtYmFtYmktYWNjZW50IGhvdmVyOnVuZGVybGluZVwiPlxuICAgICAgICAgICAgTW90IGRlIHBhc3NlIG91Ymxpw6kgP1xuICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPEJ1dHRvblxuICAgICAgICAgIHR5cGU9XCJzdWJtaXRcIlxuICAgICAgICAgIGNsYXNzTmFtZT1cInctZnVsbCBidG4tcHJpbWFyeVwiXG4gICAgICAgICAgZGlzYWJsZWQ9e2lzTG9hZGluZ31cbiAgICAgICAgPlxuICAgICAgICAgIHtpc0xvYWRpbmcgPyBcIkNvbm5leGlvbiBlbiBjb3Vycy4uLlwiIDogXCJDb25uZXhpb25cIn1cbiAgICAgICAgPC9CdXR0b24+XG5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlciBtdC00XCI+XG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwidGV4dC1iYW1iaS1zdWJ0ZXh0IHRleHQtc21cIj5cbiAgICAgICAgICAgIFBhcyBlbmNvcmUgZGUgY29tcHRlID97XCIgXCJ9XG4gICAgICAgICAgICA8TGluayBocmVmPVwiL3NpZ251cFwiIGNsYXNzTmFtZT1cInRleHQtYmFtYmktYWNjZW50IGhvdmVyOnVuZGVybGluZVwiPlxuICAgICAgICAgICAgICBTJ2luc2NyaXJlXG4gICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgPC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZm9ybT5cbiAgICA8L2Rpdj5cbiAgKTtcbn1cbiJdLCJuYW1lcyI6WyJ1c2VTdGF0ZSIsIkxpbmsiLCJ1c2VSb3V0ZXIiLCJCdXR0b24iLCJJbnB1dCIsInVzZUF1dGgiLCJMb2dpbkZvcm0iLCJlbWFpbCIsInNldEVtYWlsIiwicGFzc3dvcmQiLCJzZXRQYXNzd29yZCIsImVycm9yIiwic2V0RXJyb3IiLCJyb3V0ZXIiLCJzaWduSW4iLCJpc0xvYWRpbmciLCJoYW5kbGVTdWJtaXQiLCJlIiwicHJldmVudERlZmF1bHQiLCJlcnIiLCJtZXNzYWdlIiwiaW5jbHVkZXMiLCJwdXNoIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiZGl2IiwiY2xhc3NOYW1lIiwiaDEiLCJmb3JtIiwib25TdWJtaXQiLCJsYWJlbCIsImh0bWxGb3IiLCJpZCIsInR5cGUiLCJ2YWx1ZSIsIm9uQ2hhbmdlIiwidGFyZ2V0IiwicmVxdWlyZWQiLCJwbGFjZWhvbGRlciIsImhyZWYiLCJkaXNhYmxlZCIsInNwYW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./components/auth/LoginForm.tsx\n");

/***/ }),

/***/ "(ssr)/./components/debug/DebugPanel.tsx":
/*!*****************************************!*\
  !*** ./components/debug/DebugPanel.tsx ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DebugPanel: () => (/* binding */ DebugPanel)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/utils/debug */ \"(ssr)/./utils/debug.ts\");\n/* __next_internal_client_entry_do_not_use__ DebugPanel auto */ \n\n\n/**\n * Composant pour afficher l'historique de débogage\n * Utile pour identifier les problèmes de chargement et les boucles infinies\n */ function DebugPanel() {\n    const [history, setHistory] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [isVisible, setIsVisible] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Mettre à jour l'historique toutes les secondes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!isVisible) return;\n        const interval = setInterval(()=>{\n            setHistory((0,_utils_debug__WEBPACK_IMPORTED_MODULE_2__.getDebugHistory)());\n        }, 1000);\n        return ()=>clearInterval(interval);\n    }, [\n        isVisible\n    ]);\n    // Charger l'historique initial\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        setHistory((0,_utils_debug__WEBPACK_IMPORTED_MODULE_2__.getDebugHistory)());\n    }, []);\n    if (!isVisible) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n            className: \"fixed bottom-4 right-4 bg-red-500 text-white p-2 rounded-full z-50 opacity-50 hover:opacity-100\",\n            onClick: ()=>setIsVisible(true),\n            suppressHydrationWarning: true,\n            children: \"Debug\"\n        }, void 0, false, {\n            fileName: \"/workspace/hiiiiiiiii/components/debug/DebugPanel.tsx\",\n            lineNumber: 32,\n            columnNumber: 7\n        }, this);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"fixed inset-0 bg-black/90 text-white p-4 z-50 overflow-auto\",\n        suppressHydrationWarning: true,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex justify-between items-center mb-4\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                        className: \"text-xl font-bold\",\n                        children: \"Historique de d\\xe9bogage\"\n                    }, void 0, false, {\n                        fileName: \"/workspace/hiiiiiiiii/components/debug/DebugPanel.tsx\",\n                        lineNumber: 45,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex gap-2\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                className: \"bg-red-500 text-white px-3 py-1 rounded\",\n                                onClick: ()=>{\n                                    (0,_utils_debug__WEBPACK_IMPORTED_MODULE_2__.clearDebugHistory)();\n                                    setHistory([]);\n                                },\n                                children: \"Effacer\"\n                            }, void 0, false, {\n                                fileName: \"/workspace/hiiiiiiiii/components/debug/DebugPanel.tsx\",\n                                lineNumber: 47,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                className: \"bg-gray-500 text-white px-3 py-1 rounded\",\n                                onClick: ()=>setIsVisible(false),\n                                children: \"Fermer\"\n                            }, void 0, false, {\n                                fileName: \"/workspace/hiiiiiiiii/components/debug/DebugPanel.tsx\",\n                                lineNumber: 56,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/workspace/hiiiiiiiii/components/debug/DebugPanel.tsx\",\n                        lineNumber: 46,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/workspace/hiiiiiiiii/components/debug/DebugPanel.tsx\",\n                lineNumber: 44,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"overflow-x-auto\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"table\", {\n                    className: \"w-full border-collapse\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"thead\", {\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tr\", {\n                                className: \"bg-gray-800\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                        className: \"border border-gray-700 p-2 text-left\",\n                                        children: \"Timestamp\"\n                                    }, void 0, false, {\n                                        fileName: \"/workspace/hiiiiiiiii/components/debug/DebugPanel.tsx\",\n                                        lineNumber: 69,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                        className: \"border border-gray-700 p-2 text-left\",\n                                        children: \"Composant\"\n                                    }, void 0, false, {\n                                        fileName: \"/workspace/hiiiiiiiii/components/debug/DebugPanel.tsx\",\n                                        lineNumber: 70,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                        className: \"border border-gray-700 p-2 text-left\",\n                                        children: \"\\xc9v\\xe9nement\"\n                                    }, void 0, false, {\n                                        fileName: \"/workspace/hiiiiiiiii/components/debug/DebugPanel.tsx\",\n                                        lineNumber: 71,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                        className: \"border border-gray-700 p-2 text-left\",\n                                        children: \"Donn\\xe9es\"\n                                    }, void 0, false, {\n                                        fileName: \"/workspace/hiiiiiiiii/components/debug/DebugPanel.tsx\",\n                                        lineNumber: 72,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/workspace/hiiiiiiiii/components/debug/DebugPanel.tsx\",\n                                lineNumber: 68,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/workspace/hiiiiiiiii/components/debug/DebugPanel.tsx\",\n                            lineNumber: 67,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tbody\", {\n                            children: history.length === 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tr\", {\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                    colSpan: 4,\n                                    className: \"border border-gray-700 p-2 text-center\",\n                                    children: \"Aucun \\xe9v\\xe9nement enregistr\\xe9\"\n                                }, void 0, false, {\n                                    fileName: \"/workspace/hiiiiiiiii/components/debug/DebugPanel.tsx\",\n                                    lineNumber: 78,\n                                    columnNumber: 17\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/workspace/hiiiiiiiii/components/debug/DebugPanel.tsx\",\n                                lineNumber: 77,\n                                columnNumber: 15\n                            }, this) : history.map((entry, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tr\", {\n                                    className: index % 2 === 0 ? \"bg-gray-900\" : \"bg-gray-800\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                            className: \"border border-gray-700 p-2\",\n                                            children: new Date(entry.timestamp).toLocaleTimeString()\n                                        }, void 0, false, {\n                                            fileName: \"/workspace/hiiiiiiiii/components/debug/DebugPanel.tsx\",\n                                            lineNumber: 85,\n                                            columnNumber: 19\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                            className: \"border border-gray-700 p-2\",\n                                            children: entry.component\n                                        }, void 0, false, {\n                                            fileName: \"/workspace/hiiiiiiiii/components/debug/DebugPanel.tsx\",\n                                            lineNumber: 86,\n                                            columnNumber: 19\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                            className: \"border border-gray-700 p-2\",\n                                            children: entry.event\n                                        }, void 0, false, {\n                                            fileName: \"/workspace/hiiiiiiiii/components/debug/DebugPanel.tsx\",\n                                            lineNumber: 87,\n                                            columnNumber: 19\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                            className: \"border border-gray-700 p-2\",\n                                            children: entry.data ? JSON.stringify(entry.data) : \"-\"\n                                        }, void 0, false, {\n                                            fileName: \"/workspace/hiiiiiiiii/components/debug/DebugPanel.tsx\",\n                                            lineNumber: 88,\n                                            columnNumber: 19\n                                        }, this)\n                                    ]\n                                }, index, true, {\n                                    fileName: \"/workspace/hiiiiiiiii/components/debug/DebugPanel.tsx\",\n                                    lineNumber: 84,\n                                    columnNumber: 17\n                                }, this))\n                        }, void 0, false, {\n                            fileName: \"/workspace/hiiiiiiiii/components/debug/DebugPanel.tsx\",\n                            lineNumber: 75,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/workspace/hiiiiiiiii/components/debug/DebugPanel.tsx\",\n                    lineNumber: 66,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/workspace/hiiiiiiiii/components/debug/DebugPanel.tsx\",\n                lineNumber: 65,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/workspace/hiiiiiiiii/components/debug/DebugPanel.tsx\",\n        lineNumber: 43,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9jb21wb25lbnRzL2RlYnVnL0RlYnVnUGFuZWwudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFFNEM7QUFDdUI7QUFFbkU7OztDQUdDLEdBQ00sU0FBU0k7SUFDZCxNQUFNLENBQUNDLFNBQVNDLFdBQVcsR0FBR04sK0NBQVFBLENBQVEsRUFBRTtJQUNoRCxNQUFNLENBQUNPLFdBQVdDLGFBQWEsR0FBR1IsK0NBQVFBLENBQUM7SUFFM0MsaURBQWlEO0lBQ2pEQyxnREFBU0EsQ0FBQztRQUNSLElBQUksQ0FBQ00sV0FBVztRQUVoQixNQUFNRSxXQUFXQyxZQUFZO1lBQzNCSixXQUFXSiw2REFBZUE7UUFDNUIsR0FBRztRQUVILE9BQU8sSUFBTVMsY0FBY0Y7SUFDN0IsR0FBRztRQUFDRjtLQUFVO0lBRWQsK0JBQStCO0lBQy9CTixnREFBU0EsQ0FBQztRQUNSSyxXQUFXSiw2REFBZUE7SUFDNUIsR0FBRyxFQUFFO0lBRUwsSUFBSSxDQUFDSyxXQUFXO1FBQ2QscUJBQ0UsOERBQUNLO1lBQ0NDLFdBQVU7WUFDVkMsU0FBUyxJQUFNTixhQUFhO1lBQzVCTyx3QkFBd0I7c0JBQ3pCOzs7Ozs7SUFJTDtJQUVBLHFCQUNFLDhEQUFDQztRQUFJSCxXQUFVO1FBQThERSx3QkFBd0I7OzBCQUNuRyw4REFBQ0M7Z0JBQUlILFdBQVU7O2tDQUNiLDhEQUFDSTt3QkFBR0osV0FBVTtrQ0FBb0I7Ozs7OztrQ0FDbEMsOERBQUNHO3dCQUFJSCxXQUFVOzswQ0FDYiw4REFBQ0Q7Z0NBQ0NDLFdBQVU7Z0NBQ1ZDLFNBQVM7b0NBQ1BYLCtEQUFpQkE7b0NBQ2pCRyxXQUFXLEVBQUU7Z0NBQ2Y7MENBQ0Q7Ozs7OzswQ0FHRCw4REFBQ007Z0NBQ0NDLFdBQVU7Z0NBQ1ZDLFNBQVMsSUFBTU4sYUFBYTswQ0FDN0I7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFNTCw4REFBQ1E7Z0JBQUlILFdBQVU7MEJBQ2IsNEVBQUNLO29CQUFNTCxXQUFVOztzQ0FDZiw4REFBQ007c0NBQ0MsNEVBQUNDO2dDQUFHUCxXQUFVOztrREFDWiw4REFBQ1E7d0NBQUdSLFdBQVU7a0RBQXVDOzs7Ozs7a0RBQ3JELDhEQUFDUTt3Q0FBR1IsV0FBVTtrREFBdUM7Ozs7OztrREFDckQsOERBQUNRO3dDQUFHUixXQUFVO2tEQUF1Qzs7Ozs7O2tEQUNyRCw4REFBQ1E7d0NBQUdSLFdBQVU7a0RBQXVDOzs7Ozs7Ozs7Ozs7Ozs7OztzQ0FHekQsOERBQUNTO3NDQUNFakIsUUFBUWtCLE1BQU0sS0FBSyxrQkFDbEIsOERBQUNIOzBDQUNDLDRFQUFDSTtvQ0FBR0MsU0FBUztvQ0FBR1osV0FBVTs4Q0FBeUM7Ozs7Ozs7Ozs7dUNBS3JFUixRQUFRcUIsR0FBRyxDQUFDLENBQUNDLE9BQU9DLHNCQUNsQiw4REFBQ1I7b0NBQWVQLFdBQVdlLFFBQVEsTUFBTSxJQUFJLGdCQUFnQjs7c0RBQzNELDhEQUFDSjs0Q0FBR1gsV0FBVTtzREFBOEIsSUFBSWdCLEtBQUtGLE1BQU1HLFNBQVMsRUFBRUMsa0JBQWtCOzs7Ozs7c0RBQ3hGLDhEQUFDUDs0Q0FBR1gsV0FBVTtzREFBOEJjLE1BQU1LLFNBQVM7Ozs7OztzREFDM0QsOERBQUNSOzRDQUFHWCxXQUFVO3NEQUE4QmMsTUFBTU0sS0FBSzs7Ozs7O3NEQUN2RCw4REFBQ1Q7NENBQUdYLFdBQVU7c0RBQ1hjLE1BQU1PLElBQUksR0FBR0MsS0FBS0MsU0FBUyxDQUFDVCxNQUFNTyxJQUFJLElBQUk7Ozs7Ozs7bUNBTHRDTjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZXpCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFtYmktYWkvLi9jb21wb25lbnRzL2RlYnVnL0RlYnVnUGFuZWwudHN4PzQ0YjQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgZ2V0RGVidWdIaXN0b3J5LCBjbGVhckRlYnVnSGlzdG9yeSB9IGZyb20gJ0AvdXRpbHMvZGVidWcnO1xuXG4vKipcbiAqIENvbXBvc2FudCBwb3VyIGFmZmljaGVyIGwnaGlzdG9yaXF1ZSBkZSBkw6lib2dhZ2VcbiAqIFV0aWxlIHBvdXIgaWRlbnRpZmllciBsZXMgcHJvYmzDqG1lcyBkZSBjaGFyZ2VtZW50IGV0IGxlcyBib3VjbGVzIGluZmluaWVzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBEZWJ1Z1BhbmVsKCkge1xuICBjb25zdCBbaGlzdG9yeSwgc2V0SGlzdG9yeV0gPSB1c2VTdGF0ZTxhbnlbXT4oW10pO1xuICBjb25zdCBbaXNWaXNpYmxlLCBzZXRJc1Zpc2libGVdID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIC8vIE1ldHRyZSDDoCBqb3VyIGwnaGlzdG9yaXF1ZSB0b3V0ZXMgbGVzIHNlY29uZGVzXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFpc1Zpc2libGUpIHJldHVybjtcblxuICAgIGNvbnN0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgc2V0SGlzdG9yeShnZXREZWJ1Z0hpc3RvcnkoKSk7XG4gICAgfSwgMTAwMCk7XG5cbiAgICByZXR1cm4gKCkgPT4gY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7XG4gIH0sIFtpc1Zpc2libGVdKTtcblxuICAvLyBDaGFyZ2VyIGwnaGlzdG9yaXF1ZSBpbml0aWFsXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgc2V0SGlzdG9yeShnZXREZWJ1Z0hpc3RvcnkoKSk7XG4gIH0sIFtdKTtcblxuICBpZiAoIWlzVmlzaWJsZSkge1xuICAgIHJldHVybiAoXG4gICAgICA8YnV0dG9uXG4gICAgICAgIGNsYXNzTmFtZT1cImZpeGVkIGJvdHRvbS00IHJpZ2h0LTQgYmctcmVkLTUwMCB0ZXh0LXdoaXRlIHAtMiByb3VuZGVkLWZ1bGwgei01MCBvcGFjaXR5LTUwIGhvdmVyOm9wYWNpdHktMTAwXCJcbiAgICAgICAgb25DbGljaz17KCkgPT4gc2V0SXNWaXNpYmxlKHRydWUpfVxuICAgICAgICBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcbiAgICAgID5cbiAgICAgICAgRGVidWdcbiAgICAgIDwvYnV0dG9uPlxuICAgICk7XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiZml4ZWQgaW5zZXQtMCBiZy1ibGFjay85MCB0ZXh0LXdoaXRlIHAtNCB6LTUwIG92ZXJmbG93LWF1dG9cIiBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmc+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXgganVzdGlmeS1iZXR3ZWVuIGl0ZW1zLWNlbnRlciBtYi00XCI+XG4gICAgICAgIDxoMiBjbGFzc05hbWU9XCJ0ZXh0LXhsIGZvbnQtYm9sZFwiPkhpc3RvcmlxdWUgZGUgZMOpYm9nYWdlPC9oMj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGdhcC0yXCI+XG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgY2xhc3NOYW1lPVwiYmctcmVkLTUwMCB0ZXh0LXdoaXRlIHB4LTMgcHktMSByb3VuZGVkXCJcbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgY2xlYXJEZWJ1Z0hpc3RvcnkoKTtcbiAgICAgICAgICAgICAgc2V0SGlzdG9yeShbXSk7XG4gICAgICAgICAgICB9fVxuICAgICAgICAgID5cbiAgICAgICAgICAgIEVmZmFjZXJcbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJiZy1ncmF5LTUwMCB0ZXh0LXdoaXRlIHB4LTMgcHktMSByb3VuZGVkXCJcbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHNldElzVmlzaWJsZShmYWxzZSl9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgRmVybWVyXG4gICAgICAgICAgPC9idXR0b24+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwib3ZlcmZsb3cteC1hdXRvXCI+XG4gICAgICAgIDx0YWJsZSBjbGFzc05hbWU9XCJ3LWZ1bGwgYm9yZGVyLWNvbGxhcHNlXCI+XG4gICAgICAgICAgPHRoZWFkPlxuICAgICAgICAgICAgPHRyIGNsYXNzTmFtZT1cImJnLWdyYXktODAwXCI+XG4gICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJib3JkZXIgYm9yZGVyLWdyYXktNzAwIHAtMiB0ZXh0LWxlZnRcIj5UaW1lc3RhbXA8L3RoPlxuICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwiYm9yZGVyIGJvcmRlci1ncmF5LTcwMCBwLTIgdGV4dC1sZWZ0XCI+Q29tcG9zYW50PC90aD5cbiAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cImJvcmRlciBib3JkZXItZ3JheS03MDAgcC0yIHRleHQtbGVmdFwiPsOJdsOpbmVtZW50PC90aD5cbiAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cImJvcmRlciBib3JkZXItZ3JheS03MDAgcC0yIHRleHQtbGVmdFwiPkRvbm7DqWVzPC90aD5cbiAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgPC90aGVhZD5cbiAgICAgICAgICA8dGJvZHk+XG4gICAgICAgICAgICB7aGlzdG9yeS5sZW5ndGggPT09IDAgPyAoXG4gICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICA8dGQgY29sU3Bhbj17NH0gY2xhc3NOYW1lPVwiYm9yZGVyIGJvcmRlci1ncmF5LTcwMCBwLTIgdGV4dC1jZW50ZXJcIj5cbiAgICAgICAgICAgICAgICAgIEF1Y3VuIMOpdsOpbmVtZW50IGVucmVnaXN0csOpXG4gICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgIGhpc3RvcnkubWFwKChlbnRyeSwgaW5kZXgpID0+IChcbiAgICAgICAgICAgICAgICA8dHIga2V5PXtpbmRleH0gY2xhc3NOYW1lPXtpbmRleCAlIDIgPT09IDAgPyAnYmctZ3JheS05MDAnIDogJ2JnLWdyYXktODAwJ30+XG4gICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwiYm9yZGVyIGJvcmRlci1ncmF5LTcwMCBwLTJcIj57bmV3IERhdGUoZW50cnkudGltZXN0YW1wKS50b0xvY2FsZVRpbWVTdHJpbmcoKX08L3RkPlxuICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cImJvcmRlciBib3JkZXItZ3JheS03MDAgcC0yXCI+e2VudHJ5LmNvbXBvbmVudH08L3RkPlxuICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cImJvcmRlciBib3JkZXItZ3JheS03MDAgcC0yXCI+e2VudHJ5LmV2ZW50fTwvdGQ+XG4gICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwiYm9yZGVyIGJvcmRlci1ncmF5LTcwMCBwLTJcIj5cbiAgICAgICAgICAgICAgICAgICAge2VudHJ5LmRhdGEgPyBKU09OLnN0cmluZ2lmeShlbnRyeS5kYXRhKSA6ICctJ31cbiAgICAgICAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgICAgKSlcbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC90Ym9keT5cbiAgICAgICAgPC90YWJsZT5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufVxuIl0sIm5hbWVzIjpbInVzZVN0YXRlIiwidXNlRWZmZWN0IiwiZ2V0RGVidWdIaXN0b3J5IiwiY2xlYXJEZWJ1Z0hpc3RvcnkiLCJEZWJ1Z1BhbmVsIiwiaGlzdG9yeSIsInNldEhpc3RvcnkiLCJpc1Zpc2libGUiLCJzZXRJc1Zpc2libGUiLCJpbnRlcnZhbCIsInNldEludGVydmFsIiwiY2xlYXJJbnRlcnZhbCIsImJ1dHRvbiIsImNsYXNzTmFtZSIsIm9uQ2xpY2siLCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmciLCJkaXYiLCJoMiIsInRhYmxlIiwidGhlYWQiLCJ0ciIsInRoIiwidGJvZHkiLCJsZW5ndGgiLCJ0ZCIsImNvbFNwYW4iLCJtYXAiLCJlbnRyeSIsImluZGV4IiwiRGF0ZSIsInRpbWVzdGFtcCIsInRvTG9jYWxlVGltZVN0cmluZyIsImNvbXBvbmVudCIsImV2ZW50IiwiZGF0YSIsIkpTT04iLCJzdHJpbmdpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./components/debug/DebugPanel.tsx\n");

/***/ }),

/***/ "(ssr)/./components/providers.tsx":
/*!**********************************!*\
  !*** ./components/providers.tsx ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Providers: () => (/* binding */ Providers)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_themes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-themes */ \"(ssr)/./node_modules/next-themes/dist/index.mjs\");\n/* harmony import */ var _contexts_ApiConfigContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/contexts/ApiConfigContext */ \"(ssr)/./contexts/ApiConfigContext.tsx\");\n/* harmony import */ var _contexts_AuthContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/contexts/AuthContext */ \"(ssr)/./contexts/AuthContext.tsx\");\n/* __next_internal_client_entry_do_not_use__ Providers auto */ \n\n\n\nfunction Providers({ children }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_themes__WEBPACK_IMPORTED_MODULE_1__.ThemeProvider, {\n        attribute: \"class\",\n        defaultTheme: \"dark\",\n        enableSystem: true,\n        suppressHydrationWarning: true,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_contexts_AuthContext__WEBPACK_IMPORTED_MODULE_3__.AuthProvider, {\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_contexts_ApiConfigContext__WEBPACK_IMPORTED_MODULE_2__.ApiConfigProvider, {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    suppressHydrationWarning: true,\n                    children: children\n                }, void 0, false, {\n                    fileName: \"/workspace/hiiiiiiiii/components/providers.tsx\",\n                    lineNumber: 17,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/workspace/hiiiiiiiii/components/providers.tsx\",\n                lineNumber: 16,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/workspace/hiiiiiiiii/components/providers.tsx\",\n            lineNumber: 15,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/workspace/hiiiiiiiii/components/providers.tsx\",\n        lineNumber: 14,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9jb21wb25lbnRzL3Byb3ZpZGVycy50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUUyQztBQUVvQjtBQUNWO0FBTTlDLFNBQVNHLFVBQVUsRUFBRUMsUUFBUSxFQUFrQjtJQUNwRCxxQkFDRSw4REFBQ0osc0RBQWFBO1FBQUNLLFdBQVU7UUFBUUMsY0FBYTtRQUFPQyxZQUFZO1FBQUNDLHdCQUF3QjtrQkFDeEYsNEVBQUNOLCtEQUFZQTtzQkFDWCw0RUFBQ0QseUVBQWlCQTswQkFDaEIsNEVBQUNRO29CQUFJRCx3QkFBd0I7OEJBQzFCSjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTWIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYW1iaS1haS8uL2NvbXBvbmVudHMvcHJvdmlkZXJzLnRzeD9jNTYyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiXG5cbmltcG9ydCB7IFRoZW1lUHJvdmlkZXIgfSBmcm9tIFwibmV4dC10aGVtZXNcIlxuaW1wb3J0IHsgUmVhY3ROb2RlIH0gZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IEFwaUNvbmZpZ1Byb3ZpZGVyIH0gZnJvbSBcIkAvY29udGV4dHMvQXBpQ29uZmlnQ29udGV4dFwiXG5pbXBvcnQgeyBBdXRoUHJvdmlkZXIgfSBmcm9tIFwiQC9jb250ZXh0cy9BdXRoQ29udGV4dFwiXG5cbmludGVyZmFjZSBQcm92aWRlcnNQcm9wcyB7XG4gIGNoaWxkcmVuOiBSZWFjdE5vZGVcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFByb3ZpZGVycyh7IGNoaWxkcmVuIH06IFByb3ZpZGVyc1Byb3BzKSB7XG4gIHJldHVybiAoXG4gICAgPFRoZW1lUHJvdmlkZXIgYXR0cmlidXRlPVwiY2xhc3NcIiBkZWZhdWx0VGhlbWU9XCJkYXJrXCIgZW5hYmxlU3lzdGVtIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZz5cbiAgICAgIDxBdXRoUHJvdmlkZXI+XG4gICAgICAgIDxBcGlDb25maWdQcm92aWRlcj5cbiAgICAgICAgICA8ZGl2IHN1cHByZXNzSHlkcmF0aW9uV2FybmluZz5cbiAgICAgICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9BcGlDb25maWdQcm92aWRlcj5cbiAgICAgIDwvQXV0aFByb3ZpZGVyPlxuICAgIDwvVGhlbWVQcm92aWRlcj5cbiAgKVxufVxuIl0sIm5hbWVzIjpbIlRoZW1lUHJvdmlkZXIiLCJBcGlDb25maWdQcm92aWRlciIsIkF1dGhQcm92aWRlciIsIlByb3ZpZGVycyIsImNoaWxkcmVuIiwiYXR0cmlidXRlIiwiZGVmYXVsdFRoZW1lIiwiZW5hYmxlU3lzdGVtIiwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIiwiZGl2Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./components/providers.tsx\n");

/***/ }),

/***/ "(ssr)/./components/ui/button.tsx":
/*!**********************************!*\
  !*** ./components/ui/button.tsx ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Button: () => (/* binding */ Button),\n/* harmony export */   buttonVariants: () => (/* binding */ buttonVariants)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-slot */ \"(ssr)/./node_modules/@radix-ui/react-slot/dist/index.mjs\");\n/* harmony import */ var class_variance_authority__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! class-variance-authority */ \"(ssr)/./node_modules/class-variance-authority/dist/index.mjs\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/utils */ \"(ssr)/./lib/utils.ts\");\n\n\n\n\n\nconst buttonVariants = (0,class_variance_authority__WEBPACK_IMPORTED_MODULE_2__.cva)(\"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\", {\n    variants: {\n        variant: {\n            default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n            destructive: \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n            outline: \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n            secondary: \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n            ghost: \"hover:bg-accent hover:text-accent-foreground\",\n            link: \"text-primary underline-offset-4 hover:underline\"\n        },\n        size: {\n            default: \"h-10 px-4 py-2\",\n            sm: \"h-9 rounded-md px-3\",\n            lg: \"h-11 rounded-md px-8\",\n            icon: \"h-10 w-10\"\n        }\n    },\n    defaultVariants: {\n        variant: \"default\",\n        size: \"default\"\n    }\n});\nconst Button = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, variant, size, asChild = false, ...props }, ref)=>{\n    const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_4__.Slot : \"button\";\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Comp, {\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(buttonVariants({\n            variant,\n            size,\n            className\n        })),\n        ref: ref,\n        ...props\n    }, void 0, false, {\n        fileName: \"/workspace/hiiiiiiiii/components/ui/button.tsx\",\n        lineNumber: 46,\n        columnNumber: 7\n    }, undefined);\n});\nButton.displayName = \"Button\";\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9jb21wb25lbnRzL3VpL2J1dHRvbi50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUE4QjtBQUNhO0FBQ3NCO0FBRWpDO0FBRWhDLE1BQU1JLGlCQUFpQkYsNkRBQUdBLENBQ3hCLDBSQUNBO0lBQ0VHLFVBQVU7UUFDUkMsU0FBUztZQUNQQyxTQUFTO1lBQ1RDLGFBQ0U7WUFDRkMsU0FDRTtZQUNGQyxXQUNFO1lBQ0ZDLE9BQU87WUFDUEMsTUFBTTtRQUNSO1FBQ0FDLE1BQU07WUFDSk4sU0FBUztZQUNUTyxJQUFJO1lBQ0pDLElBQUk7WUFDSkMsTUFBTTtRQUNSO0lBQ0Y7SUFDQUMsaUJBQWlCO1FBQ2ZYLFNBQVM7UUFDVE8sTUFBTTtJQUNSO0FBQ0Y7QUFTRixNQUFNSyx1QkFBU2xCLDZDQUFnQixDQUM3QixDQUFDLEVBQUVvQixTQUFTLEVBQUVkLE9BQU8sRUFBRU8sSUFBSSxFQUFFUSxVQUFVLEtBQUssRUFBRSxHQUFHQyxPQUFPLEVBQUVDO0lBQ3hELE1BQU1DLE9BQU9ILFVBQVVwQixzREFBSUEsR0FBRztJQUM5QixxQkFDRSw4REFBQ3VCO1FBQ0NKLFdBQVdqQiw4Q0FBRUEsQ0FBQ0MsZUFBZTtZQUFFRTtZQUFTTztZQUFNTztRQUFVO1FBQ3hERyxLQUFLQTtRQUNKLEdBQUdELEtBQUs7Ozs7OztBQUdmO0FBRUZKLE9BQU9PLFdBQVcsR0FBRztBQUVZIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFtYmktYWkvLi9jb21wb25lbnRzL3VpL2J1dHRvbi50c3g/ODk0NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgU2xvdCB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3Qtc2xvdFwiXG5pbXBvcnQgeyBjdmEsIHR5cGUgVmFyaWFudFByb3BzIH0gZnJvbSBcImNsYXNzLXZhcmlhbmNlLWF1dGhvcml0eVwiXG5cbmltcG9ydCB7IGNuIH0gZnJvbSBcIkAvbGliL3V0aWxzXCJcblxuY29uc3QgYnV0dG9uVmFyaWFudHMgPSBjdmEoXG4gIFwiaW5saW5lLWZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIHdoaXRlc3BhY2Utbm93cmFwIHJvdW5kZWQtbWQgdGV4dC1zbSBmb250LW1lZGl1bSByaW5nLW9mZnNldC1iYWNrZ3JvdW5kIHRyYW5zaXRpb24tY29sb3JzIGZvY3VzLXZpc2libGU6b3V0bGluZS1ub25lIGZvY3VzLXZpc2libGU6cmluZy0yIGZvY3VzLXZpc2libGU6cmluZy1yaW5nIGZvY3VzLXZpc2libGU6cmluZy1vZmZzZXQtMiBkaXNhYmxlZDpwb2ludGVyLWV2ZW50cy1ub25lIGRpc2FibGVkOm9wYWNpdHktNTBcIixcbiAge1xuICAgIHZhcmlhbnRzOiB7XG4gICAgICB2YXJpYW50OiB7XG4gICAgICAgIGRlZmF1bHQ6IFwiYmctcHJpbWFyeSB0ZXh0LXByaW1hcnktZm9yZWdyb3VuZCBob3ZlcjpiZy1wcmltYXJ5LzkwXCIsXG4gICAgICAgIGRlc3RydWN0aXZlOlxuICAgICAgICAgIFwiYmctZGVzdHJ1Y3RpdmUgdGV4dC1kZXN0cnVjdGl2ZS1mb3JlZ3JvdW5kIGhvdmVyOmJnLWRlc3RydWN0aXZlLzkwXCIsXG4gICAgICAgIG91dGxpbmU6XG4gICAgICAgICAgXCJib3JkZXIgYm9yZGVyLWlucHV0IGJnLWJhY2tncm91bmQgaG92ZXI6YmctYWNjZW50IGhvdmVyOnRleHQtYWNjZW50LWZvcmVncm91bmRcIixcbiAgICAgICAgc2Vjb25kYXJ5OlxuICAgICAgICAgIFwiYmctc2Vjb25kYXJ5IHRleHQtc2Vjb25kYXJ5LWZvcmVncm91bmQgaG92ZXI6Ymctc2Vjb25kYXJ5LzgwXCIsXG4gICAgICAgIGdob3N0OiBcImhvdmVyOmJnLWFjY2VudCBob3Zlcjp0ZXh0LWFjY2VudC1mb3JlZ3JvdW5kXCIsXG4gICAgICAgIGxpbms6IFwidGV4dC1wcmltYXJ5IHVuZGVybGluZS1vZmZzZXQtNCBob3Zlcjp1bmRlcmxpbmVcIixcbiAgICAgIH0sXG4gICAgICBzaXplOiB7XG4gICAgICAgIGRlZmF1bHQ6IFwiaC0xMCBweC00IHB5LTJcIixcbiAgICAgICAgc206IFwiaC05IHJvdW5kZWQtbWQgcHgtM1wiLFxuICAgICAgICBsZzogXCJoLTExIHJvdW5kZWQtbWQgcHgtOFwiLFxuICAgICAgICBpY29uOiBcImgtMTAgdy0xMFwiLFxuICAgICAgfSxcbiAgICB9LFxuICAgIGRlZmF1bHRWYXJpYW50czoge1xuICAgICAgdmFyaWFudDogXCJkZWZhdWx0XCIsXG4gICAgICBzaXplOiBcImRlZmF1bHRcIixcbiAgICB9LFxuICB9LFxuKVxuXG5leHBvcnQgaW50ZXJmYWNlIEJ1dHRvblByb3BzXG4gIGV4dGVuZHMgUmVhY3QuQnV0dG9uSFRNTEF0dHJpYnV0ZXM8SFRNTEJ1dHRvbkVsZW1lbnQ+LFxuICAgIFZhcmlhbnRQcm9wczx0eXBlb2YgYnV0dG9uVmFyaWFudHM+IHtcbiAgYXNDaGlsZD86IGJvb2xlYW5cbn1cblxuY29uc3QgQnV0dG9uID0gUmVhY3QuZm9yd2FyZFJlZjxIVE1MQnV0dG9uRWxlbWVudCwgQnV0dG9uUHJvcHM+KFxuICAoeyBjbGFzc05hbWUsIHZhcmlhbnQsIHNpemUsIGFzQ2hpbGQgPSBmYWxzZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiB7XG4gICAgY29uc3QgQ29tcCA9IGFzQ2hpbGQgPyBTbG90IDogXCJidXR0b25cIlxuICAgIHJldHVybiAoXG4gICAgICA8Q29tcFxuICAgICAgICBjbGFzc05hbWU9e2NuKGJ1dHRvblZhcmlhbnRzKHsgdmFyaWFudCwgc2l6ZSwgY2xhc3NOYW1lIH0pKX1cbiAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgIHsuLi5wcm9wc31cbiAgICAgIC8+XG4gICAgKVxuICB9LFxuKVxuQnV0dG9uLmRpc3BsYXlOYW1lID0gXCJCdXR0b25cIlxuXG5leHBvcnQgeyBCdXR0b24sIGJ1dHRvblZhcmlhbnRzIH1cbiJdLCJuYW1lcyI6WyJSZWFjdCIsIlNsb3QiLCJjdmEiLCJjbiIsImJ1dHRvblZhcmlhbnRzIiwidmFyaWFudHMiLCJ2YXJpYW50IiwiZGVmYXVsdCIsImRlc3RydWN0aXZlIiwib3V0bGluZSIsInNlY29uZGFyeSIsImdob3N0IiwibGluayIsInNpemUiLCJzbSIsImxnIiwiaWNvbiIsImRlZmF1bHRWYXJpYW50cyIsIkJ1dHRvbiIsImZvcndhcmRSZWYiLCJjbGFzc05hbWUiLCJhc0NoaWxkIiwicHJvcHMiLCJyZWYiLCJDb21wIiwiZGlzcGxheU5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./components/ui/button.tsx\n");

/***/ }),

/***/ "(ssr)/./components/ui/input.tsx":
/*!*********************************!*\
  !*** ./components/ui/input.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Input: () => (/* binding */ Input)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/utils */ \"(ssr)/./lib/utils.ts\");\n\n\n\nconst Input = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, type, ...props }, ref)=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n        type: type,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\", className),\n        ref: ref,\n        ...props\n    }, void 0, false, {\n        fileName: \"/workspace/hiiiiiiiii/components/ui/input.tsx\",\n        lineNumber: 11,\n        columnNumber: 7\n    }, undefined);\n});\nInput.displayName = \"Input\";\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9jb21wb25lbnRzL3VpL2lucHV0LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQThCO0FBRUU7QUFLaEMsTUFBTUUsc0JBQVFGLDZDQUFnQixDQUM1QixDQUFDLEVBQUVJLFNBQVMsRUFBRUMsSUFBSSxFQUFFLEdBQUdDLE9BQU8sRUFBRUM7SUFDOUIscUJBQ0UsOERBQUNDO1FBQ0NILE1BQU1BO1FBQ05ELFdBQVdILDhDQUFFQSxDQUNYLGdXQUNBRztRQUVGRyxLQUFLQTtRQUNKLEdBQUdELEtBQUs7Ozs7OztBQUdmO0FBRUZKLE1BQU1PLFdBQVcsR0FBRztBQUVKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFtYmktYWkvLi9jb21wb25lbnRzL3VpL2lucHV0LnRzeD9kYTc5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXG5cbmltcG9ydCB7IGNuIH0gZnJvbSBcIkAvbGliL3V0aWxzXCJcblxuZXhwb3J0IGludGVyZmFjZSBJbnB1dFByb3BzXG4gIGV4dGVuZHMgUmVhY3QuSW5wdXRIVE1MQXR0cmlidXRlczxIVE1MSW5wdXRFbGVtZW50PiB7fVxuXG5jb25zdCBJbnB1dCA9IFJlYWN0LmZvcndhcmRSZWY8SFRNTElucHV0RWxlbWVudCwgSW5wdXRQcm9wcz4oXG4gICh7IGNsYXNzTmFtZSwgdHlwZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxpbnB1dFxuICAgICAgICB0eXBlPXt0eXBlfVxuICAgICAgICBjbGFzc05hbWU9e2NuKFxuICAgICAgICAgIFwiZmxleCBoLTEwIHctZnVsbCByb3VuZGVkLW1kIGJvcmRlciBib3JkZXItaW5wdXQgYmctYmFja2dyb3VuZCBweC0zIHB5LTIgdGV4dC1zbSByaW5nLW9mZnNldC1iYWNrZ3JvdW5kIGZpbGU6Ym9yZGVyLTAgZmlsZTpiZy10cmFuc3BhcmVudCBmaWxlOnRleHQtc20gZmlsZTpmb250LW1lZGl1bSBwbGFjZWhvbGRlcjp0ZXh0LW11dGVkLWZvcmVncm91bmQgZm9jdXMtdmlzaWJsZTpvdXRsaW5lLW5vbmUgZm9jdXMtdmlzaWJsZTpyaW5nLTIgZm9jdXMtdmlzaWJsZTpyaW5nLXJpbmcgZm9jdXMtdmlzaWJsZTpyaW5nLW9mZnNldC0yIGRpc2FibGVkOmN1cnNvci1ub3QtYWxsb3dlZCBkaXNhYmxlZDpvcGFjaXR5LTUwXCIsXG4gICAgICAgICAgY2xhc3NOYW1lXG4gICAgICAgICl9XG4gICAgICAgIHJlZj17cmVmfVxuICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAvPlxuICAgIClcbiAgfVxuKVxuSW5wdXQuZGlzcGxheU5hbWUgPSBcIklucHV0XCJcblxuZXhwb3J0IHsgSW5wdXQgfVxuIl0sIm5hbWVzIjpbIlJlYWN0IiwiY24iLCJJbnB1dCIsImZvcndhcmRSZWYiLCJjbGFzc05hbWUiLCJ0eXBlIiwicHJvcHMiLCJyZWYiLCJpbnB1dCIsImRpc3BsYXlOYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./components/ui/input.tsx\n");

/***/ }),

/***/ "(ssr)/./contexts/ApiConfigContext.tsx":
/*!***************************************!*\
  !*** ./contexts/ApiConfigContext.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApiConfigProvider: () => (/* binding */ ApiConfigProvider),\n/* harmony export */   useApiConfig: () => (/* binding */ useApiConfig)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_supabase_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/utils/supabase/client */ \"(ssr)/./utils/supabase/client.ts\");\n/* __next_internal_client_entry_do_not_use__ ApiConfigProvider,useApiConfig auto */ \n\n\n// Création du contexte\nconst ApiConfigContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\n// Provider du contexte\n// Clés pour le stockage des configurations\nconst LOCAL_STORAGE_KEY = \"bambi_api_configs\";\nconst USER_CONFIGS_KEY = \"bambi_user_configs\";\nconst PENDING_CONFIGS_KEY = \"bambi_pending_configs\";\nconst SYNC_STATUS_KEY = \"bambi_sync_status\";\nconst CONFIG_VERSION_KEY = \"bambi_config_version\";\n// Durée de validité du cache en millisecondes (7 jours)\nconst CACHE_VALIDITY_DURATION = 7 * 24 * 60 * 60 * 1000;\n// Nombre maximal de tentatives de synchronisation\nconst MAX_SYNC_RETRIES = 5;\n// Intervalle entre les tentatives de synchronisation (en millisecondes)\nconst SYNC_RETRY_INTERVAL = 30 * 1000; // 30 secondes\nfunction ApiConfigProvider({ children }) {\n    const supabase = (0,_utils_supabase_client__WEBPACK_IMPORTED_MODULE_2__.createClient)();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [configs, setConfigs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [syncStatus, setSyncStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"idle\");\n    const [lastSyncTime, setLastSyncTime] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [syncErrors, setSyncErrors] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [configVersion, setConfigVersion] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [pendingConfigs, setPendingConfigs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // Fonction pour nettoyer le localStorage pour un utilisateur spécifique\n    const clearLocalStorageForUser = (userId)=>{\n        try {\n            if (false) {}\n        } catch (error) {\n            console.error(\"ApiConfigContext - Erreur lors du nettoyage du cache local:\", error);\n        }\n    };\n    // Fonction pour nettoyer complètement le localStorage (à utiliser avec précaution)\n    // Cette fonction est utilisée en interne par clearLocalStorageForUser\n    const _clearAllLocalStorage = ()=>{\n        try {\n            if (false) {}\n        } catch (error) {\n            console.error(\"ApiConfigContext - Erreur lors du nettoyage complet du cache local:\", error);\n        }\n    };\n    // Fonction pour sauvegarder les configurations dans le localStorage par utilisateur avec versionnage\n    const saveConfigsToLocalStorage = (userId, configsToSave)=>{\n        try {\n            if (false) {}\n        } catch (error) {\n            console.error(\"ApiConfigContext - Erreur lors de la sauvegarde dans le localStorage:\", error);\n            // Enregistrer l'erreur dans les logs de synchronisation\n            setSyncErrors((prev)=>[\n                    ...prev,\n                    `Erreur de sauvegarde: ${error?.message || \"Erreur inconnue\"}`\n                ]);\n            setSyncStatus(\"error\");\n        }\n    };\n    // Fonction améliorée pour charger les configurations depuis le localStorage ou sessionStorage\n    // avec vérification stricte de l'appartenance des données à l'utilisateur actuel\n    const loadConfigsFromLocalStorage = (userId)=>{\n        try {\n            if (false) {}\n            return null;\n        } catch (error) {\n            console.error(\"ApiConfigContext - Erreur lors du chargement depuis le cache:\", error);\n            setSyncErrors((prev)=>[\n                    ...prev,\n                    `Erreur de chargement: ${error?.message || \"Erreur inconnue\"}`\n                ]);\n            setSyncStatus(\"error\");\n            return null;\n        }\n    };\n    // Récupérer l'utilisateur actuel et charger les configurations depuis Supabase une seule fois au démarrage\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const fetchUserAndConfigs = async ()=>{\n            try {\n                setIsLoading(true);\n                console.log(\"ApiConfigContext - Chargement initial des configurations API...\");\n                // Récupérer l'utilisateur actuel\n                const { data: { user: currentUser }, error: userError } = await supabase.auth.getUser();\n                if (userError) {\n                    console.error(\"ApiConfigContext - Erreur lors de la r\\xe9cup\\xe9ration de l'utilisateur:\", userError);\n                    // Ne pas effacer les configurations en cas d'erreur\n                    // Essayer de charger depuis le cache si possible\n                    if (false) {}\n                    setIsLoading(false);\n                    return;\n                }\n                console.log(\"ApiConfigContext - Utilisateur r\\xe9cup\\xe9r\\xe9:\", currentUser?.id);\n                setUser(currentUser);\n                if (!currentUser) {\n                    console.log(\"ApiConfigContext - Aucun utilisateur connect\\xe9\");\n                    // Ne pas effacer les configurations en cas d'absence d'utilisateur\n                    // Essayer de charger depuis le cache si possible\n                    if (false) {}\n                    setIsLoading(false);\n                    return;\n                }\n                // Essayer d'abord de charger les configurations depuis le localStorage\n                const cachedConfigs = loadConfigsFromLocalStorage(currentUser.id);\n                if (cachedConfigs && cachedConfigs.length > 0) {\n                    console.log(\"ApiConfigContext - Utilisation des configurations du cache local\");\n                    setConfigs(cachedConfigs);\n                    setIsLoading(false);\n                    // Charger les configurations depuis Supabase en arrière-plan pour mettre à jour le cache\n                    fetchConfigs().then((fetchedConfigs)=>{\n                        if (fetchedConfigs && fetchedConfigs.length > 0) {\n                            console.log(\"ApiConfigContext - Mise \\xe0 jour des configurations depuis Supabase\");\n                            setConfigs(fetchedConfigs);\n                            // Sauvegarder les configurations mises à jour dans le localStorage\n                            saveConfigsToLocalStorage(currentUser.id, fetchedConfigs);\n                        }\n                    }).catch((error)=>{\n                        console.error(\"ApiConfigContext - Erreur lors de la mise \\xe0 jour depuis Supabase:\", error);\n                    // En cas d'erreur, nous gardons les configurations du cache\n                    });\n                } else {\n                    // Si pas de cache, charger depuis Supabase\n                    console.log(\"ApiConfigContext - Pas de cache local, chargement depuis Supabase\");\n                    try {\n                        const fetchedConfigs = await fetchConfigs();\n                        // Si des configurations ont été récupérées, les sauvegarder dans le localStorage\n                        if (fetchedConfigs && fetchedConfigs.length > 0) {\n                            setConfigs(fetchedConfigs);\n                            saveConfigsToLocalStorage(currentUser.id, fetchedConfigs);\n                        }\n                    } catch (error) {\n                        console.error(\"ApiConfigContext - Erreur lors du chargement depuis Supabase:\", error);\n                    } finally{\n                        setIsLoading(false);\n                    }\n                }\n            } catch (error) {\n                console.error(\"ApiConfigContext - Erreur globale lors du chargement des configurations API:\", error);\n                // Ne pas effacer les configurations en cas d'erreur globale\n                // Essayer de charger depuis le cache si possible\n                if (false) {}\n                setIsLoading(false);\n            }\n        };\n        // Charger les configurations une seule fois au démarrage\n        fetchUserAndConfigs();\n        // Écouter les changements d'authentification\n        const { data: { subscription } } = supabase.auth.onAuthStateChange(async (event, session)=>{\n            console.log(\"ApiConfigContext - Changement d'\\xe9tat d'authentification:\", event);\n            // Mettre à jour l'utilisateur immédiatement\n            setUser(session?.user || null);\n            if (!session?.user) {\n                // Effacer les configurations de l'état local lors de la déconnexion\n                // pour éviter les fuites de données entre utilisateurs\n                console.log(\"ApiConfigContext - Utilisateur d\\xe9connect\\xe9, nettoyage des configurations\");\n                setConfigs([]); // Vider l'état local\n                // Si nous avons l'ID de l'utilisateur précédent, nettoyer son cache\n                if (user && user.id) {\n                    clearLocalStorageForUser(user.id);\n                }\n            } else if (event === \"SIGNED_IN\") {\n                // En cas de connexion, charger les configurations depuis le localStorage d'abord\n                const cachedConfigs = loadConfigsFromLocalStorage(session.user.id);\n                if (cachedConfigs && cachedConfigs.length > 0) {\n                    console.log(\"ApiConfigContext - Connexion: utilisation des configurations du cache local\");\n                    setConfigs(cachedConfigs);\n                    setIsLoading(false); // Important: marquer le chargement comme terminé\n                    // Puis mettre à jour en arrière-plan depuis Supabase\n                    fetchConfigs().then((fetchedConfigs)=>{\n                        if (fetchedConfigs && fetchedConfigs.length > 0) {\n                            console.log(\"ApiConfigContext - Mise \\xe0 jour des configurations depuis Supabase\");\n                            setConfigs(fetchedConfigs);\n                            saveConfigsToLocalStorage(session.user.id, fetchedConfigs);\n                        }\n                    }).catch((error)=>{\n                        console.error(\"ApiConfigContext - Erreur lors de la mise \\xe0 jour depuis Supabase:\", error);\n                    // En cas d'erreur, nous gardons les configurations du cache\n                    });\n                } else {\n                    // Si pas de cache, charger depuis Supabase\n                    console.log(\"ApiConfigContext - Connexion: pas de cache local, chargement depuis Supabase\");\n                    fetchConfigs().then((fetchedConfigs)=>{\n                        if (fetchedConfigs && fetchedConfigs.length > 0) {\n                            setConfigs(fetchedConfigs);\n                            saveConfigsToLocalStorage(session.user.id, fetchedConfigs);\n                        }\n                        setIsLoading(false); // Important: marquer le chargement comme terminé\n                    }).catch((error)=>{\n                        console.error(\"ApiConfigContext - Erreur lors du chargement depuis Supabase:\", error);\n                        setIsLoading(false); // Important: marquer le chargement comme terminé même en cas d'erreur\n                    });\n                }\n            }\n        });\n        return ()=>{\n            subscription.unsubscribe();\n        };\n    }, [\n        supabase\n    ]);\n    // Fonction pour valider directement une clé API xAI sans passer par l'API\n    const validateXAIKeyDirectly = async (apiKey)=>{\n        try {\n            console.log(\"ApiConfigContext - Validation directe de la cl\\xe9 API xAI...\");\n            // Appel direct à l'API xAI pour valider la clé\n            const response = await fetch(\"https://api.x.ai/v1/models\", {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${apiKey}`,\n                    \"X-API-Key\": apiKey\n                }\n            });\n            if (response.ok) {\n                const data = await response.json();\n                const models = data.data.map((model)=>model.id);\n                const hasImageModel = models.includes(\"grok-2-image-1212\");\n                return {\n                    isValid: true,\n                    message: `Clé API xAI validée avec succès. ${hasImageModel ? \"Le mod\\xe8le grok-2-image-1212 est disponible.\" : \"Attention: Le mod\\xe8le grok-2-image-1212 n'est pas disponible.\"}`,\n                    provider: {\n                        name: \"xAI\",\n                        slug: \"xai\",\n                        models\n                    }\n                };\n            } else {\n                const errorData = await response.json();\n                return {\n                    isValid: false,\n                    message: `Clé API xAI invalide: ${errorData.error?.message || \"Erreur inconnue\"}`\n                };\n            }\n        } catch (err) {\n            console.error(\"ApiConfigContext - Erreur lors de la validation directe de la cl\\xe9 xAI:\", err);\n            return {\n                isValid: false,\n                message: `Erreur lors de la validation directe de la clé xAI: ${err.message}`\n            };\n        }\n    };\n    // Fonction pour valider une clé API\n    const validateApiKey = async (provider, apiKey)=>{\n        try {\n            console.log(\"ApiConfigContext - Validation de la cl\\xe9 API pour le fournisseur:\", provider);\n            // Si c'est xAI, essayer d'abord la validation directe\n            if (provider === \"xai\") {\n                try {\n                    const directResult = await validateXAIKeyDirectly(apiKey);\n                    if (directResult.isValid) {\n                        console.log(\"ApiConfigContext - Validation directe de la cl\\xe9 xAI r\\xe9ussie\");\n                        return directResult;\n                    }\n                } catch (directError) {\n                    console.warn(\"ApiConfigContext - \\xc9chec de la validation directe xAI, tentative via l'API standard:\", directError);\n                }\n            }\n            // Validation standard via l'API\n            const response = await fetch(\"/api/validate-api-key\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    provider,\n                    apiKey\n                })\n            });\n            const result = await response.json();\n            if (!response.ok) {\n                console.error(\"ApiConfigContext - Erreur lors de la validation de la cl\\xe9 API:\", result.error);\n                // Si c'est xAI et que la validation standard a échoué, mais que nous n'avons pas encore essayé la validation directe\n                if (provider === \"xai\" && result.error?.includes(\"status\")) {\n                    console.log(\"ApiConfigContext - Tentative de validation directe xAI apr\\xe8s \\xe9chec de l'API standard\");\n                    return await validateXAIKeyDirectly(apiKey);\n                }\n                return {\n                    isValid: false,\n                    message: result.error || \"Erreur lors de la validation de la cl\\xe9 API\"\n                };\n            }\n            return result;\n        } catch (error) {\n            console.error(\"ApiConfigContext - Exception lors de la validation de la cl\\xe9 API:\", error);\n            // Si c'est xAI et que nous avons une erreur générale, essayer la validation directe\n            if (provider === \"xai\") {\n                console.log(\"ApiConfigContext - Tentative de validation directe xAI apr\\xe8s exception\");\n                try {\n                    return await validateXAIKeyDirectly(apiKey);\n                } catch (directError) {\n                    console.error(\"ApiConfigContext - \\xc9chec de la validation directe xAI apr\\xe8s exception:\", directError);\n                }\n            }\n            return {\n                isValid: false,\n                message: \"Erreur de connexion lors de la validation de la cl\\xe9 API\"\n            };\n        }\n    };\n    // Fonction robuste pour recharger les configurations depuis Supabase avec vérification et retry\n    const fetchConfigs = async (retryCount = 0)=>{\n        // Mettre à jour le statut de synchronisation\n        setSyncStatus(\"syncing\");\n        if (!user) {\n            console.log(\"ApiConfigContext - Aucun utilisateur connect\\xe9 pour charger les configurations\");\n            setSyncStatus(\"error\");\n            setSyncErrors((prev)=>[\n                    ...prev,\n                    \"Tentative de chargement sans utilisateur connect\\xe9\"\n                ]);\n            return [];\n        }\n        try {\n            console.log(\"ApiConfigContext - Rechargement des configurations pour l'utilisateur:\", user.id, \"tentative:\", retryCount + 1);\n            // Vérifier d'abord la session\n            const { data: { session } } = await supabase.auth.getSession();\n            if (!session) {\n                console.error(\"ApiConfigContext - Session Supabase expir\\xe9e ou invalide\");\n                // Tenter de rafraîchir la session\n                const { data: refreshData, error: refreshError } = await supabase.auth.refreshSession();\n                if (refreshError || !refreshData.session) {\n                    console.error(\"ApiConfigContext - Impossible de rafra\\xeechir la session:\", refreshError);\n                    setSyncStatus(\"error\");\n                    setSyncErrors((prev)=>[\n                            ...prev,\n                            `Session expirée: ${refreshError?.message || \"Erreur inconnue\"}`\n                        ]);\n                    // Retourner les configurations du cache si disponibles\n                    const cachedConfigs = loadConfigsFromLocalStorage(user.id);\n                    return cachedConfigs || [];\n                }\n                console.log(\"ApiConfigContext - Session rafra\\xeechie avec succ\\xe8s\");\n            }\n            // Requête avec timeout pour éviter les blocages\n            const timeoutPromise = new Promise((resolve)=>{\n                setTimeout(()=>{\n                    resolve({\n                        data: null,\n                        error: new Error(\"Timeout lors de la r\\xe9cup\\xe9ration des configurations\")\n                    });\n                }, 10000); // 10 secondes de timeout\n            });\n            // Requête Supabase avec debug\n            console.log(\"ApiConfigContext - R\\xe9cup\\xe9ration des configurations pour l'utilisateur:\", user.id);\n            // Vérifier que user_id est bien un UUID valide\n            if (!user.id || !/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(user.id)) {\n                console.error(\"ApiConfigContext - user_id invalide pour la r\\xe9cup\\xe9ration:\", user.id);\n                setSyncErrors((prev)=>[\n                        ...prev,\n                        `user_id invalide pour la récupération: ${user.id}`\n                    ]);\n            }\n            // Requête Supabase avec debug\n            const fetchPromise = supabase.from(\"api_configurations\").select(`\n          id,\n          name,\n          provider_id,\n          model,\n          is_valid,\n          status,\n          last_validated_at,\n          created_at,\n          user_id,\n          api_providers (\n            id,\n            name,\n            slug\n          )\n        `).eq(\"user_id\", user.id);\n            // Utiliser Promise.race pour implémenter un timeout\n            const result = await Promise.race([\n                fetchPromise,\n                timeoutPromise\n            ]);\n            const { data, error } = result;\n            if (error) {\n                console.error(\"ApiConfigContext - Erreur lors du rechargement des configurations:\", error);\n                setSyncErrors((prev)=>[\n                        ...prev,\n                        `Erreur de récupération: ${error.message}`\n                    ]);\n                // Vérifier si l'erreur est liée aux permissions RLS\n                if (error.code === \"42501\" || error.message.includes(\"permission\") || error.message.includes(\"policy\")) {\n                    console.error(\"ApiConfigContext - Erreur de permission RLS lors de la r\\xe9cup\\xe9ration:\", error);\n                    setSyncErrors((prev)=>[\n                            ...prev,\n                            `Erreur de permission RLS lors de la récupération: ${error.message}`\n                        ]);\n                    // Vérifier la session utilisateur\n                    const { data: { session: currentSession } } = await supabase.auth.getSession();\n                    console.log(\"ApiConfigContext - Session utilisateur actuelle pour r\\xe9cup\\xe9ration:\", currentSession?.user?.id);\n                    // Vérifier que l'ID utilisateur dans la requête correspond à l'ID de session\n                    if (currentSession?.user?.id !== user.id) {\n                        console.error(\"ApiConfigContext - Incoh\\xe9rence d'ID utilisateur pour r\\xe9cup\\xe9ration:\", {\n                            sessionUserId: currentSession?.user?.id,\n                            requestUserId: user.id\n                        });\n                        setSyncErrors((prev)=>[\n                                ...prev,\n                                `Incohérence d'ID utilisateur pour récupération: session=${currentSession?.user?.id}, requête=${user.id}`\n                            ]);\n                    }\n                }\n                // Retry si possible\n                if (retryCount < MAX_SYNC_RETRIES) {\n                    console.log(`ApiConfigContext - Nouvelle tentative (${retryCount + 1}/${MAX_SYNC_RETRIES}) dans ${SYNC_RETRY_INTERVAL / 1000}s...`);\n                    // Attendre avant de réessayer\n                    await new Promise((resolve)=>setTimeout(resolve, SYNC_RETRY_INTERVAL));\n                    return fetchConfigs(retryCount + 1);\n                }\n                setSyncStatus(\"error\");\n                // Retourner les configurations du cache si disponibles\n                const cachedConfigs = loadConfigsFromLocalStorage(user.id);\n                return cachedConfigs || [];\n            }\n            if (!data || !Array.isArray(data)) {\n                console.error(\"ApiConfigContext - Donn\\xe9es invalides re\\xe7ues de Supabase:\", data);\n                setSyncErrors((prev)=>[\n                        ...prev,\n                        \"Format de donn\\xe9es invalide re\\xe7u de Supabase\"\n                    ]);\n                if (retryCount < MAX_SYNC_RETRIES) {\n                    console.log(`ApiConfigContext - Nouvelle tentative (${retryCount + 1}/${MAX_SYNC_RETRIES}) dans ${SYNC_RETRY_INTERVAL / 1000}s...`);\n                    await new Promise((resolve)=>setTimeout(resolve, SYNC_RETRY_INTERVAL));\n                    return fetchConfigs(retryCount + 1);\n                }\n                setSyncStatus(\"error\");\n                return [];\n            }\n            console.log(\"ApiConfigContext - Configurations recharg\\xe9es:\", data.length);\n            // Transformer les données pour correspondre à notre format ApiConfig\n            const transformedConfigs = data.map((item)=>{\n                // Déterminer le statut en fonction de is_valid si status n'existe pas\n                let configStatus = \"unknown\";\n                try {\n                    // Vérifier si la propriété status existe\n                    if (item.hasOwnProperty(\"status\") && item.status) {\n                        configStatus = item.status;\n                    } else if (item.hasOwnProperty(\"is_valid\")) {\n                        // Fallback sur is_valid si status n'existe pas\n                        configStatus = item.is_valid === true ? \"valid\" : \"invalid\";\n                    }\n                } catch (e) {\n                    console.warn(\"ApiConfigContext - Erreur lors de la d\\xe9termination du statut:\", e);\n                    setSyncErrors((prev)=>[\n                            ...prev,\n                            `Erreur de traitement du statut: ${e?.message || \"Erreur inconnue\"}`\n                        ]);\n                }\n                // Récupérer le slug du fournisseur\n                let providerSlug = \"unknown\";\n                try {\n                    if (item.api_providers) {\n                        if (typeof item.api_providers === \"object\") {\n                            // Vérifier si api_providers est un tableau ou un objet\n                            if (Array.isArray(item.api_providers)) {\n                                // Si c'est un tableau, prendre le premier élément\n                                if (item.api_providers.length > 0) {\n                                    providerSlug = item.api_providers[0].slug || \"unknown\";\n                                }\n                            } else {\n                                // Si c'est un objet, accéder directement au slug\n                                providerSlug = item.api_providers.slug || \"unknown\";\n                            }\n                        }\n                    }\n                } catch (e) {\n                    console.error(\"ApiConfigContext - Erreur lors de la r\\xe9cup\\xe9ration du slug:\", e);\n                    setSyncErrors((prev)=>[\n                            ...prev,\n                            `Erreur de récupération du slug: ${e?.message || \"Erreur inconnue\"}`\n                        ]);\n                }\n                return {\n                    id: item.id,\n                    name: item.name,\n                    provider: providerSlug,\n                    provider_id: item.provider_id,\n                    model: item.model || \"\",\n                    key: \"••••••••••••••••\",\n                    isValidated: item.is_valid,\n                    status: configStatus,\n                    last_validated_at: item.last_validated_at,\n                    created_at: item.created_at\n                };\n            });\n            console.log(\"ApiConfigContext - Configurations transform\\xe9es apr\\xe8s rechargement:\", transformedConfigs.length);\n            // Vérifier que les données sont cohérentes\n            if (transformedConfigs.length === 0 && data.length > 0) {\n                console.error(\"ApiConfigContext - Erreur de transformation: donn\\xe9es perdues\");\n                setSyncErrors((prev)=>[\n                        ...prev,\n                        \"Erreur de transformation: donn\\xe9es perdues\"\n                    ]);\n                setSyncStatus(\"error\");\n            } else {\n                // Mettre à jour l'état local\n                setConfigs(transformedConfigs);\n                // Sauvegarder dans le cache local avec la nouvelle version\n                const newVersion = configVersion + 1;\n                setConfigVersion(newVersion);\n                saveConfigsToLocalStorage(user.id, transformedConfigs);\n                // Mettre à jour le statut de synchronisation\n                setSyncStatus(\"idle\");\n                setLastSyncTime(Date.now());\n                // Vérifier s'il y a des configurations en attente à synchroniser\n                if (pendingConfigs.length > 0) {\n                    console.log(\"ApiConfigContext - Synchronisation des configurations en attente:\", pendingConfigs.length);\n                // Cette partie sera implémentée dans la fonction syncPendingConfigs\n                }\n            }\n            // Retourner les configurations pour pouvoir les utiliser dans d'autres fonctions\n            return transformedConfigs;\n        } catch (configError) {\n            console.error(\"ApiConfigContext - Exception lors du rechargement des configurations:\", configError);\n            setSyncErrors((prev)=>[\n                    ...prev,\n                    `Exception: ${configError?.message || \"Erreur inconnue\"}`\n                ]);\n            setSyncStatus(\"error\");\n            // Retry si possible\n            if (retryCount < MAX_SYNC_RETRIES) {\n                console.log(`ApiConfigContext - Nouvelle tentative (${retryCount + 1}/${MAX_SYNC_RETRIES}) dans ${SYNC_RETRY_INTERVAL / 1000}s...`);\n                await new Promise((resolve)=>setTimeout(resolve, SYNC_RETRY_INTERVAL));\n                return fetchConfigs(retryCount + 1);\n            }\n            // Retourner les configurations du cache si disponibles\n            const cachedConfigs = loadConfigsFromLocalStorage(user.id);\n            return cachedConfigs || [];\n        }\n    };\n    // Fonction pour sauvegarder une configuration en attente\n    const savePendingConfig = (userId, config)=>{\n        try {\n            if (false) {}\n            return false;\n        } catch (error) {\n            console.error(\"ApiConfigContext - Erreur lors de la sauvegarde de la configuration en attente:\", error);\n            return false;\n        }\n    };\n    // Ajouter une nouvelle configuration avec gestion robuste des erreurs et sauvegarde locale\n    const addConfig = async (config, retryCount = 0)=>{\n        // Mettre à jour le statut de synchronisation\n        setSyncStatus(\"syncing\");\n        if (!user) {\n            console.error(\"ApiConfigContext - Impossible d'ajouter une configuration: utilisateur non connect\\xe9\");\n            setSyncStatus(\"error\");\n            setSyncErrors((prev)=>[\n                    ...prev,\n                    \"Tentative d'ajout sans utilisateur connect\\xe9\"\n                ]);\n            // Sauvegarder la configuration en attente pour une synchronisation ultérieure\n            savePendingConfig(\"unknown\", config);\n            return {\n                id: \"\",\n                isValid: false,\n                message: \"Utilisateur non connect\\xe9 - Configuration sauvegard\\xe9e localement\"\n            };\n        }\n        try {\n            console.log(\"ApiConfigContext - Ajout d'une nouvelle configuration:\", config.name, \"tentative:\", retryCount + 1);\n            // Vérifier d'abord la session\n            const { data: { session } } = await supabase.auth.getSession();\n            if (!session) {\n                console.error(\"ApiConfigContext - Session Supabase expir\\xe9e ou invalide\");\n                // Tenter de rafraîchir la session\n                const { data: refreshData, error: refreshError } = await supabase.auth.refreshSession();\n                if (refreshError || !refreshData.session) {\n                    console.error(\"ApiConfigContext - Impossible de rafra\\xeechir la session:\", refreshError);\n                    setSyncStatus(\"error\");\n                    setSyncErrors((prev)=>[\n                            ...prev,\n                            `Session expirée: ${refreshError?.message || \"Erreur inconnue\"}`\n                        ]);\n                    // Sauvegarder la configuration en attente\n                    savePendingConfig(user.id, config);\n                    return {\n                        id: \"\",\n                        isValid: false,\n                        message: \"Session expir\\xe9e - Configuration sauvegard\\xe9e localement pour synchronisation ult\\xe9rieure\"\n                    };\n                }\n                console.log(\"ApiConfigContext - Session rafra\\xeechie avec succ\\xe8s\");\n            }\n            // Récupérer l'ID du fournisseur à partir du slug\n            let providerId = config.provider_id;\n            if (!providerId && config.provider) {\n                // Si provider_id n'est pas fourni mais que provider (slug) l'est, récupérer l'ID\n                const { data: providerData, error: providerError } = await supabase.from(\"api_providers\").select(\"id\").eq(\"slug\", config.provider).single();\n                if (providerError) {\n                    console.error(\"ApiConfigContext - Erreur lors de la r\\xe9cup\\xe9ration du fournisseur:\", providerError);\n                    setSyncErrors((prev)=>[\n                            ...prev,\n                            `Fournisseur non trouvé: ${providerError.message}`\n                        ]);\n                    if (retryCount < MAX_SYNC_RETRIES) {\n                        console.log(`ApiConfigContext - Nouvelle tentative (${retryCount + 1}/${MAX_SYNC_RETRIES}) dans ${SYNC_RETRY_INTERVAL / 1000}s...`);\n                        await new Promise((resolve)=>setTimeout(resolve, SYNC_RETRY_INTERVAL));\n                        return addConfig(config, retryCount + 1);\n                    }\n                    setSyncStatus(\"error\");\n                    // Sauvegarder la configuration en attente\n                    savePendingConfig(user.id, config);\n                    return {\n                        id: \"\",\n                        isValid: false,\n                        message: \"Fournisseur non trouv\\xe9 - Configuration sauvegard\\xe9e localement\"\n                    };\n                } else if (providerData) {\n                    providerId = providerData.id;\n                    console.log(\"ApiConfigContext - ID du fournisseur r\\xe9cup\\xe9r\\xe9:\", providerId);\n                }\n            }\n            if (!providerId) {\n                console.error(\"ApiConfigContext - Impossible d'ajouter une configuration: ID du fournisseur manquant\");\n                setSyncStatus(\"error\");\n                setSyncErrors((prev)=>[\n                        ...prev,\n                        \"ID du fournisseur manquant\"\n                    ]);\n                return {\n                    id: \"\",\n                    isValid: false,\n                    message: \"ID du fournisseur manquant\"\n                };\n            }\n            // Valider la clé API avant de l'ajouter\n            console.log(\"ApiConfigContext - Validation de la cl\\xe9 API avant ajout...\");\n            // Utiliser une promesse avec timeout pour éviter les validations infinies\n            let validationResult = {\n                isValid: true,\n                message: \"Validation par d\\xe9faut\",\n                provider: {\n                    name: config.provider,\n                    slug: config.provider\n                }\n            };\n            try {\n                const validationPromise = validateApiKey(config.provider, config.key);\n                const timeoutPromise = new Promise((resolve)=>{\n                    setTimeout(()=>{\n                        console.log(\"ApiConfigContext - Timeout de validation atteint, consid\\xe9rant la cl\\xe9 comme valide\");\n                        resolve({\n                            isValid: true,\n                            message: \"Validation automatique apr\\xe8s timeout\",\n                            provider: {\n                                name: config.provider,\n                                slug: config.provider\n                            }\n                        });\n                    }, 10000); // 10 secondes de timeout\n                });\n                // Utiliser la première promesse qui se résout\n                validationResult = await Promise.race([\n                    validationPromise,\n                    timeoutPromise\n                ]);\n            } catch (error) {\n                console.error(\"ApiConfigContext - Erreur lors de la validation de la cl\\xe9 API:\", error);\n                // En mode développement, considérer la clé comme valide malgré l'erreur\n                validationResult = {\n                    isValid: true,\n                    message: \"Validation automatique apr\\xe8s erreur\",\n                    provider: {\n                        name: config.provider,\n                        slug: config.provider\n                    }\n                };\n            }\n            // Déterminer le statut en fonction du résultat de la validation\n            const status = validationResult.isValid ? \"valid\" : \"invalid\";\n            console.log(\"ApiConfigContext - Statut de la cl\\xe9 API:\", status);\n            if (!validationResult.isValid) {\n                console.error(\"ApiConfigContext - La cl\\xe9 API n'est pas valide:\", validationResult.message);\n                setSyncErrors((prev)=>[\n                        ...prev,\n                        `Clé API invalide: ${validationResult.message}`\n                    ]);\n            // Continuer malgré l'échec de la validation pour permettre l'enregistrement de clés invalides\n            } else {\n                console.log(\"ApiConfigContext - Cl\\xe9 API valid\\xe9e avec succ\\xe8s\");\n            }\n            // SOLUTION RADICALE: Stocker la clé API en clair sans chiffrement\n            // Cela résout les problèmes de déchiffrement qui causent les erreurs avec l'API xAI\n            const encryptedApiKey = config.key; // Utiliser la clé en clair\n            // Préparer les données à insérer\n            const insertData = {\n                user_id: user.id,\n                name: config.name,\n                provider_id: providerId,\n                model: config.model,\n                api_key: encryptedApiKey,\n                is_valid: validationResult.isValid,\n                last_validated_at: new Date().toISOString()\n            };\n            // Ajouter le statut seulement si la colonne existe\n            try {\n                insertData.status = status;\n            } catch (e) {\n                console.warn(\"ApiConfigContext - La colonne status n'existe peut-\\xeatre pas:\", e);\n                setSyncErrors((prev)=>[\n                        ...prev,\n                        `Erreur avec la colonne status: ${e?.message || \"Erreur inconnue\"}`\n                    ]);\n            }\n            // Requête avec timeout pour éviter les blocages\n            const timeoutPromise = new Promise((resolve)=>{\n                setTimeout(()=>{\n                    resolve({\n                        data: null,\n                        error: new Error(\"Timeout lors de l'insertion de la configuration\")\n                    });\n                }, 10000); // 10 secondes de timeout\n            });\n            // Requête Supabase avec debug\n            console.log(\"ApiConfigContext - Donn\\xe9es \\xe0 ins\\xe9rer:\", JSON.stringify(insertData, null, 2));\n            // Vérifier que user_id est bien un UUID valide\n            if (!insertData.user_id || !/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(insertData.user_id)) {\n                console.error(\"ApiConfigContext - user_id invalide:\", insertData.user_id);\n                setSyncErrors((prev)=>[\n                        ...prev,\n                        `user_id invalide: ${insertData.user_id}`\n                    ]);\n            }\n            // Requête Supabase avec debug\n            const insertPromise = supabase.from(\"api_configurations\").insert(insertData).select(`\n          id,\n          name,\n          provider_id,\n          model,\n          is_valid,\n          status,\n          last_validated_at,\n          created_at,\n          user_id,\n          api_providers (\n            id,\n            name,\n            slug\n          )\n        `).single();\n            // Utiliser Promise.race pour implémenter un timeout\n            const result = await Promise.race([\n                insertPromise,\n                timeoutPromise\n            ]);\n            const { data, error } = result;\n            if (error) {\n                console.error(\"ApiConfigContext - Erreur lors de l'insertion de la configuration:\", error);\n                setSyncErrors((prev)=>[\n                        ...prev,\n                        `Erreur d'insertion: ${error.message}`\n                    ]);\n                // Vérifier si l'erreur est liée aux permissions RLS\n                if (error.code === \"42501\" || error.message.includes(\"permission\") || error.message.includes(\"policy\")) {\n                    console.error(\"ApiConfigContext - Erreur de permission RLS:\", error);\n                    setSyncErrors((prev)=>[\n                            ...prev,\n                            `Erreur de permission RLS: ${error.message}`\n                        ]);\n                    // Vérifier la session utilisateur\n                    const { data: { session: currentSession } } = await supabase.auth.getSession();\n                    console.log(\"ApiConfigContext - Session utilisateur actuelle:\", currentSession?.user?.id);\n                    // Vérifier que l'ID utilisateur dans la requête correspond à l'ID de session\n                    if (currentSession?.user?.id !== insertData.user_id) {\n                        console.error(\"ApiConfigContext - Incoh\\xe9rence d'ID utilisateur:\", {\n                            sessionUserId: currentSession?.user?.id,\n                            requestUserId: insertData.user_id\n                        });\n                        setSyncErrors((prev)=>[\n                                ...prev,\n                                `Incohérence d'ID utilisateur: session=${currentSession?.user?.id}, requête=${insertData.user_id}`\n                            ]);\n                    }\n                }\n                // Retry si possible\n                if (retryCount < MAX_SYNC_RETRIES) {\n                    console.log(`ApiConfigContext - Nouvelle tentative (${retryCount + 1}/${MAX_SYNC_RETRIES}) dans ${SYNC_RETRY_INTERVAL / 1000}s...`);\n                    await new Promise((resolve)=>setTimeout(resolve, SYNC_RETRY_INTERVAL));\n                    return addConfig(config, retryCount + 1);\n                }\n                setSyncStatus(\"error\");\n                // Sauvegarder la configuration en attente\n                savePendingConfig(user.id, config);\n                return {\n                    id: \"\",\n                    isValid: false,\n                    message: `Erreur lors de l'insertion - Configuration sauvegardée localement: ${error.message}`\n                };\n            }\n            if (!data) {\n                console.error(\"ApiConfigContext - Donn\\xe9es invalides re\\xe7ues de Supabase apr\\xe8s insertion\");\n                setSyncErrors((prev)=>[\n                        ...prev,\n                        \"Donn\\xe9es invalides re\\xe7ues apr\\xe8s insertion\"\n                    ]);\n                if (retryCount < MAX_SYNC_RETRIES) {\n                    console.log(`ApiConfigContext - Nouvelle tentative (${retryCount + 1}/${MAX_SYNC_RETRIES}) dans ${SYNC_RETRY_INTERVAL / 1000}s...`);\n                    await new Promise((resolve)=>setTimeout(resolve, SYNC_RETRY_INTERVAL));\n                    return addConfig(config, retryCount + 1);\n                }\n                setSyncStatus(\"error\");\n                // Sauvegarder la configuration en attente\n                savePendingConfig(user.id, config);\n                return {\n                    id: \"\",\n                    isValid: false,\n                    message: \"Erreur lors de l'insertion - Configuration sauvegard\\xe9e localement\"\n                };\n            }\n            console.log(\"ApiConfigContext - Configuration ajout\\xe9e avec succ\\xe8s, ID:\", data.id);\n            // Au lieu de recharger toutes les configurations, ajouter directement la nouvelle configuration à l'état local\n            // Récupérer le slug du fournisseur\n            let providerSlug = \"unknown\";\n            try {\n                if (data.api_providers) {\n                    if (typeof data.api_providers === \"object\") {\n                        // Vérifier si api_providers est un tableau ou un objet\n                        if (Array.isArray(data.api_providers)) {\n                            // Si c'est un tableau, prendre le premier élément\n                            if (data.api_providers.length > 0) {\n                                providerSlug = data.api_providers[0].slug || \"unknown\";\n                            }\n                        } else {\n                            // Si c'est un objet, accéder directement au slug\n                            providerSlug = data.api_providers.slug || \"unknown\";\n                        }\n                    }\n                }\n            } catch (e) {\n                console.error(\"ApiConfigContext - Erreur lors de la r\\xe9cup\\xe9ration du slug:\", e);\n                setSyncErrors((prev)=>[\n                        ...prev,\n                        `Erreur de récupération du slug: ${e?.message || \"Erreur inconnue\"}`\n                    ]);\n            }\n            const newConfig = {\n                id: data.id,\n                name: data.name,\n                provider: providerSlug,\n                provider_id: data.provider_id,\n                model: data.model || \"\",\n                key: \"••••••••••••••••\",\n                isValidated: data.is_valid,\n                status: data.status || (data.is_valid ? \"valid\" : \"invalid\"),\n                last_validated_at: data.last_validated_at,\n                created_at: data.created_at\n            };\n            // Mettre à jour l'état local avec la nouvelle configuration\n            setConfigs((prevConfigs)=>[\n                    ...prevConfigs,\n                    newConfig\n                ]);\n            // Sauvegarder dans le cache local avec la nouvelle version\n            const newVersion = configVersion + 1;\n            setConfigVersion(newVersion);\n            saveConfigsToLocalStorage(user.id, [\n                ...configs,\n                newConfig\n            ]);\n            // Mettre à jour le statut de synchronisation\n            setSyncStatus(\"idle\");\n            setLastSyncTime(Date.now());\n            return {\n                id: data.id,\n                isValid: validationResult.isValid,\n                message: validationResult.isValid ? \"Configuration ajout\\xe9e avec succ\\xe8s\" : \"Configuration ajout\\xe9e mais la cl\\xe9 API semble invalide\"\n            };\n        } catch (error) {\n            console.error(\"ApiConfigContext - Exception lors de l'ajout de la configuration:\", error);\n            setSyncErrors((prev)=>[\n                    ...prev,\n                    `Exception: ${error?.message || \"Erreur inconnue\"}`\n                ]);\n            setSyncStatus(\"error\");\n            // Retry si possible\n            if (retryCount < MAX_SYNC_RETRIES) {\n                console.log(`ApiConfigContext - Nouvelle tentative (${retryCount + 1}/${MAX_SYNC_RETRIES}) dans ${SYNC_RETRY_INTERVAL / 1000}s...`);\n                await new Promise((resolve)=>setTimeout(resolve, SYNC_RETRY_INTERVAL));\n                return addConfig(config, retryCount + 1);\n            }\n            // Sauvegarder la configuration en attente\n            if (user) {\n                savePendingConfig(user.id, config);\n            } else {\n                savePendingConfig(\"unknown\", config);\n            }\n            return {\n                id: \"\",\n                isValid: false,\n                message: `Erreur lors de l'ajout - Configuration sauvegardée localement: ${error?.message || \"Erreur inconnue\"}`\n            };\n        }\n    };\n    // Mettre à jour une configuration existante avec gestion robuste des erreurs et persistance locale\n    const updateConfig = async (id, config, retryCount = 0)=>{\n        // Mettre à jour le statut de synchronisation\n        setSyncStatus(\"syncing\");\n        if (!user) {\n            console.error(\"ApiConfigContext - Impossible de mettre \\xe0 jour la configuration: utilisateur non connect\\xe9\");\n            setSyncStatus(\"error\");\n            setSyncErrors((prev)=>[\n                    ...prev,\n                    \"Tentative de mise \\xe0 jour sans utilisateur connect\\xe9\"\n                ]);\n            return {\n                isValid: false,\n                message: \"Utilisateur non connect\\xe9\"\n            };\n        }\n        try {\n            console.log(\"ApiConfigContext - Mise \\xe0 jour de la configuration:\", id, \"tentative:\", retryCount + 1);\n            // Vérifier d'abord la session\n            const { data: { session } } = await supabase.auth.getSession();\n            if (!session) {\n                console.error(\"ApiConfigContext - Session Supabase expir\\xe9e ou invalide\");\n                // Tenter de rafraîchir la session\n                const { data: refreshData, error: refreshError } = await supabase.auth.refreshSession();\n                if (refreshError || !refreshData.session) {\n                    console.error(\"ApiConfigContext - Impossible de rafra\\xeechir la session:\", refreshError);\n                    setSyncStatus(\"error\");\n                    setSyncErrors((prev)=>[\n                            ...prev,\n                            `Session expirée: ${refreshError?.message || \"Erreur inconnue\"}`\n                        ]);\n                    return {\n                        isValid: false,\n                        message: \"Session expir\\xe9e, veuillez vous reconnecter\"\n                    };\n                }\n                console.log(\"ApiConfigContext - Session rafra\\xeechie avec succ\\xe8s\");\n            }\n            // Récupérer la configuration existante pour obtenir le provider\n            const existingConfig = getConfigById(id);\n            if (!existingConfig) {\n                console.error(\"ApiConfigContext - Configuration non trouv\\xe9e localement:\", id);\n                setSyncStatus(\"error\");\n                setSyncErrors((prev)=>[\n                        ...prev,\n                        `Configuration non trouvée localement: ${id}`\n                    ]);\n                return {\n                    isValid: false,\n                    message: \"Configuration non trouv\\xe9e\"\n                };\n            }\n            // Vérifier que la configuration existe dans Supabase et appartient à l'utilisateur\n            const { data: configData, error: configError } = await supabase.from(\"api_configurations\").select(\"*\").eq(\"id\", id).eq(\"user_id\", user.id).single();\n            if (configError) {\n                console.error(\"ApiConfigContext - Erreur lors de la v\\xe9rification de la configuration:\", configError);\n                setSyncErrors((prev)=>[\n                        ...prev,\n                        `Erreur de vérification: ${configError.message}`\n                    ]);\n                // Retry si possible\n                if (retryCount < MAX_SYNC_RETRIES) {\n                    console.log(`ApiConfigContext - Nouvelle tentative (${retryCount + 1}/${MAX_SYNC_RETRIES}) dans ${SYNC_RETRY_INTERVAL / 1000}s...`);\n                    await new Promise((resolve)=>setTimeout(resolve, SYNC_RETRY_INTERVAL));\n                    return updateConfig(id, config, retryCount + 1);\n                }\n                setSyncStatus(\"error\");\n                return {\n                    isValid: false,\n                    message: configError.message\n                };\n            }\n            if (!configData) {\n                console.error(\"ApiConfigContext - Configuration non trouv\\xe9e dans Supabase:\", id);\n                setSyncStatus(\"error\");\n                setSyncErrors((prev)=>[\n                        ...prev,\n                        `Configuration non trouvée dans Supabase: ${id}`\n                    ]);\n                // Supprimer la configuration de l'état local si elle n'existe plus dans Supabase\n                setConfigs((prevConfigs)=>prevConfigs.filter((c)=>c.id !== id));\n                // Mettre à jour le cache local\n                if (user) {\n                    const updatedConfigs = configs.filter((c)=>c.id !== id);\n                    saveConfigsToLocalStorage(user.id, updatedConfigs);\n                }\n                return {\n                    isValid: false,\n                    message: \"Configuration non trouv\\xe9e dans la base de donn\\xe9es\"\n                };\n            }\n            // Préparer les données à mettre à jour\n            const updateData = {\n                last_validated_at: new Date().toISOString()\n            };\n            // Mettre à jour le nom si fourni\n            if (config.name) {\n                updateData.name = config.name;\n            }\n            // Mettre à jour le modèle si fourni\n            if (config.model) {\n                updateData.model = config.model;\n            }\n            // Si une nouvelle clé API est fournie et différente de la valeur masquée, la valider puis la chiffrer\n            if (config.key && config.key !== \"••••••••••••••••\") {\n                // Valider la clé API avant de la mettre à jour\n                console.log(\"ApiConfigContext - Validation de la cl\\xe9 API avant mise \\xe0 jour...\");\n                const validationResult = await validateApiKey(config.provider || existingConfig.provider, config.key);\n                // Déterminer le statut en fonction du résultat de la validation\n                const status = validationResult.isValid ? \"valid\" : \"invalid\";\n                console.log(\"ApiConfigContext - Statut de la nouvelle cl\\xe9 API:\", status);\n                // Mettre à jour is_valid qui est toujours présent\n                updateData.is_valid = validationResult.isValid;\n                // Ajouter le statut seulement si la colonne existe\n                try {\n                    updateData.status = status;\n                } catch (e) {\n                    console.warn(\"ApiConfigContext - La colonne status n'existe peut-\\xeatre pas:\", e);\n                    setSyncErrors((prev)=>[\n                            ...prev,\n                            `Erreur avec la colonne status: ${e?.message || \"Erreur inconnue\"}`\n                        ]);\n                }\n                if (!validationResult.isValid) {\n                    console.error(\"ApiConfigContext - La cl\\xe9 API n'est pas valide:\", validationResult.message);\n                    setSyncErrors((prev)=>[\n                            ...prev,\n                            `Clé API invalide: ${validationResult.message}`\n                        ]);\n                // Continuer malgré l'échec de la validation pour permettre l'enregistrement de clés invalides\n                } else {\n                    console.log(\"ApiConfigContext - Cl\\xe9 API valid\\xe9e avec succ\\xe8s\");\n                }\n                // SOLUTION RADICALE: Stocker la clé API en clair sans chiffrement\n                updateData.api_key = config.key; // Utiliser la clé en clair\n            }\n            // Si aucune donnée à mettre à jour, retourner un succès\n            if (Object.keys(updateData).length === 1 && updateData.last_validated_at) {\n                console.log(\"ApiConfigContext - Aucune donn\\xe9e significative \\xe0 mettre \\xe0 jour\");\n                setSyncStatus(\"idle\");\n                return {\n                    isValid: true,\n                    message: \"Aucune modification effectu\\xe9e\"\n                };\n            }\n            // Requête avec timeout pour éviter les blocages\n            const timeoutPromise = new Promise((resolve)=>{\n                setTimeout(()=>{\n                    resolve({\n                        data: null,\n                        error: new Error(\"Timeout lors de la mise \\xe0 jour de la configuration\")\n                    });\n                }, 10000); // 10 secondes de timeout\n            });\n            // Requête Supabase\n            const updatePromise = supabase.from(\"api_configurations\").update(updateData).eq(\"id\", id).eq(\"user_id\", user.id).select(`\n          id,\n          name,\n          provider_id,\n          model,\n          is_valid,\n          status,\n          last_validated_at,\n          created_at,\n          api_providers (\n            id,\n            name,\n            slug\n          )\n        `).single();\n            // Utiliser Promise.race pour implémenter un timeout\n            const result = await Promise.race([\n                updatePromise,\n                timeoutPromise\n            ]);\n            const { data, error } = result;\n            if (error) {\n                console.error(\"ApiConfigContext - Erreur lors de la mise \\xe0 jour de la configuration:\", error);\n                setSyncErrors((prev)=>[\n                        ...prev,\n                        `Erreur de mise à jour: ${error.message}`\n                    ]);\n                // Retry si possible\n                if (retryCount < MAX_SYNC_RETRIES) {\n                    console.log(`ApiConfigContext - Nouvelle tentative (${retryCount + 1}/${MAX_SYNC_RETRIES}) dans ${SYNC_RETRY_INTERVAL / 1000}s...`);\n                    await new Promise((resolve)=>setTimeout(resolve, SYNC_RETRY_INTERVAL));\n                    return updateConfig(id, config, retryCount + 1);\n                }\n                setSyncStatus(\"error\");\n                return {\n                    isValid: false,\n                    message: error.message\n                };\n            }\n            if (!data) {\n                console.error(\"ApiConfigContext - Donn\\xe9es invalides re\\xe7ues de Supabase apr\\xe8s mise \\xe0 jour\");\n                setSyncErrors((prev)=>[\n                        ...prev,\n                        \"Donn\\xe9es invalides re\\xe7ues apr\\xe8s mise \\xe0 jour\"\n                    ]);\n                if (retryCount < MAX_SYNC_RETRIES) {\n                    console.log(`ApiConfigContext - Nouvelle tentative (${retryCount + 1}/${MAX_SYNC_RETRIES}) dans ${SYNC_RETRY_INTERVAL / 1000}s...`);\n                    await new Promise((resolve)=>setTimeout(resolve, SYNC_RETRY_INTERVAL));\n                    return updateConfig(id, config, retryCount + 1);\n                }\n                setSyncStatus(\"error\");\n                return {\n                    isValid: false,\n                    message: \"Erreur lors de la mise \\xe0 jour de la configuration\"\n                };\n            }\n            console.log(\"ApiConfigContext - Configuration mise \\xe0 jour avec succ\\xe8s\");\n            // Récupérer le slug du fournisseur\n            let providerSlug = existingConfig.provider;\n            try {\n                if (data.api_providers) {\n                    if (typeof data.api_providers === \"object\") {\n                        // Vérifier si api_providers est un tableau ou un objet\n                        if (Array.isArray(data.api_providers)) {\n                            // Si c'est un tableau, prendre le premier élément\n                            if (data.api_providers.length > 0) {\n                                providerSlug = data.api_providers[0].slug || existingConfig.provider;\n                            }\n                        } else {\n                            // Si c'est un objet, accéder directement au slug\n                            providerSlug = data.api_providers.slug || existingConfig.provider;\n                        }\n                    }\n                }\n            } catch (e) {\n                console.error(\"ApiConfigContext - Erreur lors de la r\\xe9cup\\xe9ration du slug:\", e);\n                setSyncErrors((prev)=>[\n                        ...prev,\n                        `Erreur de récupération du slug: ${e?.message || \"Erreur inconnue\"}`\n                    ]);\n            }\n            // Créer la configuration mise à jour\n            const updatedConfig = {\n                id: data.id,\n                name: data.name,\n                provider: providerSlug,\n                provider_id: data.provider_id,\n                model: data.model || \"\",\n                key: \"••••••••••••••••\",\n                isValidated: data.is_valid,\n                status: data.status || (data.is_valid ? \"valid\" : \"invalid\"),\n                last_validated_at: data.last_validated_at,\n                created_at: data.created_at\n            };\n            // Mettre à jour l'état local\n            const updatedConfigs = configs.map((c)=>c.id === id ? updatedConfig : c);\n            setConfigs(updatedConfigs);\n            // Sauvegarder dans le cache local avec la nouvelle version\n            const newVersion = configVersion + 1;\n            setConfigVersion(newVersion);\n            saveConfigsToLocalStorage(user.id, updatedConfigs);\n            // Mettre à jour le statut de synchronisation\n            setSyncStatus(\"idle\");\n            setLastSyncTime(Date.now());\n            return {\n                isValid: true,\n                message: config.key && !updateData.is_valid ? \"Configuration mise \\xe0 jour mais la cl\\xe9 API semble invalide\" : \"Configuration mise \\xe0 jour avec succ\\xe8s\"\n            };\n        } catch (error) {\n            console.error(\"ApiConfigContext - Exception lors de la mise \\xe0 jour de la configuration:\", error);\n            setSyncErrors((prev)=>[\n                    ...prev,\n                    `Exception: ${error?.message || \"Erreur inconnue\"}`\n                ]);\n            setSyncStatus(\"error\");\n            // Retry si possible\n            if (retryCount < MAX_SYNC_RETRIES) {\n                console.log(`ApiConfigContext - Nouvelle tentative (${retryCount + 1}/${MAX_SYNC_RETRIES}) dans ${SYNC_RETRY_INTERVAL / 1000}s...`);\n                await new Promise((resolve)=>setTimeout(resolve, SYNC_RETRY_INTERVAL));\n                return updateConfig(id, config, retryCount + 1);\n            }\n            return {\n                isValid: false,\n                message: error?.message || \"Erreur lors de la mise \\xe0 jour de la configuration\"\n            };\n        }\n    };\n    // Supprimer une configuration avec gestion robuste des erreurs et persistance locale\n    const deleteConfig = async (id, retryCount = 0)=>{\n        // Mettre à jour le statut de synchronisation\n        setSyncStatus(\"syncing\");\n        if (!user) {\n            console.error(\"ApiConfigContext - Impossible de supprimer la configuration: utilisateur non connect\\xe9\");\n            setSyncStatus(\"error\");\n            setSyncErrors((prev)=>[\n                    ...prev,\n                    \"Tentative de suppression sans utilisateur connect\\xe9\"\n                ]);\n            return;\n        }\n        try {\n            console.log(\"ApiConfigContext - Suppression de la configuration:\", id, \"tentative:\", retryCount + 1);\n            // Vérifier d'abord la session\n            const { data: { session } } = await supabase.auth.getSession();\n            if (!session) {\n                console.error(\"ApiConfigContext - Session Supabase expir\\xe9e ou invalide\");\n                // Tenter de rafraîchir la session\n                const { data: refreshData, error: refreshError } = await supabase.auth.refreshSession();\n                if (refreshError || !refreshData.session) {\n                    console.error(\"ApiConfigContext - Impossible de rafra\\xeechir la session:\", refreshError);\n                    setSyncStatus(\"error\");\n                    setSyncErrors((prev)=>[\n                            ...prev,\n                            `Session expirée: ${refreshError?.message || \"Erreur inconnue\"}`\n                        ]);\n                    return;\n                }\n                console.log(\"ApiConfigContext - Session rafra\\xeechie avec succ\\xe8s\");\n            }\n            // Vérifier que la configuration existe et appartient à l'utilisateur\n            const { data: configData, error: configError } = await supabase.from(\"api_configurations\").select(\"id\").eq(\"id\", id).eq(\"user_id\", user.id).single();\n            if (configError && configError.code !== \"PGRST116\") {\n                console.error(\"ApiConfigContext - Erreur lors de la v\\xe9rification de la configuration:\", configError);\n                setSyncErrors((prev)=>[\n                        ...prev,\n                        `Erreur de vérification: ${configError.message}`\n                    ]);\n                // Retry si possible\n                if (retryCount < MAX_SYNC_RETRIES) {\n                    console.log(`ApiConfigContext - Nouvelle tentative (${retryCount + 1}/${MAX_SYNC_RETRIES}) dans ${SYNC_RETRY_INTERVAL / 1000}s...`);\n                    await new Promise((resolve)=>setTimeout(resolve, SYNC_RETRY_INTERVAL));\n                    return deleteConfig(id, retryCount + 1);\n                }\n                setSyncStatus(\"error\");\n                return;\n            }\n            // Si la configuration n'existe pas dans Supabase, la supprimer de l'état local et du cache\n            if (!configData) {\n                console.log(\"ApiConfigContext - Configuration non trouv\\xe9e dans Supabase, suppression locale uniquement:\", id);\n                // Supprimer la configuration de l'état local\n                const updatedConfigs = configs.filter((config)=>config.id !== id);\n                setConfigs(updatedConfigs);\n                // Mettre à jour le cache local\n                const newVersion = configVersion + 1;\n                setConfigVersion(newVersion);\n                saveConfigsToLocalStorage(user.id, updatedConfigs);\n                // Vérifier s'il existe d'autres configurations avec le même ID dans d'autres tables\n                try {\n                    // Vérifier dans la table api_keys (ancienne table)\n                    const { data: oldKeyData, error: oldKeyError } = await supabase.from(\"api_keys\").delete().eq(\"id\", id);\n                    if (oldKeyError) {\n                        console.warn(\"ApiConfigContext - Erreur lors de la suppression dans la table api_keys:\", oldKeyError);\n                    } else if (oldKeyData) {\n                        console.log(\"ApiConfigContext - Configuration supprim\\xe9e de la table api_keys\");\n                    }\n                } catch (cleanupError) {\n                    console.warn(\"ApiConfigContext - Erreur lors du nettoyage des anciennes tables:\", cleanupError);\n                }\n                setSyncStatus(\"idle\");\n                setLastSyncTime(Date.now());\n                return;\n            }\n            // Requête avec timeout pour éviter les blocages\n            const timeoutPromise = new Promise((resolve)=>{\n                setTimeout(()=>{\n                    resolve({\n                        error: new Error(\"Timeout lors de la suppression de la configuration\")\n                    });\n                }, 10000); // 10 secondes de timeout\n            });\n            // Requête Supabase\n            const deletePromise = supabase.from(\"api_configurations\").delete().eq(\"id\", id).eq(\"user_id\", user.id);\n            // Utiliser Promise.race pour implémenter un timeout\n            const result = await Promise.race([\n                deletePromise,\n                timeoutPromise\n            ]);\n            const { error } = result;\n            if (error) {\n                console.error(\"ApiConfigContext - Erreur lors de la suppression de la configuration:\", error);\n                setSyncErrors((prev)=>[\n                        ...prev,\n                        `Erreur de suppression: ${error.message}`\n                    ]);\n                // Retry si possible\n                if (retryCount < MAX_SYNC_RETRIES) {\n                    console.log(`ApiConfigContext - Nouvelle tentative (${retryCount + 1}/${MAX_SYNC_RETRIES}) dans ${SYNC_RETRY_INTERVAL / 1000}s...`);\n                    await new Promise((resolve)=>setTimeout(resolve, SYNC_RETRY_INTERVAL));\n                    return deleteConfig(id, retryCount + 1);\n                }\n                setSyncStatus(\"error\");\n                return;\n            }\n            console.log(\"ApiConfigContext - Configuration supprim\\xe9e avec succ\\xe8s\");\n            // Supprimer la configuration de l'état local\n            const updatedConfigs = configs.filter((config)=>config.id !== id);\n            setConfigs(updatedConfigs);\n            // Mettre à jour le cache local avec la nouvelle version\n            const newVersion = configVersion + 1;\n            setConfigVersion(newVersion);\n            saveConfigsToLocalStorage(user.id, updatedConfigs);\n            // Mettre à jour le statut de synchronisation\n            setSyncStatus(\"idle\");\n            setLastSyncTime(Date.now());\n        } catch (error) {\n            console.error(\"ApiConfigContext - Exception lors de la suppression de la configuration:\", error);\n            setSyncErrors((prev)=>[\n                    ...prev,\n                    `Exception: ${error?.message || \"Erreur inconnue\"}`\n                ]);\n            setSyncStatus(\"error\");\n            // Retry si possible\n            if (retryCount < MAX_SYNC_RETRIES) {\n                console.log(`ApiConfigContext - Nouvelle tentative (${retryCount + 1}/${MAX_SYNC_RETRIES}) dans ${SYNC_RETRY_INTERVAL / 1000}s...`);\n                await new Promise((resolve)=>setTimeout(resolve, SYNC_RETRY_INTERVAL));\n                return deleteConfig(id, retryCount + 1);\n            }\n        }\n    };\n    // Obtenir une configuration par son ID\n    const getConfigById = (id)=>{\n        return configs.find((config)=>config.id === id);\n    };\n    // Obtenir toutes les configurations\n    const getAllConfigs = ()=>{\n        return configs;\n    };\n    // Fonction pour synchroniser les configurations en attente\n    const syncPendingConfigs = async ()=>{\n        if (!user || \"undefined\" === \"undefined\") return;\n        // Mettre à jour le statut de synchronisation\n        setSyncStatus(\"syncing\");\n        try {\n            // Récupérer les configurations en attente\n            const storedPending = localStorage.getItem(PENDING_CONFIGS_KEY);\n            if (!storedPending) {\n                setSyncStatus(\"idle\");\n                return;\n            }\n            let pendingData = {};\n            try {\n                pendingData = JSON.parse(storedPending);\n            } catch (e) {\n                console.error(\"ApiConfigContext - Erreur lors du parsing des configurations en attente:\", e);\n                setSyncErrors((prev)=>[\n                        ...prev,\n                        `Erreur de parsing des configurations en attente: ${e?.message || \"Erreur inconnue\"}`\n                    ]);\n                setSyncStatus(\"error\");\n                return;\n            }\n            // Vérifier s'il y a des configurations en attente pour l'utilisateur actuel\n            if (!pendingData[user.id] || pendingData[user.id].length === 0) {\n                setSyncStatus(\"idle\");\n                return;\n            }\n            console.log(\"ApiConfigContext - Synchronisation des configurations en attente:\", pendingData[user.id].length);\n            // Synchroniser chaque configuration en attente\n            const results = [];\n            for (const pendingConfig of pendingData[user.id]){\n                try {\n                    console.log(\"ApiConfigContext - Tentative de synchronisation de la configuration en attente:\", pendingConfig.name);\n                    const result = await addConfig(pendingConfig);\n                    results.push(result);\n                    if (result.id) {\n                        console.log(\"ApiConfigContext - Configuration en attente synchronis\\xe9e avec succ\\xe8s:\", pendingConfig.name);\n                    } else {\n                        console.error(\"ApiConfigContext - \\xc9chec de la synchronisation de la configuration en attente:\", pendingConfig.name);\n                    }\n                } catch (e) {\n                    console.error(\"ApiConfigContext - Erreur lors de la synchronisation de la configuration en attente:\", e);\n                    setSyncErrors((prev)=>[\n                            ...prev,\n                            `Erreur de synchronisation: ${e?.message || \"Erreur inconnue\"}`\n                        ]);\n                }\n            }\n            // Supprimer les configurations en attente qui ont été synchronisées avec succès\n            const successfulIds = results.filter((r)=>r.id).map((r)=>r.id);\n            if (successfulIds.length > 0) {\n                // Mettre à jour les configurations en attente\n                pendingData[user.id] = pendingData[user.id].filter((pc)=>{\n                    // Garder uniquement les configurations qui n'ont pas été synchronisées avec succès\n                    // On compare par nom car les configurations en attente n'ont pas d'ID\n                    return !results.some((r)=>r.id && r.message.includes(\"succ\\xe8s\") && pc.name === pc.name);\n                });\n                // Sauvegarder les configurations en attente mises à jour\n                localStorage.setItem(PENDING_CONFIGS_KEY, JSON.stringify(pendingData));\n                // Mettre à jour l'état local\n                setPendingConfigs(pendingData[user.id]);\n                console.log(\"ApiConfigContext - Configurations en attente mises \\xe0 jour:\", pendingData[user.id].length);\n            }\n            // Mettre à jour le statut de synchronisation\n            setSyncStatus(\"idle\");\n            setLastSyncTime(Date.now());\n        } catch (error) {\n            console.error(\"ApiConfigContext - Erreur lors de la synchronisation des configurations en attente:\", error);\n            setSyncErrors((prev)=>[\n                    ...prev,\n                    `Erreur de synchronisation: ${error?.message || \"Erreur inconnue\"}`\n                ]);\n            setSyncStatus(\"error\");\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ApiConfigContext.Provider, {\n        value: {\n            configs,\n            isLoading,\n            syncStatus,\n            lastSyncTime,\n            syncErrors,\n            pendingConfigs,\n            addConfig,\n            updateConfig,\n            deleteConfig,\n            getConfigById,\n            getAllConfigs,\n            validateApiKey,\n            syncPendingConfigs,\n            clearLocalStorageForUser\n        },\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            suppressHydrationWarning: true,\n            children: children\n        }, void 0, false, {\n            fileName: \"/workspace/hiiiiiiiii/contexts/ApiConfigContext.tsx\",\n            lineNumber: 1845,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/workspace/hiiiiiiiii/contexts/ApiConfigContext.tsx\",\n        lineNumber: 1827,\n        columnNumber: 5\n    }, this);\n}\n// Hook personnalisé pour utiliser le contexte\nfunction useApiConfig() {\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ApiConfigContext);\n    if (context === undefined) {\n        throw new Error(\"useApiConfig doit \\xeatre utilis\\xe9 \\xe0 l'int\\xe9rieur d'un ApiConfigProvider\");\n    }\n    return context;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./contexts/ApiConfigContext.tsx\n");

/***/ }),

/***/ "(ssr)/./contexts/AuthContext.tsx":
/*!**********************************!*\
  !*** ./contexts/AuthContext.tsx ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider),\n/* harmony export */   useAuth: () => (/* binding */ useAuth)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_supabase_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/utils/supabase/client */ \"(ssr)/./utils/supabase/client.ts\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/navigation */ \"(ssr)/./node_modules/next/navigation.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_navigation__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _utils_debug__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/utils/debug */ \"(ssr)/./utils/debug.ts\");\n/* __next_internal_client_entry_do_not_use__ AuthProvider,useAuth auto */ \n\n\n\n\n// Création du contexte\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\n// Provider du contexte\nfunction AuthProvider({ children }) {\n    const supabase = (0,_utils_supabase_client__WEBPACK_IMPORTED_MODULE_2__.createClient)();\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_3__.useRouter)();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [session, setSession] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [userData, setUserData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Fonction pour récupérer les données utilisateur\n    const fetchUserData = async (userId)=>{\n        console.log(\"AuthContext - Fetching user data for user:\", userId);\n        (0,_utils_debug__WEBPACK_IMPORTED_MODULE_4__.logLoadingEvent)(\"AuthContext\", \"Fetching user data\", {\n            userId\n        });\n        // Valeurs par défaut pour les données utilisateur\n        let userData = {\n            messagesCount: 0,\n            messagesLimit: 50,\n            isPremium: false,\n            createdImages: 0,\n            hasApiKey: false\n        };\n        try {\n            // Créer une promesse qui se résout avec les données utilisateur\n            const fetchDataPromise = async ()=>{\n                try {\n                    // Utiliser Promise.allSettled pour exécuter toutes les requêtes en parallèle\n                    // et continuer même si certaines échouent\n                    const [quotaResult, subscriptionResult, imagesResult, apiKeyResult] = await Promise.allSettled([\n                        // Récupérer les quotas\n                        supabase.from(\"user_quotas\").select(\"monthly_generations_used, monthly_generations_limit\").eq(\"user_id\", userId).single(),\n                        // Récupérer l'abonnement\n                        supabase.from(\"user_subscriptions\").select(\"status\").eq(\"user_id\", userId).eq(\"status\", \"active\").single(),\n                        // Compter les images\n                        supabase.from(\"generated_images\").select(\"id\", {\n                            count: \"exact\",\n                            head: true\n                        }).eq(\"user_id\", userId),\n                        // Vérifier les clés API\n                        supabase.from(\"api_configurations\").select(\"id\", {\n                            count: \"exact\",\n                            head: true\n                        }).eq(\"user_id\", userId)\n                    ]);\n                    // Traiter les résultats des quotas\n                    if (quotaResult.status === \"fulfilled\") {\n                        const { data: quotaData, error: quotaError } = quotaResult.value;\n                        if (quotaData) {\n                            userData.messagesCount = quotaData.monthly_generations_used || 0;\n                            userData.messagesLimit = quotaData.monthly_generations_limit || 50;\n                            console.log(\"AuthContext - User quota data:\", quotaData);\n                        } else if (quotaError && quotaError.code !== \"PGRST116\") {\n                            console.error(\"Erreur lors de la r\\xe9cup\\xe9ration des quotas:\", quotaError);\n                        }\n                    } else {\n                        console.error(\"\\xc9chec de la r\\xe9cup\\xe9ration des quotas:\", quotaResult.reason);\n                    }\n                    // Traiter les résultats de l'abonnement\n                    if (subscriptionResult.status === \"fulfilled\") {\n                        const { data: subscriptionData } = subscriptionResult.value;\n                        if (subscriptionData) {\n                            userData.isPremium = true;\n                            console.log(\"AuthContext - User has active subscription\");\n                        }\n                    } else {\n                        console.error(\"\\xc9chec de la r\\xe9cup\\xe9ration de l'abonnement:\", subscriptionResult.reason);\n                    }\n                    // Traiter les résultats du comptage des images\n                    if (imagesResult.status === \"fulfilled\") {\n                        const { count: imagesCount } = imagesResult.value;\n                        if (imagesCount !== null) {\n                            userData.createdImages = imagesCount;\n                            console.log(\"AuthContext - User has\", imagesCount, \"created images\");\n                        }\n                    } else {\n                        console.error(\"\\xc9chec du comptage des images:\", imagesResult.reason);\n                    }\n                    // Traiter les résultats de la vérification des clés API\n                    if (apiKeyResult.status === \"fulfilled\") {\n                        const { count: apiKeyCount } = apiKeyResult.value;\n                        if (apiKeyCount !== null) {\n                            userData.hasApiKey = apiKeyCount > 0;\n                            console.log(\"AuthContext - User has\", apiKeyCount, \"API keys\");\n                        }\n                    } else {\n                        console.error(\"\\xc9chec de la v\\xe9rification des cl\\xe9s API:\", apiKeyResult.reason);\n                    }\n                    return userData;\n                } catch (error) {\n                    console.error(\"Erreur lors de la r\\xe9cup\\xe9ration des donn\\xe9es:\", error);\n                    return userData; // Retourner les données par défaut en cas d'erreur\n                }\n            };\n            // Créer une promesse de timeout\n            const timeoutPromise = new Promise((resolve)=>{\n                setTimeout(()=>{\n                    console.warn(\"AuthContext - Timeout lors de la r\\xe9cup\\xe9ration des donn\\xe9es utilisateur\");\n                    (0,_utils_debug__WEBPACK_IMPORTED_MODULE_4__.logLoadingEvent)(\"AuthContext\", \"Timeout lors de la r\\xe9cup\\xe9ration des donn\\xe9es utilisateur\");\n                    resolve(userData); // Résoudre avec les données par défaut\n                }, 15000); // Timeout de 15 secondes (augmenté de 8 à 15 secondes)\n            });\n            // Utiliser Promise.race pour prendre le résultat le plus rapide\n            const result = await Promise.race([\n                fetchDataPromise(),\n                timeoutPromise\n            ]);\n            console.log(\"AuthContext - Final user data:\", result);\n            setUserData(result);\n        } catch (err) {\n            console.error(\"Erreur globale lors de la r\\xe9cup\\xe9ration des donn\\xe9es utilisateur:\", err);\n            // En cas d'erreur, définir des valeurs par défaut\n            setUserData(userData);\n        }\n    };\n    // Fonction pour rafraîchir les données utilisateur\n    const refreshUserData = async ()=>{\n        if (user) {\n            await fetchUserData(user.id);\n        }\n    };\n    // Fonction de connexion\n    const signIn = async (email, password)=>{\n        try {\n            setIsLoading(true);\n            const { data, error } = await supabase.auth.signInWithPassword({\n                email,\n                password\n            });\n            if (error) throw error;\n            setUser(data.user);\n            setSession(data.session);\n            if (data.user) {\n                await fetchUserData(data.user.id);\n            }\n            router.push(\"/generate\");\n            router.refresh();\n        } catch (err) {\n            setError(err instanceof Error ? err : new Error(\"Erreur de connexion\"));\n            throw err;\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    // Fonction d'inscription\n    const signUp = async (email, password)=>{\n        try {\n            setIsLoading(true);\n            const { data, error } = await supabase.auth.signUp({\n                email,\n                password,\n                options: {\n                    emailRedirectTo: `${window.location.origin}/api/auth/callback`\n                }\n            });\n            if (error) throw error;\n            // Si l'email n'a pas besoin d'être confirmé\n            if (data.user && data.user.email_confirmed_at) {\n                setUser(data.user);\n                setSession(data.session);\n                if (data.user) {\n                    await fetchUserData(data.user.id);\n                }\n                router.push(\"/generate\");\n                router.refresh();\n            } else {\n                // Rediriger vers la page de confirmation d'email\n                router.push(`/email-confirmation?email=${encodeURIComponent(email)}`);\n            }\n        } catch (err) {\n            setError(err instanceof Error ? err : new Error(\"Erreur d'inscription\"));\n            throw err;\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    // Fonction de déconnexion\n    const signOut = async ()=>{\n        try {\n            console.log(\"AuthContext - Signing out...\");\n            setIsLoading(true);\n            // Effacer d'abord les états locaux pour éviter des problèmes de synchronisation\n            setUser(null);\n            setSession(null);\n            setUserData(null);\n            // Supprimer la clé hasBeenAuthenticated du localStorage\n            if (false) {}\n            // Puis déconnecter l'utilisateur de Supabase\n            const { error } = await supabase.auth.signOut();\n            if (error) throw error;\n            console.log(\"AuthContext - Sign out successful, redirecting to home page\");\n            // Rediriger vers la page d'accueil avec un délai pour éviter les problèmes de navigation\n            setTimeout(()=>{\n                router.push(\"/\");\n                router.refresh();\n            }, 100);\n        } catch (err) {\n            console.error(\"AuthContext - Error during sign out:\", err);\n            setError(err instanceof Error ? err : new Error(\"Erreur de d\\xe9connexion\"));\n            throw err;\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    // Vérifier la session au chargement\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        let sessionTimeoutId;\n        const checkSession = async ()=>{\n            (0,_utils_debug__WEBPACK_IMPORTED_MODULE_4__.logLoadingEvent)(\"AuthContext\", \"Checking session\");\n            setIsLoading(true);\n            // Surveiller les changements d'état\n            (0,_utils_debug__WEBPACK_IMPORTED_MODULE_4__.monitorStateChanges)(\"AuthContext\", {\n                isLoading: true\n            });\n            // Créer une promesse qui se résout avec la session\n            const sessionPromise = async ()=>{\n                try {\n                    const { data, error } = await supabase.auth.getSession();\n                    if (error) {\n                        console.error(\"Erreur lors de la v\\xe9rification de la session:\", error);\n                        return {\n                            session: null,\n                            error\n                        };\n                    }\n                    return {\n                        session: data.session,\n                        error: null\n                    };\n                } catch (err) {\n                    console.error(\"Exception lors de la v\\xe9rification de la session:\", err);\n                    return {\n                        session: null,\n                        error: err\n                    };\n                }\n            };\n            // Créer une promesse de timeout\n            const timeoutPromise = new Promise((resolve)=>{\n                setTimeout(()=>{\n                    (0,_utils_debug__WEBPACK_IMPORTED_MODULE_4__.logLoadingEvent)(\"AuthContext\", \"Timeout lors de la v\\xe9rification de la session\");\n                    resolve({\n                        session: null,\n                        error: new Error(\"Timeout lors de la v\\xe9rification de la session\")\n                    });\n                }, 20000); // Timeout de 20 secondes (augmenté de 10 à 20 secondes)\n            });\n            try {\n                // Utiliser Promise.race pour prendre le résultat le plus rapide\n                const result = await Promise.race([\n                    sessionPromise(),\n                    timeoutPromise\n                ]);\n                const { session, error } = result;\n                if (error) {\n                    console.warn(\"AuthContext - Erreur ou timeout lors de la v\\xe9rification de la session:\", error);\n                    setError(error instanceof Error ? error : new Error(\"Erreur de session\"));\n                    setUser(null);\n                    setSession(null);\n                    setUserData(null);\n                } else {\n                    console.log(\"AuthContext - Session check result:\", {\n                        hasSession: !!session\n                    });\n                    setSession(session);\n                    if (session?.user) {\n                        setUser(session.user);\n                        // Utiliser fetchUserData qui a déjà sa propre gestion de timeout\n                        await fetchUserData(session.user.id);\n                    } else {\n                        console.log(\"AuthContext - No user in session\");\n                        setUser(null);\n                        setUserData(null);\n                    }\n                }\n            } catch (err) {\n                console.error(\"Erreur globale lors de la v\\xe9rification de la session:\", err);\n                setError(err instanceof Error ? err : new Error(\"Erreur de session\"));\n                // En cas d'erreur, définir l'utilisateur comme non authentifié\n                setUser(null);\n                setSession(null);\n                setUserData(null);\n            } finally{\n                console.log(\"AuthContext - Session check completed, setting isLoading to false\");\n                setIsLoading(false);\n                // Surveiller les changements d'état après la fin\n                (0,_utils_debug__WEBPACK_IMPORTED_MODULE_4__.monitorStateChanges)(\"AuthContext\", {\n                    isLoading: false\n                });\n            }\n        };\n        checkSession();\n        // Écouter les changements d'authentification\n        const { data: { subscription } } = supabase.auth.onAuthStateChange(async (event, session)=>{\n            (0,_utils_debug__WEBPACK_IMPORTED_MODULE_4__.logLoadingEvent)(\"AuthContext\", \"Auth state changed\", {\n                event,\n                hasSession: !!session\n            });\n            // Éviter de mettre isLoading à true pour certains événements qui ne nécessitent pas de chargement\n            const minorEvents = [\n                \"PASSWORD_RECOVERY\",\n                \"TOKEN_REFRESHED\",\n                \"USER_UPDATED\"\n            ];\n            if (!minorEvents.includes(event)) {\n                setIsLoading(true);\n                // Surveiller les changements d'état\n                (0,_utils_debug__WEBPACK_IMPORTED_MODULE_4__.monitorStateChanges)(\"AuthContext\", {\n                    isLoading: true,\n                    event\n                });\n            }\n            // Créer une promesse qui traite le changement d'état\n            const processPromise = async ()=>{\n                try {\n                    // Mettre à jour l'état de session immédiatement\n                    setSession(session);\n                    setUser(session?.user || null);\n                    if (session?.user) {\n                        // Utiliser fetchUserData qui a déjà sa propre gestion de timeout\n                        await fetchUserData(session.user.id);\n                    } else {\n                        console.log(\"AuthContext - User signed out or no user in session\");\n                        setUserData(null);\n                    }\n                    return {\n                        success: true\n                    };\n                } catch (error) {\n                    console.error(\"Erreur lors du traitement du changement d'\\xe9tat:\", error);\n                    // En cas d'erreur, définir l'utilisateur selon l'état de la session\n                    setUser(session?.user || null);\n                    setSession(session);\n                    if (!session?.user) {\n                        setUserData(null);\n                    }\n                    return {\n                        success: false,\n                        error\n                    };\n                }\n            };\n            // Créer une promesse de timeout\n            const timeoutPromise = new Promise((resolve)=>{\n                setTimeout(()=>{\n                    (0,_utils_debug__WEBPACK_IMPORTED_MODULE_4__.logLoadingEvent)(\"AuthContext\", \"Timeout lors du traitement du changement d'\\xe9tat\");\n                    resolve({\n                        success: false,\n                        error: new Error(\"Timeout lors du traitement du changement d'\\xe9tat\")\n                    });\n                }, 20000); // Timeout de 20 secondes (augmenté de 10 à 20 secondes)\n            });\n            try {\n                // Utiliser Promise.race pour prendre le résultat le plus rapide\n                await Promise.race([\n                    processPromise(),\n                    timeoutPromise\n                ]);\n            } catch (err) {\n                console.error(\"Erreur globale lors du changement d'\\xe9tat d'authentification:\", err);\n                setError(err instanceof Error ? err : new Error(\"Erreur de session\"));\n            } finally{\n                // Ne pas mettre isLoading à false pour les événements mineurs\n                if (!minorEvents.includes(event)) {\n                    console.log(\"AuthContext - Auth state change handled, setting isLoading to false\");\n                    setIsLoading(false);\n                    // Surveiller les changements d'état après la fin\n                    (0,_utils_debug__WEBPACK_IMPORTED_MODULE_4__.monitorStateChanges)(\"AuthContext\", {\n                        isLoading: false,\n                        event\n                    });\n                }\n            }\n        });\n        return ()=>{\n            subscription.unsubscribe();\n            if (sessionTimeoutId) clearTimeout(sessionTimeoutId);\n        };\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: {\n            user,\n            session,\n            userData,\n            isLoading,\n            error,\n            signIn,\n            signUp,\n            signOut,\n            refreshUserData\n        },\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            suppressHydrationWarning: true,\n            children: children\n        }, void 0, false, {\n            fileName: \"/workspace/hiiiiiiiii/contexts/AuthContext.tsx\",\n            lineNumber: 446,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/workspace/hiiiiiiiii/contexts/AuthContext.tsx\",\n        lineNumber: 433,\n        columnNumber: 5\n    }, this);\n}\n// Hook personnalisé pour utiliser le contexte\nfunction useAuth() {\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (context === undefined) {\n        throw new Error(\"useAuth doit \\xeatre utilis\\xe9 \\xe0 l'int\\xe9rieur d'un AuthProvider\");\n    }\n    return context;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./contexts/AuthContext.tsx\n");

/***/ }),

/***/ "(ssr)/./lib/utils.ts":
/*!**********************!*\
  !*** ./lib/utils.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cn: () => (/* binding */ cn)\n/* harmony export */ });\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var tailwind_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tailwind-merge */ \"(ssr)/./node_modules/tailwind-merge/dist/lib/tw-merge.mjs\");\n\n\nfunction cn(...inputs) {\n    return (0,tailwind_merge__WEBPACK_IMPORTED_MODULE_1__.twMerge)((0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(inputs));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9saWIvdXRpbHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTRDO0FBQ0o7QUFFakMsU0FBU0UsR0FBRyxHQUFHQyxNQUFvQjtJQUN4QyxPQUFPRix1REFBT0EsQ0FBQ0QsMENBQUlBLENBQUNHO0FBQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFtYmktYWkvLi9saWIvdXRpbHMudHM/Zjc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjbHN4LCB0eXBlIENsYXNzVmFsdWUgfSBmcm9tIFwiY2xzeFwiXG5pbXBvcnQgeyB0d01lcmdlIH0gZnJvbSBcInRhaWx3aW5kLW1lcmdlXCJcblxuZXhwb3J0IGZ1bmN0aW9uIGNuKC4uLmlucHV0czogQ2xhc3NWYWx1ZVtdKSB7XG4gIHJldHVybiB0d01lcmdlKGNsc3goaW5wdXRzKSlcbn1cbiJdLCJuYW1lcyI6WyJjbHN4IiwidHdNZXJnZSIsImNuIiwiaW5wdXRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./lib/utils.ts\n");

/***/ }),

/***/ "(ssr)/./utils/debug.ts":
/*!************************!*\
  !*** ./utils/debug.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearDebugHistory: () => (/* binding */ clearDebugHistory),\n/* harmony export */   detectLoadingLoop: () => (/* binding */ detectLoadingLoop),\n/* harmony export */   getDebugHistory: () => (/* binding */ getDebugHistory),\n/* harmony export */   logLoadingEvent: () => (/* binding */ logLoadingEvent),\n/* harmony export */   monitorStateChanges: () => (/* binding */ monitorStateChanges)\n/* harmony export */ });\n/* __next_internal_client_entry_do_not_use__ logLoadingEvent,clearDebugHistory,getDebugHistory,detectLoadingLoop,monitorStateChanges auto */ /**\n * Utilitaires de débogage pour identifier les problèmes de chargement et les boucles infinies\n */ // Fonction pour enregistrer les événements de chargement avec un timestamp\nfunction logLoadingEvent(component, event, data) {\n    const timestamp = new Date().toISOString();\n    const message = `[${timestamp}] ${component} - ${event}`;\n    if (data) {\n        console.log(message, data);\n    } else {\n        console.log(message);\n    }\n    // Ajouter l'événement à l'historique de débogage dans localStorage\n    try {\n        const debugHistory = JSON.parse(localStorage.getItem(\"debug_history\") || \"[]\");\n        debugHistory.push({\n            timestamp,\n            component,\n            event,\n            data\n        });\n        // Limiter l'historique à 100 entrées pour éviter de surcharger localStorage\n        if (debugHistory.length > 100) {\n            debugHistory.shift();\n        }\n        localStorage.setItem(\"debug_history\", JSON.stringify(debugHistory));\n    } catch (error) {\n        console.error(\"Erreur lors de l'enregistrement de l'historique de d\\xe9bogage:\", error);\n    }\n}\n// Fonction pour effacer l'historique de débogage\nfunction clearDebugHistory() {\n    try {\n        localStorage.removeItem(\"debug_history\");\n        console.log(\"Historique de d\\xe9bogage effac\\xe9\");\n    } catch (error) {\n        console.error(\"Erreur lors de l'effacement de l'historique de d\\xe9bogage:\", error);\n    }\n}\n// Fonction pour récupérer l'historique de débogage\nfunction getDebugHistory() {\n    try {\n        return JSON.parse(localStorage.getItem(\"debug_history\") || \"[]\");\n    } catch (error) {\n        console.error(\"Erreur lors de la r\\xe9cup\\xe9ration de l'historique de d\\xe9bogage:\", error);\n        return [];\n    }\n}\n// Fonction pour détecter les boucles potentielles\nfunction detectLoadingLoop() {\n    try {\n        const history = getDebugHistory();\n        const loadingEvents = history.filter((entry)=>entry.event.includes(\"loading\") || entry.event.includes(\"Loading\"));\n        // Si plus de 10 événements de chargement en moins de 5 secondes, c'est probablement une boucle\n        if (loadingEvents.length > 10) {\n            const lastEvents = loadingEvents.slice(-10);\n            const firstTimestamp = new Date(lastEvents[0].timestamp).getTime();\n            const lastTimestamp = new Date(lastEvents[lastEvents.length - 1].timestamp).getTime();\n            if (lastTimestamp - firstTimestamp < 5000) {\n                console.error(\"ALERTE: Boucle de chargement potentielle d\\xe9tect\\xe9e!\");\n                return true;\n            }\n        }\n        return false;\n    } catch (error) {\n        console.error(\"Erreur lors de la d\\xe9tection de boucle:\", error);\n        return false;\n    }\n}\n// Hook pour surveiller les changements d'état et détecter les boucles potentielles\nfunction monitorStateChanges(componentName, stateObject) {\n    // Enregistrer l'état actuel\n    logLoadingEvent(componentName, \"State update\", stateObject);\n    // Vérifier s'il y a une boucle potentielle\n    if (detectLoadingLoop()) {\n        // Afficher un avertissement dans la console\n        console.warn(\"Boucle potentielle d\\xe9tect\\xe9e dans\", componentName);\n        console.table(getDebugHistory().slice(-20));\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi91dGlscy9kZWJ1Zy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs2SUFFQTs7Q0FFQyxHQUVELDJFQUEyRTtBQUNwRSxTQUFTQSxnQkFBZ0JDLFNBQWlCLEVBQUVDLEtBQWEsRUFBRUMsSUFBVTtJQUMxRSxNQUFNQyxZQUFZLElBQUlDLE9BQU9DLFdBQVc7SUFDeEMsTUFBTUMsVUFBVSxDQUFDLENBQUMsRUFBRUgsVUFBVSxFQUFFLEVBQUVILFVBQVUsR0FBRyxFQUFFQyxNQUFNLENBQUM7SUFFeEQsSUFBSUMsTUFBTTtRQUNSSyxRQUFRQyxHQUFHLENBQUNGLFNBQVNKO0lBQ3ZCLE9BQU87UUFDTEssUUFBUUMsR0FBRyxDQUFDRjtJQUNkO0lBRUEsbUVBQW1FO0lBQ25FLElBQUk7UUFDRixNQUFNRyxlQUFlQyxLQUFLQyxLQUFLLENBQUNDLGFBQWFDLE9BQU8sQ0FBQyxvQkFBb0I7UUFDekVKLGFBQWFLLElBQUksQ0FBQztZQUFFWDtZQUFXSDtZQUFXQztZQUFPQztRQUFLO1FBRXRELDRFQUE0RTtRQUM1RSxJQUFJTyxhQUFhTSxNQUFNLEdBQUcsS0FBSztZQUM3Qk4sYUFBYU8sS0FBSztRQUNwQjtRQUVBSixhQUFhSyxPQUFPLENBQUMsaUJBQWlCUCxLQUFLUSxTQUFTLENBQUNUO0lBQ3ZELEVBQUUsT0FBT1UsT0FBTztRQUNkWixRQUFRWSxLQUFLLENBQUMsbUVBQWtFQTtJQUNsRjtBQUNGO0FBRUEsaURBQWlEO0FBQzFDLFNBQVNDO0lBQ2QsSUFBSTtRQUNGUixhQUFhUyxVQUFVLENBQUM7UUFDeEJkLFFBQVFDLEdBQUcsQ0FBQztJQUNkLEVBQUUsT0FBT1csT0FBTztRQUNkWixRQUFRWSxLQUFLLENBQUMsK0RBQThEQTtJQUM5RTtBQUNGO0FBRUEsbURBQW1EO0FBQzVDLFNBQVNHO0lBQ2QsSUFBSTtRQUNGLE9BQU9aLEtBQUtDLEtBQUssQ0FBQ0MsYUFBYUMsT0FBTyxDQUFDLG9CQUFvQjtJQUM3RCxFQUFFLE9BQU9NLE9BQU87UUFDZFosUUFBUVksS0FBSyxDQUFDLHdFQUFnRUE7UUFDOUUsT0FBTyxFQUFFO0lBQ1g7QUFDRjtBQUVBLGtEQUFrRDtBQUMzQyxTQUFTSTtJQUNkLElBQUk7UUFDRixNQUFNQyxVQUFVRjtRQUNoQixNQUFNRyxnQkFBZ0JELFFBQVFFLE1BQU0sQ0FBQ0MsQ0FBQUEsUUFBU0EsTUFBTTFCLEtBQUssQ0FBQzJCLFFBQVEsQ0FBQyxjQUFjRCxNQUFNMUIsS0FBSyxDQUFDMkIsUUFBUSxDQUFDO1FBRXRHLCtGQUErRjtRQUMvRixJQUFJSCxjQUFjVixNQUFNLEdBQUcsSUFBSTtZQUM3QixNQUFNYyxhQUFhSixjQUFjSyxLQUFLLENBQUMsQ0FBQztZQUN4QyxNQUFNQyxpQkFBaUIsSUFBSTNCLEtBQUt5QixVQUFVLENBQUMsRUFBRSxDQUFDMUIsU0FBUyxFQUFFNkIsT0FBTztZQUNoRSxNQUFNQyxnQkFBZ0IsSUFBSTdCLEtBQUt5QixVQUFVLENBQUNBLFdBQVdkLE1BQU0sR0FBRyxFQUFFLENBQUNaLFNBQVMsRUFBRTZCLE9BQU87WUFFbkYsSUFBSUMsZ0JBQWdCRixpQkFBaUIsTUFBTTtnQkFDekN4QixRQUFRWSxLQUFLLENBQUM7Z0JBQ2QsT0FBTztZQUNUO1FBQ0Y7UUFFQSxPQUFPO0lBQ1QsRUFBRSxPQUFPQSxPQUFPO1FBQ2RaLFFBQVFZLEtBQUssQ0FBQyw2Q0FBMENBO1FBQ3hELE9BQU87SUFDVDtBQUNGO0FBRUEsbUZBQW1GO0FBQzVFLFNBQVNlLG9CQUFvQkMsYUFBcUIsRUFBRUMsV0FBZ0M7SUFDekYsNEJBQTRCO0lBQzVCckMsZ0JBQWdCb0MsZUFBZSxnQkFBZ0JDO0lBRS9DLDJDQUEyQztJQUMzQyxJQUFJYixxQkFBcUI7UUFDdkIsNENBQTRDO1FBQzVDaEIsUUFBUThCLElBQUksQ0FBQywwQ0FBb0NGO1FBQ2pENUIsUUFBUStCLEtBQUssQ0FBQ2hCLGtCQUFrQlEsS0FBSyxDQUFDLENBQUM7SUFDekM7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2JhbWJpLWFpLy4vdXRpbHMvZGVidWcudHM/OWQ0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbi8qKlxuICogVXRpbGl0YWlyZXMgZGUgZMOpYm9nYWdlIHBvdXIgaWRlbnRpZmllciBsZXMgcHJvYmzDqG1lcyBkZSBjaGFyZ2VtZW50IGV0IGxlcyBib3VjbGVzIGluZmluaWVzXG4gKi9cblxuLy8gRm9uY3Rpb24gcG91ciBlbnJlZ2lzdHJlciBsZXMgw6l2w6luZW1lbnRzIGRlIGNoYXJnZW1lbnQgYXZlYyB1biB0aW1lc3RhbXBcbmV4cG9ydCBmdW5jdGlvbiBsb2dMb2FkaW5nRXZlbnQoY29tcG9uZW50OiBzdHJpbmcsIGV2ZW50OiBzdHJpbmcsIGRhdGE/OiBhbnkpIHtcbiAgY29uc3QgdGltZXN0YW1wID0gbmV3IERhdGUoKS50b0lTT1N0cmluZygpO1xuICBjb25zdCBtZXNzYWdlID0gYFske3RpbWVzdGFtcH1dICR7Y29tcG9uZW50fSAtICR7ZXZlbnR9YDtcbiAgXG4gIGlmIChkYXRhKSB7XG4gICAgY29uc29sZS5sb2cobWVzc2FnZSwgZGF0YSk7XG4gIH0gZWxzZSB7XG4gICAgY29uc29sZS5sb2cobWVzc2FnZSk7XG4gIH1cbiAgXG4gIC8vIEFqb3V0ZXIgbCfDqXbDqW5lbWVudCDDoCBsJ2hpc3RvcmlxdWUgZGUgZMOpYm9nYWdlIGRhbnMgbG9jYWxTdG9yYWdlXG4gIHRyeSB7XG4gICAgY29uc3QgZGVidWdIaXN0b3J5ID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnZGVidWdfaGlzdG9yeScpIHx8ICdbXScpO1xuICAgIGRlYnVnSGlzdG9yeS5wdXNoKHsgdGltZXN0YW1wLCBjb21wb25lbnQsIGV2ZW50LCBkYXRhIH0pO1xuICAgIFxuICAgIC8vIExpbWl0ZXIgbCdoaXN0b3JpcXVlIMOgIDEwMCBlbnRyw6llcyBwb3VyIMOpdml0ZXIgZGUgc3VyY2hhcmdlciBsb2NhbFN0b3JhZ2VcbiAgICBpZiAoZGVidWdIaXN0b3J5Lmxlbmd0aCA+IDEwMCkge1xuICAgICAgZGVidWdIaXN0b3J5LnNoaWZ0KCk7XG4gICAgfVxuICAgIFxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdkZWJ1Z19oaXN0b3J5JywgSlNPTi5zdHJpbmdpZnkoZGVidWdIaXN0b3J5KSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyZXVyIGxvcnMgZGUgbFxcJ2VucmVnaXN0cmVtZW50IGRlIGxcXCdoaXN0b3JpcXVlIGRlIGTDqWJvZ2FnZTonLCBlcnJvcik7XG4gIH1cbn1cblxuLy8gRm9uY3Rpb24gcG91ciBlZmZhY2VyIGwnaGlzdG9yaXF1ZSBkZSBkw6lib2dhZ2VcbmV4cG9ydCBmdW5jdGlvbiBjbGVhckRlYnVnSGlzdG9yeSgpIHtcbiAgdHJ5IHtcbiAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgnZGVidWdfaGlzdG9yeScpO1xuICAgIGNvbnNvbGUubG9nKCdIaXN0b3JpcXVlIGRlIGTDqWJvZ2FnZSBlZmZhY8OpJyk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyZXVyIGxvcnMgZGUgbFxcJ2VmZmFjZW1lbnQgZGUgbFxcJ2hpc3RvcmlxdWUgZGUgZMOpYm9nYWdlOicsIGVycm9yKTtcbiAgfVxufVxuXG4vLyBGb25jdGlvbiBwb3VyIHLDqWN1cMOpcmVyIGwnaGlzdG9yaXF1ZSBkZSBkw6lib2dhZ2VcbmV4cG9ydCBmdW5jdGlvbiBnZXREZWJ1Z0hpc3RvcnkoKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2RlYnVnX2hpc3RvcnknKSB8fCAnW10nKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJldXIgbG9ycyBkZSBsYSByw6ljdXDDqXJhdGlvbiBkZSBsXFwnaGlzdG9yaXF1ZSBkZSBkw6lib2dhZ2U6JywgZXJyb3IpO1xuICAgIHJldHVybiBbXTtcbiAgfVxufVxuXG4vLyBGb25jdGlvbiBwb3VyIGTDqXRlY3RlciBsZXMgYm91Y2xlcyBwb3RlbnRpZWxsZXNcbmV4cG9ydCBmdW5jdGlvbiBkZXRlY3RMb2FkaW5nTG9vcCgpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBoaXN0b3J5ID0gZ2V0RGVidWdIaXN0b3J5KCk7XG4gICAgY29uc3QgbG9hZGluZ0V2ZW50cyA9IGhpc3RvcnkuZmlsdGVyKGVudHJ5ID0+IGVudHJ5LmV2ZW50LmluY2x1ZGVzKCdsb2FkaW5nJykgfHwgZW50cnkuZXZlbnQuaW5jbHVkZXMoJ0xvYWRpbmcnKSk7XG4gICAgXG4gICAgLy8gU2kgcGx1cyBkZSAxMCDDqXbDqW5lbWVudHMgZGUgY2hhcmdlbWVudCBlbiBtb2lucyBkZSA1IHNlY29uZGVzLCBjJ2VzdCBwcm9iYWJsZW1lbnQgdW5lIGJvdWNsZVxuICAgIGlmIChsb2FkaW5nRXZlbnRzLmxlbmd0aCA+IDEwKSB7XG4gICAgICBjb25zdCBsYXN0RXZlbnRzID0gbG9hZGluZ0V2ZW50cy5zbGljZSgtMTApO1xuICAgICAgY29uc3QgZmlyc3RUaW1lc3RhbXAgPSBuZXcgRGF0ZShsYXN0RXZlbnRzWzBdLnRpbWVzdGFtcCkuZ2V0VGltZSgpO1xuICAgICAgY29uc3QgbGFzdFRpbWVzdGFtcCA9IG5ldyBEYXRlKGxhc3RFdmVudHNbbGFzdEV2ZW50cy5sZW5ndGggLSAxXS50aW1lc3RhbXApLmdldFRpbWUoKTtcbiAgICAgIFxuICAgICAgaWYgKGxhc3RUaW1lc3RhbXAgLSBmaXJzdFRpbWVzdGFtcCA8IDUwMDApIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignQUxFUlRFOiBCb3VjbGUgZGUgY2hhcmdlbWVudCBwb3RlbnRpZWxsZSBkw6l0ZWN0w6llIScpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0VycmV1ciBsb3JzIGRlIGxhIGTDqXRlY3Rpb24gZGUgYm91Y2xlOicsIGVycm9yKTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxuLy8gSG9vayBwb3VyIHN1cnZlaWxsZXIgbGVzIGNoYW5nZW1lbnRzIGQnw6l0YXQgZXQgZMOpdGVjdGVyIGxlcyBib3VjbGVzIHBvdGVudGllbGxlc1xuZXhwb3J0IGZ1bmN0aW9uIG1vbml0b3JTdGF0ZUNoYW5nZXMoY29tcG9uZW50TmFtZTogc3RyaW5nLCBzdGF0ZU9iamVjdDogUmVjb3JkPHN0cmluZywgYW55Pikge1xuICAvLyBFbnJlZ2lzdHJlciBsJ8OpdGF0IGFjdHVlbFxuICBsb2dMb2FkaW5nRXZlbnQoY29tcG9uZW50TmFtZSwgJ1N0YXRlIHVwZGF0ZScsIHN0YXRlT2JqZWN0KTtcbiAgXG4gIC8vIFbDqXJpZmllciBzJ2lsIHkgYSB1bmUgYm91Y2xlIHBvdGVudGllbGxlXG4gIGlmIChkZXRlY3RMb2FkaW5nTG9vcCgpKSB7XG4gICAgLy8gQWZmaWNoZXIgdW4gYXZlcnRpc3NlbWVudCBkYW5zIGxhIGNvbnNvbGVcbiAgICBjb25zb2xlLndhcm4oJ0JvdWNsZSBwb3RlbnRpZWxsZSBkw6l0ZWN0w6llIGRhbnMnLCBjb21wb25lbnROYW1lKTtcbiAgICBjb25zb2xlLnRhYmxlKGdldERlYnVnSGlzdG9yeSgpLnNsaWNlKC0yMCkpO1xuICB9XG59XG4iXSwibmFtZXMiOlsibG9nTG9hZGluZ0V2ZW50IiwiY29tcG9uZW50IiwiZXZlbnQiLCJkYXRhIiwidGltZXN0YW1wIiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwibWVzc2FnZSIsImNvbnNvbGUiLCJsb2ciLCJkZWJ1Z0hpc3RvcnkiLCJKU09OIiwicGFyc2UiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwicHVzaCIsImxlbmd0aCIsInNoaWZ0Iiwic2V0SXRlbSIsInN0cmluZ2lmeSIsImVycm9yIiwiY2xlYXJEZWJ1Z0hpc3RvcnkiLCJyZW1vdmVJdGVtIiwiZ2V0RGVidWdIaXN0b3J5IiwiZGV0ZWN0TG9hZGluZ0xvb3AiLCJoaXN0b3J5IiwibG9hZGluZ0V2ZW50cyIsImZpbHRlciIsImVudHJ5IiwiaW5jbHVkZXMiLCJsYXN0RXZlbnRzIiwic2xpY2UiLCJmaXJzdFRpbWVzdGFtcCIsImdldFRpbWUiLCJsYXN0VGltZXN0YW1wIiwibW9uaXRvclN0YXRlQ2hhbmdlcyIsImNvbXBvbmVudE5hbWUiLCJzdGF0ZU9iamVjdCIsIndhcm4iLCJ0YWJsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./utils/debug.ts\n");

/***/ }),

/***/ "(ssr)/./utils/supabase/client.ts":
/*!**********************************!*\
  !*** ./utils/supabase/client.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createClient: () => (/* binding */ createClient)\n/* harmony export */ });\n/* harmony import */ var _supabase_ssr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/ssr */ \"(ssr)/./node_modules/@supabase/ssr/dist/main/index.js\");\n/* harmony import */ var _supabase_ssr__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_supabase_ssr__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ createClient auto */ \nfunction createClient() {\n    return (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_0__.createBrowserClient)(\"https://lqpqfmwfvtxofeaucwqw.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxxcHFmbXdmdnR4b2ZlYXVjd3F3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDcxMjYwMjAsImV4cCI6MjA2MjcwMjAyMH0.8aBfTKuXcAK5QQCqbU0KLmo3PdmNQzC7UqBzL4JW2ns\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi91dGlscy9zdXBhYmFzZS9jbGllbnQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O2tFQUVvRDtBQUU3QyxTQUFTQztJQUNkLE9BQU9ELGtFQUFtQkEsQ0FDeEJFLDBDQUFvQyxFQUNwQ0Esa05BQXlDO0FBRTdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFtYmktYWkvLi91dGlscy9zdXBhYmFzZS9jbGllbnQudHM/OGM2NSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCB7IGNyZWF0ZUJyb3dzZXJDbGllbnQgfSBmcm9tICdAc3VwYWJhc2Uvc3NyJztcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNsaWVudCgpIHtcbiAgcmV0dXJuIGNyZWF0ZUJyb3dzZXJDbGllbnQoXG4gICAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMISxcbiAgICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSFcbiAgKTtcbn1cbiJdLCJuYW1lcyI6WyJjcmVhdGVCcm93c2VyQ2xpZW50IiwiY3JlYXRlQ2xpZW50IiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./utils/supabase/client.ts\n");

/***/ }),

/***/ "(rsc)/./app/globals.css":
/*!*************************!*\
  !*** ./app/globals.css ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"7b30ae7831d7\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLGNBQWM7QUFDN0IsSUFBSSxLQUFVLEVBQUUsRUFBdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYW1iaS1haS8uL2FwcC9nbG9iYWxzLmNzcz8wMzJiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiN2IzMGFlNzgzMWQ3XCJcbmlmIChtb2R1bGUuaG90KSB7IG1vZHVsZS5ob3QuYWNjZXB0KCkgfVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./app/globals.css\n");

/***/ }),

/***/ "(rsc)/./app/(auth)/layout.tsx":
/*!*******************************!*\
  !*** ./app/(auth)/layout.tsx ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AuthLayout)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction AuthLayout({ children }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"min-h-screen flex flex-col items-center justify-center bg-bambi-background p-4\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"w-full max-w-md\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"mb-8 text-center\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"text-3xl font-bold text-bambi-accent\",\n                        children: \"Bambi AI\"\n                    }, void 0, false, {\n                        fileName: \"/workspace/hiiiiiiiii/app/(auth)/layout.tsx\",\n                        lineNumber: 10,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/workspace/hiiiiiiiii/app/(auth)/layout.tsx\",\n                    lineNumber: 9,\n                    columnNumber: 9\n                }, this),\n                children\n            ]\n        }, void 0, true, {\n            fileName: \"/workspace/hiiiiiiiii/app/(auth)/layout.tsx\",\n            lineNumber: 8,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/workspace/hiiiiiiiii/app/(auth)/layout.tsx\",\n        lineNumber: 7,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvKGF1dGgpL2xheW91dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFlLFNBQVNBLFdBQVcsRUFDakNDLFFBQVEsRUFHVDtJQUNDLHFCQUNFLDhEQUFDQztRQUFJQyxXQUFVO2tCQUNiLDRFQUFDRDtZQUFJQyxXQUFVOzs4QkFDYiw4REFBQ0Q7b0JBQUlDLFdBQVU7OEJBQ2IsNEVBQUNEO3dCQUFJQyxXQUFVO2tDQUF1Qzs7Ozs7Ozs7Ozs7Z0JBRXZERjs7Ozs7Ozs7Ozs7O0FBSVQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYW1iaS1haS8uL2FwcC8oYXV0aCkvbGF5b3V0LnRzeD83ZDljIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEF1dGhMYXlvdXQoe1xuICBjaGlsZHJlbixcbn06IHtcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcbn0pIHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cIm1pbi1oLXNjcmVlbiBmbGV4IGZsZXgtY29sIGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBiZy1iYW1iaS1iYWNrZ3JvdW5kIHAtNFwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJ3LWZ1bGwgbWF4LXctbWRcIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYi04IHRleHQtY2VudGVyXCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LTN4bCBmb250LWJvbGQgdGV4dC1iYW1iaS1hY2NlbnRcIj5CYW1iaSBBSTwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59XG4iXSwibmFtZXMiOlsiQXV0aExheW91dCIsImNoaWxkcmVuIiwiZGl2IiwiY2xhc3NOYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/(auth)/layout.tsx\n");

/***/ }),

/***/ "(rsc)/./app/(auth)/login/page.tsx":
/*!***********************************!*\
  !*** ./app/(auth)/login/page.tsx ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ LoginPage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_auth_LoginForm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/auth/LoginForm */ \"(rsc)/./components/auth/LoginForm.tsx\");\n\n\nfunction LoginPage() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_auth_LoginForm__WEBPACK_IMPORTED_MODULE_1__.LoginForm, {}, void 0, false, {\n        fileName: \"/workspace/hiiiiiiiii/app/(auth)/login/page.tsx\",\n        lineNumber: 4,\n        columnNumber: 10\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvKGF1dGgpL2xvZ2luL3BhZ2UudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXdEO0FBRXpDLFNBQVNDO0lBQ3RCLHFCQUFPLDhEQUFDRCxpRUFBU0E7Ozs7O0FBQ25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFtYmktYWkvLi9hcHAvKGF1dGgpL2xvZ2luL3BhZ2UudHN4PzFiOTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTG9naW5Gb3JtIH0gZnJvbSBcIkAvY29tcG9uZW50cy9hdXRoL0xvZ2luRm9ybVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBMb2dpblBhZ2UoKSB7XG4gIHJldHVybiA8TG9naW5Gb3JtIC8+O1xufVxuIl0sIm5hbWVzIjpbIkxvZ2luRm9ybSIsIkxvZ2luUGFnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./app/(auth)/login/page.tsx\n");

/***/ }),

/***/ "(rsc)/./app/layout.tsx":
/*!************************!*\
  !*** ./app/layout.tsx ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RootLayout),\n/* harmony export */   metadata: () => (/* binding */ metadata)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_font_google_target_css_path_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/font/google/target.css?{\"path\":\"app/layout.tsx\",\"import\":\"Inter\",\"arguments\":[{\"subsets\":[\"latin\"]}],\"variableName\":\"inter\"} */ \"(rsc)/./node_modules/next/font/google/target.css?{\\\"path\\\":\\\"app/layout.tsx\\\",\\\"import\\\":\\\"Inter\\\",\\\"arguments\\\":[{\\\"subsets\\\":[\\\"latin\\\"]}],\\\"variableName\\\":\\\"inter\\\"}\");\n/* harmony import */ var next_font_google_target_css_path_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_font_google_target_css_path_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./globals.css */ \"(rsc)/./app/globals.css\");\n/* harmony import */ var _components_providers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/providers */ \"(rsc)/./components/providers.tsx\");\n/* harmony import */ var _components_debug_DebugPanel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/debug/DebugPanel */ \"(rsc)/./components/debug/DebugPanel.tsx\");\n\n\n\n\n\nconst metadata = {\n    title: \"Bambi AI - Generate Images with Your Own API Keys\",\n    description: \"Bambi AI is a secure, flexible platform for generating high-quality AI images using your own API keys (BYOK). Compatible with OpenAI, Stability AI, Google, and more.\",\n    keywords: \"AI image generation, BYOK, OpenAI, DALL-E, Stable Diffusion, API keys, secure image generation\"\n};\n// Script minimal pour éviter les erreurs d'hydratation\nconst fixHydrationScript = `\n  (function() {\n    try {\n      // Empêcher les modifications automatiques du DOM par le navigateur\n      document.documentElement.setAttribute('data-no-auto-format', 'true');\n    } catch (e) {\n      console.error('Hydration script error:', e);\n    }\n  })();\n`;\nfunction RootLayout({ children }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"html\", {\n        lang: \"en\",\n        className: `dark ${(next_font_google_target_css_path_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_4___default().className)}`,\n        translate: \"no\",\n        suppressHydrationWarning: true,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"head\", {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"format-detection\",\n                        content: \"telephone=no, date=no, email=no, address=no\"\n                    }, void 0, false, {\n                        fileName: \"/workspace/hiiiiiiiii/app/layout.tsx\",\n                        lineNumber: 36,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"script\", {\n                        dangerouslySetInnerHTML: {\n                            __html: fixHydrationScript\n                        }\n                    }, void 0, false, {\n                        fileName: \"/workspace/hiiiiiiiii/app/layout.tsx\",\n                        lineNumber: 41,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/workspace/hiiiiiiiii/app/layout.tsx\",\n                lineNumber: 34,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"body\", {\n                className: (next_font_google_target_css_path_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_4___default().className),\n                suppressHydrationWarning: true,\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_providers__WEBPACK_IMPORTED_MODULE_2__.Providers, {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            suppressHydrationWarning: true,\n                            children: children\n                        }, void 0, false, {\n                            fileName: \"/workspace/hiiiiiiiii/app/layout.tsx\",\n                            lineNumber: 45,\n                            columnNumber: 11\n                        }, this),\n                         true && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            suppressHydrationWarning: true,\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_debug_DebugPanel__WEBPACK_IMPORTED_MODULE_3__.DebugPanel, {}, void 0, false, {\n                                fileName: \"/workspace/hiiiiiiiii/app/layout.tsx\",\n                                lineNumber: 51,\n                                columnNumber: 15\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/workspace/hiiiiiiiii/app/layout.tsx\",\n                            lineNumber: 50,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/workspace/hiiiiiiiii/app/layout.tsx\",\n                    lineNumber: 44,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/workspace/hiiiiiiiii/app/layout.tsx\",\n                lineNumber: 43,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/workspace/hiiiiiiiii/app/layout.tsx\",\n        lineNumber: 33,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvbGF5b3V0LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBTU1BO0FBSmdCO0FBQzRCO0FBQ1E7QUFJbkQsTUFBTUcsV0FBcUI7SUFDaENDLE9BQU87SUFDUEMsYUFBYTtJQUNiQyxVQUFVO0FBQ1osRUFBQztBQUVELHVEQUF1RDtBQUN2RCxNQUFNQyxxQkFBcUIsQ0FBQzs7Ozs7Ozs7O0FBUzVCLENBQUM7QUFFYyxTQUFTQyxXQUFXLEVBQ2pDQyxRQUFRLEVBR1Q7SUFDQyxxQkFDRSw4REFBQ0M7UUFBS0MsTUFBSztRQUFLQyxXQUFXLENBQUMsS0FBSyxFQUFFWiwySkFBZSxDQUFDLENBQUM7UUFBRWEsV0FBVTtRQUFLQyx3QkFBd0I7OzBCQUMzRiw4REFBQ0M7O2tDQUVDLDhEQUFDQzt3QkFDQ0MsTUFBSzt3QkFDTEMsU0FBUTs7Ozs7O2tDQUdWLDhEQUFDQzt3QkFBT0MseUJBQXlCOzRCQUFFQyxRQUFRZDt3QkFBbUI7Ozs7Ozs7Ozs7OzswQkFFaEUsOERBQUNlO2dCQUFLVixXQUFXWiwySkFBZTtnQkFBRWMsd0JBQXdCOzBCQUN4RCw0RUFBQ2IsNERBQVNBOztzQ0FDUiw4REFBQ3NCOzRCQUFJVCx3QkFBd0I7c0NBQzFCTDs7Ozs7O3dCQTdDYixLQWdEb0Msa0JBQ3hCLDhEQUFDYzs0QkFBSVQsd0JBQXdCO3NDQUMzQiw0RUFBQ1osb0VBQVVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFPekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYW1iaS1haS8uL2FwcC9sYXlvdXQudHN4Pzk5ODgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBNZXRhZGF0YSB9IGZyb20gJ25leHQnXG5pbXBvcnQgeyBJbnRlciB9IGZyb20gJ25leHQvZm9udC9nb29nbGUnXG5pbXBvcnQgJy4vZ2xvYmFscy5jc3MnXG5pbXBvcnQgeyBQcm92aWRlcnMgfSBmcm9tICdAL2NvbXBvbmVudHMvcHJvdmlkZXJzJ1xuaW1wb3J0IHsgRGVidWdQYW5lbCB9IGZyb20gJ0AvY29tcG9uZW50cy9kZWJ1Zy9EZWJ1Z1BhbmVsJ1xuXG5jb25zdCBpbnRlciA9IEludGVyKHsgc3Vic2V0czogWydsYXRpbiddIH0pXG5cbmV4cG9ydCBjb25zdCBtZXRhZGF0YTogTWV0YWRhdGEgPSB7XG4gIHRpdGxlOiAnQmFtYmkgQUkgLSBHZW5lcmF0ZSBJbWFnZXMgd2l0aCBZb3VyIE93biBBUEkgS2V5cycsXG4gIGRlc2NyaXB0aW9uOiAnQmFtYmkgQUkgaXMgYSBzZWN1cmUsIGZsZXhpYmxlIHBsYXRmb3JtIGZvciBnZW5lcmF0aW5nIGhpZ2gtcXVhbGl0eSBBSSBpbWFnZXMgdXNpbmcgeW91ciBvd24gQVBJIGtleXMgKEJZT0spLiBDb21wYXRpYmxlIHdpdGggT3BlbkFJLCBTdGFiaWxpdHkgQUksIEdvb2dsZSwgYW5kIG1vcmUuJyxcbiAga2V5d29yZHM6ICdBSSBpbWFnZSBnZW5lcmF0aW9uLCBCWU9LLCBPcGVuQUksIERBTEwtRSwgU3RhYmxlIERpZmZ1c2lvbiwgQVBJIGtleXMsIHNlY3VyZSBpbWFnZSBnZW5lcmF0aW9uJyxcbn1cblxuLy8gU2NyaXB0IG1pbmltYWwgcG91ciDDqXZpdGVyIGxlcyBlcnJldXJzIGQnaHlkcmF0YXRpb25cbmNvbnN0IGZpeEh5ZHJhdGlvblNjcmlwdCA9IGBcbiAgKGZ1bmN0aW9uKCkge1xuICAgIHRyeSB7XG4gICAgICAvLyBFbXDDqmNoZXIgbGVzIG1vZGlmaWNhdGlvbnMgYXV0b21hdGlxdWVzIGR1IERPTSBwYXIgbGUgbmF2aWdhdGV1clxuICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNldEF0dHJpYnV0ZSgnZGF0YS1uby1hdXRvLWZvcm1hdCcsICd0cnVlJyk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgY29uc29sZS5lcnJvcignSHlkcmF0aW9uIHNjcmlwdCBlcnJvcjonLCBlKTtcbiAgICB9XG4gIH0pKCk7XG5gO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBSb290TGF5b3V0KHtcbiAgY2hpbGRyZW4sXG59OiB7XG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGVcbn0pIHtcbiAgcmV0dXJuIChcbiAgICA8aHRtbCBsYW5nPVwiZW5cIiBjbGFzc05hbWU9e2BkYXJrICR7aW50ZXIuY2xhc3NOYW1lfWB9IHRyYW5zbGF0ZT1cIm5vXCIgc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nPlxuICAgICAgPGhlYWQ+XG4gICAgICAgIHsvKiBNZXRhIHRhZyBwb3VyIGTDqXNhY3RpdmVyIGxhIGTDqXRlY3Rpb24gYXV0b21hdGlxdWUgZGUgZm9ybWF0IHN1ciBpT1MgKi99XG4gICAgICAgIDxtZXRhXG4gICAgICAgICAgbmFtZT1cImZvcm1hdC1kZXRlY3Rpb25cIlxuICAgICAgICAgIGNvbnRlbnQ9XCJ0ZWxlcGhvbmU9bm8sIGRhdGU9bm8sIGVtYWlsPW5vLCBhZGRyZXNzPW5vXCJcbiAgICAgICAgLz5cbiAgICAgICAgey8qIFNjcmlwdCBwb3VyIGZvcmNlciBsZXMgYXR0cmlidXRzIGF2YW50IGh5ZHJhdGF0aW9uICovfVxuICAgICAgICA8c2NyaXB0IGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogZml4SHlkcmF0aW9uU2NyaXB0IH19IC8+XG4gICAgICA8L2hlYWQ+XG4gICAgICA8Ym9keSBjbGFzc05hbWU9e2ludGVyLmNsYXNzTmFtZX0gc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nPlxuICAgICAgICA8UHJvdmlkZXJzPlxuICAgICAgICAgIDxkaXYgc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nPlxuICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIHsvKiBQYW5uZWF1IGRlIGTDqWJvZ2FnZSAtIHZpc2libGUgdW5pcXVlbWVudCBlbiBtb2RlIGTDqXZlbG9wcGVtZW50ICovfVxuICAgICAgICAgIHtwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50JyAmJiAoXG4gICAgICAgICAgICA8ZGl2IHN1cHByZXNzSHlkcmF0aW9uV2FybmluZz5cbiAgICAgICAgICAgICAgPERlYnVnUGFuZWwgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICl9XG4gICAgICAgIDwvUHJvdmlkZXJzPlxuICAgICAgPC9ib2R5PlxuICAgIDwvaHRtbD5cbiAgKVxufVxuIl0sIm5hbWVzIjpbImludGVyIiwiUHJvdmlkZXJzIiwiRGVidWdQYW5lbCIsIm1ldGFkYXRhIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsImtleXdvcmRzIiwiZml4SHlkcmF0aW9uU2NyaXB0IiwiUm9vdExheW91dCIsImNoaWxkcmVuIiwiaHRtbCIsImxhbmciLCJjbGFzc05hbWUiLCJ0cmFuc2xhdGUiLCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmciLCJoZWFkIiwibWV0YSIsIm5hbWUiLCJjb250ZW50Iiwic2NyaXB0IiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJfX2h0bWwiLCJib2R5IiwiZGl2Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/layout.tsx\n");

/***/ }),

/***/ "(rsc)/./components/auth/LoginForm.tsx":
/*!***************************************!*\
  !*** ./components/auth/LoginForm.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LoginForm: () => (/* binding */ e0)
/* harmony export */ });
/* harmony import */ var next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/build/webpack/loaders/next-flight-loader/module-proxy */ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/module-proxy.js");

const proxy = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`/workspace/hiiiiiiiii/components/auth/LoginForm.tsx`)

// Accessing the __esModule property and exporting $$typeof are required here.
// The __esModule getter forces the proxy target to create the default export
// and the $$typeof value is for rendering logic to determine if the module
// is a client boundary.
const { __esModule, $$typeof } = proxy;
const __default__ = proxy.default;

const e0 = proxy["LoginForm"];


/***/ }),

/***/ "(rsc)/./components/debug/DebugPanel.tsx":
/*!*****************************************!*\
  !*** ./components/debug/DebugPanel.tsx ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DebugPanel: () => (/* binding */ e0)
/* harmony export */ });
/* harmony import */ var next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/build/webpack/loaders/next-flight-loader/module-proxy */ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/module-proxy.js");

const proxy = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`/workspace/hiiiiiiiii/components/debug/DebugPanel.tsx`)

// Accessing the __esModule property and exporting $$typeof are required here.
// The __esModule getter forces the proxy target to create the default export
// and the $$typeof value is for rendering logic to determine if the module
// is a client boundary.
const { __esModule, $$typeof } = proxy;
const __default__ = proxy.default;

const e0 = proxy["DebugPanel"];


/***/ }),

/***/ "(rsc)/./components/providers.tsx":
/*!**********************************!*\
  !*** ./components/providers.tsx ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Providers: () => (/* binding */ e0)
/* harmony export */ });
/* harmony import */ var next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/build/webpack/loaders/next-flight-loader/module-proxy */ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/module-proxy.js");

const proxy = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`/workspace/hiiiiiiiii/components/providers.tsx`)

// Accessing the __esModule property and exporting $$typeof are required here.
// The __esModule getter forces the proxy target to create the default export
// and the $$typeof value is for rendering logic to determine if the module
// is a client boundary.
const { __esModule, $$typeof } = proxy;
const __default__ = proxy.default;

const e0 = proxy["Providers"];


/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-metadata-image-loader.js?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./app/favicon.ico?__next_metadata__":
/*!**********************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-metadata-image-loader.js?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./app/favicon.ico?__next_metadata__ ***!
  \**********************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var next_dist_lib_metadata_get_metadata_route__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/lib/metadata/get-metadata-route */ \"(rsc)/./node_modules/next/dist/lib/metadata/get-metadata-route.js\");\n/* harmony import */ var next_dist_lib_metadata_get_metadata_route__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_metadata_get_metadata_route__WEBPACK_IMPORTED_MODULE_0__);\n  \n\n  /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((props) => {\n    const imageData = {\"type\":\"image/x-icon\",\"sizes\":\"16x16\"}\n    const imageUrl = (0,next_dist_lib_metadata_get_metadata_route__WEBPACK_IMPORTED_MODULE_0__.fillMetadataSegment)(\".\", props.params, \"favicon.ico\")\n\n    return [{\n      ...imageData,\n      url: imageUrl + \"\",\n    }]\n  });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LW1ldGFkYXRhLWltYWdlLWxvYWRlci5qcz90eXBlPWZhdmljb24mc2VnbWVudD0mYmFzZVBhdGg9JnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMhLi9hcHAvZmF2aWNvbi5pY28/X19uZXh0X21ldGFkYXRhX18iLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsRUFBaUY7O0FBRWpGLEVBQUUsaUVBQWU7QUFDakIsdUJBQXVCO0FBQ3ZCLHFCQUFxQiw4RkFBbUI7O0FBRXhDO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2JhbWJpLWFpLy4vYXBwL2Zhdmljb24uaWNvP2ViZjAiXSwic291cmNlc0NvbnRlbnQiOlsiICBpbXBvcnQgeyBmaWxsTWV0YWRhdGFTZWdtZW50IH0gZnJvbSAnbmV4dC9kaXN0L2xpYi9tZXRhZGF0YS9nZXQtbWV0YWRhdGEtcm91dGUnXG5cbiAgZXhwb3J0IGRlZmF1bHQgKHByb3BzKSA9PiB7XG4gICAgY29uc3QgaW1hZ2VEYXRhID0ge1widHlwZVwiOlwiaW1hZ2UveC1pY29uXCIsXCJzaXplc1wiOlwiMTZ4MTZcIn1cbiAgICBjb25zdCBpbWFnZVVybCA9IGZpbGxNZXRhZGF0YVNlZ21lbnQoXCIuXCIsIHByb3BzLnBhcmFtcywgXCJmYXZpY29uLmljb1wiKVxuXG4gICAgcmV0dXJuIFt7XG4gICAgICAuLi5pbWFnZURhdGEsXG4gICAgICB1cmw6IGltYWdlVXJsICsgXCJcIixcbiAgICB9XVxuICB9Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-metadata-image-loader.js?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./app/favicon.ico?__next_metadata__\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/tailwind-merge","vendor-chunks/ws","vendor-chunks/whatwg-url","vendor-chunks/cookie","vendor-chunks/node-gyp-build","vendor-chunks/@radix-ui","vendor-chunks/webidl-conversions","vendor-chunks/next-themes","vendor-chunks/class-variance-authority","vendor-chunks/@swc","vendor-chunks/utf-8-validate","vendor-chunks/bufferutil","vendor-chunks/clsx"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2F(auth)%2Flogin%2Fpage&page=%2F(auth)%2Flogin%2Fpage&appPaths=%2F(auth)%2Flogin%2Fpage&pagePath=private-next-app-dir%2F(auth)%2Flogin%2Fpage.tsx&appDir=%2Fworkspace%2Fhiiiiiiiii%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fworkspace%2Fhiiiiiiiii&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();